{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "definitions": {
    "alert-instance": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "additionalProperties": false,
      "properties": {
        "analysis_key": {
          "description": "Identifies the configuration under which the analysis was executed. For example, in GitHub Actions this includes the workflow filename and job name.",
          "type": "string"
        },
        "classifications": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "commit_sha": {
          "type": "string"
        },
        "environment": {
          "description": "Identifies the variable values associated with the environment in which the analysis that generated this alert instance was performed, such as the language that was analyzed.",
          "type": "string"
        },
        "location": {
          "additionalProperties": false,
          "properties": {
            "end_column": {
              "type": "integer"
            },
            "end_line": {
              "type": "integer"
            },
            "path": {
              "type": "string"
            },
            "start_column": {
              "type": "integer"
            },
            "start_line": {
              "type": "integer"
            }
          },
          "type": "object"
        },
        "message": {
          "additionalProperties": false,
          "properties": {
            "text": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "ref": {
          "description": "The full Git reference, formatted as `refs/heads/<branch name>`.",
          "type": "string"
        },
        "state": {
          "description": "State of a code scanning alert.",
          "enum": [
            "open",
            "dismissed",
            "fixed"
          ],
          "type": "string"
        }
      },
      "required": [
        "ref",
        "analysis_key",
        "environment",
        "state"
      ],
      "title": "Alert Instance",
      "type": "object"
    },
    "app": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "additionalProperties": false,
      "description": "GitHub apps are a new way to extend GitHub. They can be installed directly on organizations and user accounts and granted access to specific repositories. They come with granular permissions and built-in webhooks. GitHub apps are first class actors within GitHub.",
      "properties": {
        "created_at": {
          "format": "date-time",
          "type": "string"
        },
        "description": {
          "type": [
            "string",
            "null"
          ]
        },
        "events": {
          "description": "The list of events for the GitHub app",
          "items": {
            "enum": [
              "branch_protection_rule",
              "check_run",
              "check_suite",
              "code_scanning_alert",
              "commit_comment",
              "content_reference",
              "create",
              "delete",
              "deployment",
              "deployment_review",
              "deployment_status",
              "deploy_key",
              "discussion",
              "discussion_comment",
              "fork",
              "gollum",
              "issues",
              "issue_comment",
              "label",
              "member",
              "membership",
              "milestone",
              "organization",
              "org_block",
              "page_build",
              "project",
              "project_card",
              "project_column",
              "public",
              "pull_request",
              "pull_request_review",
              "pull_request_review_comment",
              "push",
              "registry_package",
              "release",
              "repository",
              "repository_dispatch",
              "secret_scanning_alert",
              "star",
              "status",
              "team",
              "team_add",
              "watch",
              "workflow_dispatch",
              "workflow_run"
            ],
            "type": "string"
          },
          "type": "array"
        },
        "external_url": {
          "format": "uri",
          "type": "string"
        },
        "html_url": {
          "format": "uri",
          "type": "string"
        },
        "id": {
          "description": "Unique identifier of the GitHub app",
          "type": "integer"
        },
        "name": {
          "description": "The name of the GitHub app",
          "type": "string"
        },
        "node_id": {
          "type": "string"
        },
        "owner": {
          "$ref": "#/definitions/user"
        },
        "permissions": {
          "additionalProperties": false,
          "description": "The set of permissions for the GitHub app",
          "properties": {
            "actions": {
              "enum": [
                "read",
                "write"
              ],
              "type": "string"
            },
            "administration": {
              "enum": [
                "read",
                "write"
              ],
              "type": "string"
            },
            "checks": {
              "enum": [
                "read",
                "write"
              ],
              "type": "string"
            },
            "content_references": {
              "enum": [
                "read",
                "write"
              ],
              "type": "string"
            },
            "contents": {
              "enum": [
                "read",
                "write"
              ],
              "type": "string"
            },
            "deployments": {
              "enum": [
                "read",
                "write"
              ],
              "type": "string"
            },
            "discussions": {
              "enum": [
                "read",
                "write"
              ],
              "type": "string"
            },
            "emails": {
              "enum": [
                "read",
                "write"
              ],
              "type": "string"
            },
            "environments": {
              "enum": [
                "read",
                "write"
              ],
              "type": "string"
            },
            "issues": {
              "enum": [
                "read",
                "write"
              ],
              "type": "string"
            },
            "keys": {
              "enum": [
                "read",
                "write"
              ],
              "type": "string"
            },
            "members": {
              "enum": [
                "read",
                "write"
              ],
              "type": "string"
            },
            "metadata": {
              "enum": [
                "read",
                "write"
              ],
              "type": "string"
            },
            "organization_administration": {
              "enum": [
                "read",
                "write"
              ],
              "type": "string"
            },
            "organization_hooks": {
              "enum": [
                "read",
                "write"
              ],
              "type": "string"
            },
            "organization_packages": {
              "enum": [
                "read",
                "write"
              ],
              "type": "string"
            },
            "organization_plan": {
              "enum": [
                "read",
                "write"
              ],
              "type": "string"
            },
            "organization_projects": {
              "enum": [
                "read",
                "write"
              ],
              "type": "string"
            },
            "organization_secrets": {
              "enum": [
                "read",
                "write"
              ],
              "type": "string"
            },
            "organization_self_hosted_runners": {
              "enum": [
                "read",
                "write"
              ],
              "type": "string"
            },
            "organization_user_blocking": {
              "enum": [
                "read",
                "write"
              ],
              "type": "string"
            },
            "packages": {
              "enum": [
                "read",
                "write"
              ],
              "type": "string"
            },
            "pages": {
              "enum": [
                "read",
                "write"
              ],
              "type": "string"
            },
            "pull_requests": {
              "enum": [
                "read",
                "write"
              ],
              "type": "string"
            },
            "repository_hooks": {
              "enum": [
                "read",
                "write"
              ],
              "type": "string"
            },
            "repository_projects": {
              "enum": [
                "read",
                "write"
              ],
              "type": "string"
            },
            "secret_scanning_alerts": {
              "enum": [
                "read",
                "write"
              ],
              "type": "string"
            },
            "secrets": {
              "enum": [
                "read",
                "write"
              ],
              "type": "string"
            },
            "security_events": {
              "enum": [
                "read",
                "write"
              ],
              "type": "string"
            },
            "security_scanning_alert": {
              "enum": [
                "read",
                "write"
              ],
              "type": "string"
            },
            "single_file": {
              "enum": [
                "read",
                "write"
              ],
              "type": "string"
            },
            "statuses": {
              "enum": [
                "read",
                "write"
              ],
              "type": "string"
            },
            "team_discussions": {
              "enum": [
                "read",
                "write"
              ],
              "type": "string"
            },
            "vulnerability_alerts": {
              "enum": [
                "read",
                "write"
              ],
              "type": "string"
            },
            "workflows": {
              "enum": [
                "read",
                "write"
              ],
              "type": "string"
            }
          },
          "type": "object"
        },
        "slug": {
          "description": "The slug name of the GitHub app",
          "type": "string"
        },
        "updated_at": {
          "format": "date-time",
          "type": "string"
        }
      },
      "required": [
        "id",
        "node_id",
        "owner",
        "name",
        "description",
        "external_url",
        "html_url",
        "created_at",
        "updated_at"
      ],
      "title": "App",
      "type": "object"
    },
    "author_association": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "description": "How the author is associated with the repository.",
      "enum": [
        "COLLABORATOR",
        "CONTRIBUTOR",
        "FIRST_TIMER",
        "FIRST_TIME_CONTRIBUTOR",
        "MANNEQUIN",
        "MEMBER",
        "NONE",
        "OWNER"
      ],
      "title": "AuthorAssociation",
      "type": "string"
    },
    "auto-merge": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "additionalProperties": false,
      "description": "The status of auto merging a pull request.",
      "properties": {
        "commit_message": {
          "description": "Commit message for the merge commit.",
          "type": "string"
        },
        "commit_title": {
          "description": "Title for the merge commit message.",
          "type": "string"
        },
        "enabled_by": {
          "$ref": "#/definitions/user"
        },
        "merge_method": {
          "description": "The merge method to use.",
          "enum": [
            "merge",
            "squash",
            "rebase"
          ],
          "type": "string"
        }
      },
      "required": [
        "enabled_by",
        "merge_method",
        "commit_title",
        "commit_message"
      ],
      "title": "PullRequestAutoMerge",
      "type": "object"
    },
    "branch-protection-rule": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "additionalProperties": false,
      "description": "The branch protection rule. Includes a `name` and all the [branch protection settings](https://docs.github.com/en/github/administering-a-repository/defining-the-mergeability-of-pull-requests/about-protected-branches#about-branch-protection-settings) applied to branches that match the name. Binary settings are boolean. Multi-level configurations are one of `off`, `non_admins`, or `everyone`. Actor and build lists are arrays of strings.",
      "properties": {
        "admin_enforced": {
          "type": "boolean"
        },
        "allow_deletions_enforcement_level": {
          "enum": [
            "off",
            "non_admins",
            "everyone"
          ],
          "type": "string"
        },
        "allow_force_pushes_enforcement_level": {
          "enum": [
            "off",
            "non_admins",
            "everyone"
          ],
          "type": "string"
        },
        "authorized_actor_names": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "authorized_actors_only": {
          "type": "boolean"
        },
        "authorized_dismissal_actors_only": {
          "type": "boolean"
        },
        "create_protected": {
          "type": "boolean"
        },
        "created_at": {
          "format": "date-time",
          "type": "string"
        },
        "dismiss_stale_reviews_on_push": {
          "type": "boolean"
        },
        "id": {
          "type": "integer"
        },
        "ignore_approvals_from_contributors": {
          "type": "boolean"
        },
        "linear_history_requirement_enforcement_level": {
          "enum": [
            "off",
            "non_admins",
            "everyone"
          ],
          "type": "string"
        },
        "merge_queue_enforcement_level": {
          "enum": [
            "off",
            "non_admins",
            "everyone"
          ],
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "pull_request_reviews_enforcement_level": {
          "enum": [
            "off",
            "non_admins",
            "everyone"
          ],
          "type": "string"
        },
        "repository_id": {
          "type": "integer"
        },
        "require_code_owner_review": {
          "type": "boolean"
        },
        "required_approving_review_count": {
          "type": "integer"
        },
        "required_conversation_resolution_level": {
          "enum": [
            "off",
            "non_admins",
            "everyone"
          ],
          "type": "string"
        },
        "required_deployments_enforcement_level": {
          "enum": [
            "off",
            "non_admins",
            "everyone"
          ],
          "type": "string"
        },
        "required_status_checks": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "required_status_checks_enforcement_level": {
          "enum": [
            "off",
            "non_admins",
            "everyone"
          ],
          "type": "string"
        },
        "signature_requirement_enforcement_level": {
          "enum": [
            "off",
            "non_admins",
            "everyone"
          ],
          "type": "string"
        },
        "strict_required_status_checks_policy": {
          "type": "boolean"
        },
        "updated_at": {
          "format": "date-time",
          "type": "string"
        }
      },
      "required": [
        "id",
        "repository_id",
        "name",
        "created_at",
        "updated_at",
        "pull_request_reviews_enforcement_level",
        "required_approving_review_count",
        "dismiss_stale_reviews_on_push",
        "require_code_owner_review",
        "authorized_dismissal_actors_only",
        "ignore_approvals_from_contributors",
        "required_status_checks",
        "required_status_checks_enforcement_level",
        "strict_required_status_checks_policy",
        "signature_requirement_enforcement_level",
        "linear_history_requirement_enforcement_level",
        "admin_enforced",
        "allow_force_pushes_enforcement_level",
        "allow_deletions_enforcement_level",
        "merge_queue_enforcement_level",
        "required_deployments_enforcement_level",
        "required_conversation_resolution_level",
        "authorized_actors_only",
        "authorized_actor_names"
      ],
      "title": "branch protection rule",
      "type": "object"
    },
    "branch_protection_rule$created": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "additionalProperties": false,
      "description": "Activity related to a branch protection rule. For more information, see \"[About branch protection rules](https://docs.github.com/en/github/administering-a-repository/defining-the-mergeability-of-pull-requests/about-protected-branches#about-branch-protection-rules).\"",
      "properties": {
        "action": {
          "enum": [
            "created"
          ],
          "type": "string"
        },
        "installation": {
          "$ref": "#/definitions/installation-lite"
        },
        "organization": {
          "$ref": "#/definitions/organization"
        },
        "repository": {
          "$ref": "#/definitions/repository"
        },
        "rule": {
          "$ref": "#/definitions/branch-protection-rule"
        },
        "sender": {
          "$ref": "#/definitions/user"
        }
      },
      "required": [
        "action",
        "rule",
        "repository",
        "sender"
      ],
      "title": "branch protection rule created event",
      "type": "object"
    },
    "branch_protection_rule$deleted": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "additionalProperties": false,
      "description": "Activity related to a branch protection rule. For more information, see \"[About branch protection rules](https://docs.github.com/en/github/administering-a-repository/defining-the-mergeability-of-pull-requests/about-protected-branches#about-branch-protection-rules).\"",
      "properties": {
        "action": {
          "enum": [
            "deleted"
          ],
          "type": "string"
        },
        "installation": {
          "$ref": "#/definitions/installation-lite"
        },
        "organization": {
          "$ref": "#/definitions/organization"
        },
        "repository": {
          "$ref": "#/definitions/repository"
        },
        "rule": {
          "$ref": "#/definitions/branch-protection-rule"
        },
        "sender": {
          "$ref": "#/definitions/user"
        }
      },
      "required": [
        "action",
        "rule",
        "repository",
        "sender"
      ],
      "title": "branch protection rule deleted event",
      "type": "object"
    },
    "branch_protection_rule$edited": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "additionalProperties": false,
      "description": "Activity related to a branch protection rule. For more information, see \"[About branch protection rules](https://docs.github.com/en/github/administering-a-repository/defining-the-mergeability-of-pull-requests/about-protected-branches#about-branch-protection-rules).\"",
      "properties": {
        "action": {
          "enum": [
            "edited"
          ],
          "type": "string"
        },
        "changes": {
          "additionalProperties": false,
          "description": "If the action was `edited`, the changes to the rule.",
          "properties": {
            "authorized_actor_names": {
              "additionalProperties": false,
              "properties": {
                "from": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "required": [
                "from"
              ],
              "type": "object"
            },
            "authorized_actors_only": {
              "additionalProperties": false,
              "properties": {
                "from": {
                  "type": "boolean"
                }
              },
              "required": [
                "from"
              ],
              "type": "object"
            },
            "required_status_checks": {
              "additionalProperties": false,
              "properties": {
                "from": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "required": [
                "from"
              ],
              "type": "object"
            }
          },
          "type": "object"
        },
        "installation": {
          "$ref": "#/definitions/installation-lite"
        },
        "organization": {
          "$ref": "#/definitions/organization"
        },
        "repository": {
          "$ref": "#/definitions/repository"
        },
        "rule": {
          "$ref": "#/definitions/branch-protection-rule"
        },
        "sender": {
          "$ref": "#/definitions/user"
        }
      },
      "required": [
        "action",
        "rule",
        "changes",
        "repository",
        "sender"
      ],
      "title": "branch protection rule edited event",
      "type": "object"
    },
    "branch_protection_rule_event": {
      "oneOf": [
        {
          "$ref": "#/definitions/branch_protection_rule$created"
        },
        {
          "$ref": "#/definitions/branch_protection_rule$deleted"
        },
        {
          "$ref": "#/definitions/branch_protection_rule$edited"
        }
      ]
    },
    "check-run-deployment": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "additionalProperties": false,
      "description": "A deployment to a repository environment. This will only be populated if the check run was created by a GitHub Actions workflow job that references an environment.",
      "properties": {
        "created_at": {
          "format": "date-time",
          "type": "string"
        },
        "description": {
          "type": [
            "string",
            "null"
          ]
        },
        "environment": {
          "type": "string"
        },
        "id": {
          "type": "integer"
        },
        "node_id": {
          "type": "string"
        },
        "original_environment": {
          "type": "string"
        },
        "repository_url": {
          "format": "uri",
          "type": "string"
        },
        "statuses_url": {
          "format": "uri",
          "type": "string"
        },
        "task": {
          "type": "string"
        },
        "updated_at": {
          "format": "date-time",
          "type": "string"
        },
        "url": {
          "format": "uri",
          "type": "string"
        }
      },
      "required": [
        "url",
        "id",
        "node_id",
        "task",
        "original_environment",
        "environment",
        "description",
        "created_at",
        "updated_at",
        "statuses_url",
        "repository_url"
      ],
      "title": "Check Run Deployment",
      "type": "object"
    },
    "check-run-pull-request": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "additionalProperties": false,
      "properties": {
        "base": {
          "additionalProperties": false,
          "properties": {
            "ref": {
              "type": "string"
            },
            "repo": {
              "$ref": "#/definitions/repo-ref"
            },
            "sha": {
              "type": "string"
            }
          },
          "required": [
            "ref",
            "sha",
            "repo"
          ],
          "type": "object"
        },
        "head": {
          "additionalProperties": false,
          "properties": {
            "ref": {
              "type": "string"
            },
            "repo": {
              "$ref": "#/definitions/repo-ref"
            },
            "sha": {
              "type": "string"
            }
          },
          "required": [
            "ref",
            "sha",
            "repo"
          ],
          "type": "object"
        },
        "id": {
          "type": "integer"
        },
        "number": {
          "type": "integer"
        },
        "url": {
          "format": "uri",
          "type": "string"
        }
      },
      "required": [
        "url",
        "id",
        "number",
        "head",
        "base"
      ],
      "title": "Check Run Pull Request",
      "type": "object"
    },
    "check_run$completed": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "additionalProperties": false,
      "properties": {
        "action": {
          "enum": [
            "completed"
          ],
          "type": "string"
        },
        "check_run": {
          "additionalProperties": false,
          "description": "The [check_run](https://docs.github.com/en/rest/reference/checks#get-a-check-run).",
          "properties": {
            "app": {
              "$ref": "#/definitions/app"
            },
            "check_suite": {
              "additionalProperties": false,
              "properties": {
                "after": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "app": {
                  "$ref": "#/definitions/app"
                },
                "before": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "conclusion": {
                  "enum": [
                    "success",
                    "failure",
                    "neutral",
                    "cancelled",
                    "timed_out",
                    "action_required",
                    "stale",
                    null
                  ],
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "created_at": {
                  "format": "date-time",
                  "type": "string"
                },
                "deployment": {
                  "$ref": "#/definitions/check-run-deployment"
                },
                "head_branch": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "head_sha": {
                  "description": "The SHA of the head commit that is being checked.",
                  "type": "string"
                },
                "id": {
                  "description": "The id of the check suite that this check run is part of.",
                  "type": "integer"
                },
                "node_id": {
                  "type": "string"
                },
                "pull_requests": {
                  "description": "An array of pull requests that match this check suite. A pull request matches a check suite if they have the same `head_branch`.  \n  \n**Note:**\n\n*   The `head_sha` of the check suite can differ from the `sha` of the pull request if subsequent pushes are made into the PR.\n*   When the check suite's `head_branch` is in a forked repository it will be `null` and the `pull_requests` array will be empty.",
                  "items": {
                    "$ref": "#/definitions/check-run-pull-request"
                  },
                  "type": "array"
                },
                "status": {
                  "enum": [
                    "in_progress",
                    "completed",
                    "queued"
                  ],
                  "type": "string"
                },
                "updated_at": {
                  "format": "date-time",
                  "type": "string"
                },
                "url": {
                  "format": "uri",
                  "type": "string"
                }
              },
              "required": [
                "id",
                "head_branch",
                "head_sha",
                "status",
                "conclusion",
                "url",
                "before",
                "after",
                "pull_requests",
                "app",
                "created_at",
                "updated_at"
              ],
              "type": "object"
            },
            "completed_at": {
              "description": "The time the check completed. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`.",
              "type": "string"
            },
            "conclusion": {
              "description": "The result of the completed check run. Can be one of `success`, `failure`, `neutral`, `cancelled`, `timed_out`, `action_required` or `stale`. This value will be `null` until the check run has completed.",
              "enum": [
                "success",
                "failure",
                "neutral",
                "cancelled",
                "timed_out",
                "action_required",
                "stale",
                "skipped",
                null
              ],
              "type": [
                "string",
                "null"
              ]
            },
            "deployment": {
              "$ref": "#/definitions/check-run-deployment"
            },
            "details_url": {
              "format": "uri",
              "type": "string"
            },
            "external_id": {
              "type": "string"
            },
            "head_sha": {
              "description": "The SHA of the commit that is being checked.",
              "type": "string"
            },
            "html_url": {
              "format": "uri",
              "type": "string"
            },
            "id": {
              "description": "The id of the check.",
              "type": "integer"
            },
            "name": {
              "description": "The name of the check run.",
              "type": "string"
            },
            "node_id": {
              "type": "string"
            },
            "output": {
              "additionalProperties": false,
              "properties": {
                "annotations_count": {
                  "type": "integer"
                },
                "annotations_url": {
                  "format": "uri",
                  "type": "string"
                },
                "summary": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "text": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "title": {
                  "type": [
                    "string",
                    "null"
                  ]
                }
              },
              "required": [
                "summary",
                "text",
                "annotations_count",
                "annotations_url"
              ],
              "type": "object"
            },
            "pull_requests": {
              "items": {
                "$ref": "#/definitions/check-run-pull-request"
              },
              "type": "array"
            },
            "started_at": {
              "description": "The time that the check run began. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`.",
              "type": "string"
            },
            "status": {
              "description": "The current status of the check run. Can be `queued`, `in_progress`, or `completed`.",
              "enum": [
                "completed"
              ],
              "type": "string"
            },
            "url": {
              "format": "uri",
              "type": "string"
            }
          },
          "required": [
            "id",
            "head_sha",
            "external_id",
            "url",
            "html_url",
            "status",
            "conclusion",
            "started_at",
            "completed_at",
            "output",
            "name",
            "check_suite",
            "app",
            "pull_requests"
          ],
          "type": "object"
        },
        "installation": {
          "$ref": "#/definitions/installation-lite"
        },
        "organization": {
          "$ref": "#/definitions/organization"
        },
        "repository": {
          "$ref": "#/definitions/repository"
        },
        "requested_action": {
          "additionalProperties": false,
          "description": "The action requested by the user.",
          "properties": {
            "identifier": {
              "description": "The integrator reference of the action requested by the user.",
              "type": "string"
            }
          },
          "type": [
            "object",
            "null"
          ]
        },
        "sender": {
          "$ref": "#/definitions/user"
        }
      },
      "required": [
        "action",
        "check_run",
        "repository",
        "sender"
      ],
      "title": "check_run completed event",
      "type": "object"
    },
    "check_run$created": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "additionalProperties": false,
      "properties": {
        "action": {
          "enum": [
            "created"
          ],
          "type": "string"
        },
        "check_run": {
          "additionalProperties": false,
          "description": "The [check_run](https://docs.github.com/en/rest/reference/checks#get-a-check-run).",
          "properties": {
            "app": {
              "$ref": "#/definitions/app"
            },
            "check_suite": {
              "additionalProperties": false,
              "properties": {
                "after": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "app": {
                  "$ref": "#/definitions/app"
                },
                "before": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "conclusion": {
                  "enum": [
                    "success",
                    "failure",
                    "neutral",
                    "cancelled",
                    "timed_out",
                    "action_required",
                    "stale",
                    null
                  ],
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "created_at": {
                  "format": "date-time",
                  "type": "string"
                },
                "deployment": {
                  "$ref": "#/definitions/check-run-deployment"
                },
                "head_branch": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "head_sha": {
                  "description": "The SHA of the head commit that is being checked.",
                  "type": "string"
                },
                "id": {
                  "description": "The id of the check suite that this check run is part of.",
                  "type": "integer"
                },
                "node_id": {
                  "type": "string"
                },
                "pull_requests": {
                  "description": "An array of pull requests that match this check suite. A pull request matches a check suite if they have the same `head_branch`.  \n  \n**Note:**\n\n*   The `head_sha` of the check suite can differ from the `sha` of the pull request if subsequent pushes are made into the PR.\n*   When the check suite's `head_branch` is in a forked repository it will be `null` and the `pull_requests` array will be empty.",
                  "items": {
                    "$ref": "#/definitions/check-run-pull-request"
                  },
                  "type": "array"
                },
                "status": {
                  "enum": [
                    "queued",
                    "in_progress",
                    "completed"
                  ],
                  "type": "string"
                },
                "updated_at": {
                  "format": "date-time",
                  "type": "string"
                },
                "url": {
                  "format": "uri",
                  "type": "string"
                }
              },
              "required": [
                "id",
                "head_branch",
                "head_sha",
                "status",
                "conclusion",
                "url",
                "before",
                "after",
                "pull_requests",
                "app",
                "created_at",
                "updated_at"
              ],
              "type": "object"
            },
            "completed_at": {
              "description": "The time the check completed. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`.",
              "type": [
                "string",
                "null"
              ]
            },
            "conclusion": {
              "description": "The result of the completed check run. Can be one of `success`, `failure`, `neutral`, `cancelled`, `timed_out`, `action_required` or `stale`. This value will be `null` until the check run has completed.",
              "enum": [
                "success",
                "failure",
                "neutral",
                "cancelled",
                "timed_out",
                "action_required",
                "stale",
                "skipped",
                null
              ],
              "type": [
                "string",
                "null"
              ]
            },
            "deployment": {
              "$ref": "#/definitions/check-run-deployment"
            },
            "details_url": {
              "format": "uri",
              "type": "string"
            },
            "external_id": {
              "type": "string"
            },
            "head_sha": {
              "description": "The SHA of the commit that is being checked.",
              "type": "string"
            },
            "html_url": {
              "format": "uri",
              "type": "string"
            },
            "id": {
              "description": "The id of the check.",
              "type": "integer"
            },
            "name": {
              "description": "The name of the check run.",
              "type": "string"
            },
            "node_id": {
              "type": "string"
            },
            "output": {
              "additionalProperties": false,
              "properties": {
                "annotations_count": {
                  "type": "integer"
                },
                "annotations_url": {
                  "format": "uri",
                  "type": "string"
                },
                "summary": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "text": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "title": {
                  "type": [
                    "string",
                    "null"
                  ]
                }
              },
              "required": [
                "summary",
                "text",
                "annotations_count",
                "annotations_url"
              ],
              "type": "object"
            },
            "pull_requests": {
              "items": {
                "$ref": "#/definitions/check-run-pull-request"
              },
              "type": "array"
            },
            "started_at": {
              "description": "The time that the check run began. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`.",
              "type": "string"
            },
            "status": {
              "description": "The current status of the check run. Can be `queued`, `in_progress`, or `completed`.",
              "enum": [
                "queued",
                "in_progress",
                "completed",
                "waiting"
              ],
              "type": "string"
            },
            "url": {
              "format": "uri",
              "type": "string"
            }
          },
          "required": [
            "id",
            "head_sha",
            "external_id",
            "url",
            "html_url",
            "status",
            "conclusion",
            "started_at",
            "completed_at",
            "output",
            "name",
            "check_suite",
            "app",
            "pull_requests"
          ],
          "type": "object"
        },
        "installation": {
          "$ref": "#/definitions/installation-lite"
        },
        "organization": {
          "$ref": "#/definitions/organization"
        },
        "repository": {
          "$ref": "#/definitions/repository"
        },
        "requested_action": {
          "additionalProperties": false,
          "description": "The action requested by the user.",
          "properties": {
            "identifier": {
              "description": "The integrator reference of the action requested by the user.",
              "type": "string"
            }
          },
          "type": [
            "object",
            "null"
          ]
        },
        "sender": {
          "$ref": "#/definitions/user"
        }
      },
      "required": [
        "action",
        "check_run",
        "repository",
        "sender"
      ],
      "title": "check_run created event",
      "type": "object"
    },
    "check_run$requested_action": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "additionalProperties": false,
      "properties": {
        "action": {
          "enum": [
            "requested_action"
          ],
          "type": "string"
        },
        "check_run": {
          "additionalProperties": false,
          "description": "The [check_run](https://docs.github.com/en/rest/reference/checks#get-a-check-run).",
          "properties": {
            "app": {
              "$ref": "#/definitions/app"
            },
            "check_suite": {
              "additionalProperties": false,
              "properties": {
                "after": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "app": {
                  "$ref": "#/definitions/app"
                },
                "before": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "conclusion": {
                  "enum": [
                    "success",
                    "failure",
                    "neutral",
                    "cancelled",
                    "timed_out",
                    "action_required",
                    "stale",
                    null
                  ],
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "created_at": {
                  "format": "date-time",
                  "type": "string"
                },
                "deployment": {
                  "$ref": "#/definitions/check-run-deployment"
                },
                "head_branch": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "head_sha": {
                  "description": "The SHA of the head commit that is being checked.",
                  "type": "string"
                },
                "id": {
                  "description": "The id of the check suite that this check run is part of.",
                  "type": "integer"
                },
                "node_id": {
                  "type": "string"
                },
                "pull_requests": {
                  "description": "An array of pull requests that match this check suite. A pull request matches a check suite if they have the same `head_branch`.  \n  \n**Note:**\n\n*   The `head_sha` of the check suite can differ from the `sha` of the pull request if subsequent pushes are made into the PR.\n*   When the check suite's `head_branch` is in a forked repository it will be `null` and the `pull_requests` array will be empty.",
                  "items": {
                    "$ref": "#/definitions/check-run-pull-request"
                  },
                  "type": "array"
                },
                "status": {
                  "enum": [
                    "queued",
                    "in_progress",
                    "completed",
                    "waiting"
                  ],
                  "type": "string"
                },
                "updated_at": {
                  "format": "date-time",
                  "type": "string"
                },
                "url": {
                  "format": "uri",
                  "type": "string"
                }
              },
              "required": [
                "id",
                "head_branch",
                "head_sha",
                "status",
                "conclusion",
                "url",
                "before",
                "after",
                "pull_requests",
                "app",
                "created_at",
                "updated_at"
              ],
              "type": "object"
            },
            "completed_at": {
              "description": "The time the check completed. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`.",
              "type": [
                "string",
                "null"
              ]
            },
            "conclusion": {
              "description": "The result of the completed check run. Can be one of `success`, `failure`, `neutral`, `cancelled`, `timed_out`, `action_required` or `stale`. This value will be `null` until the check run has completed.",
              "enum": [
                "success",
                "failure",
                "neutral",
                "cancelled",
                "timed_out",
                "action_required",
                "stale",
                "skipped",
                null
              ],
              "type": [
                "string",
                "null"
              ]
            },
            "deployment": {
              "$ref": "#/definitions/check-run-deployment"
            },
            "details_url": {
              "format": "uri",
              "type": "string"
            },
            "external_id": {
              "type": "string"
            },
            "head_sha": {
              "description": "The SHA of the commit that is being checked.",
              "type": "string"
            },
            "html_url": {
              "format": "uri",
              "type": "string"
            },
            "id": {
              "description": "The id of the check.",
              "type": "integer"
            },
            "name": {
              "description": "The name of the check run.",
              "type": "string"
            },
            "node_id": {
              "type": "string"
            },
            "output": {
              "additionalProperties": false,
              "properties": {
                "annotations_count": {
                  "type": "integer"
                },
                "annotations_url": {
                  "format": "uri",
                  "type": "string"
                },
                "summary": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "text": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "title": {
                  "type": [
                    "string",
                    "null"
                  ]
                }
              },
              "required": [
                "summary",
                "text",
                "annotations_count",
                "annotations_url"
              ],
              "type": "object"
            },
            "pull_requests": {
              "items": {
                "$ref": "#/definitions/check-run-pull-request"
              },
              "type": "array"
            },
            "started_at": {
              "description": "The time that the check run began. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`.",
              "type": "string"
            },
            "status": {
              "description": "The current status of the check run. Can be `queued`, `in_progress`, or `completed`.",
              "enum": [
                "queued",
                "in_progress",
                "completed"
              ],
              "type": "string"
            },
            "url": {
              "format": "uri",
              "type": "string"
            }
          },
          "required": [
            "id",
            "head_sha",
            "external_id",
            "url",
            "html_url",
            "status",
            "conclusion",
            "started_at",
            "completed_at",
            "output",
            "name",
            "check_suite",
            "app",
            "pull_requests"
          ],
          "type": "object"
        },
        "installation": {
          "$ref": "#/definitions/installation-lite"
        },
        "organization": {
          "$ref": "#/definitions/organization"
        },
        "repository": {
          "$ref": "#/definitions/repository"
        },
        "requested_action": {
          "additionalProperties": false,
          "description": "The action requested by the user.",
          "properties": {
            "identifier": {
              "description": "The integrator reference of the action requested by the user.",
              "type": "string"
            }
          },
          "type": "object"
        },
        "sender": {
          "$ref": "#/definitions/user"
        }
      },
      "required": [
        "action",
        "check_run",
        "requested_action",
        "repository",
        "sender"
      ],
      "title": "check_run requested_action event",
      "type": "object"
    },
    "check_run$rerequested": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "additionalProperties": false,
      "properties": {
        "action": {
          "enum": [
            "rerequested"
          ],
          "type": "string"
        },
        "check_run": {
          "additionalProperties": false,
          "description": "The [check_run](https://docs.github.com/en/rest/reference/checks#get-a-check-run).",
          "properties": {
            "app": {
              "$ref": "#/definitions/app"
            },
            "check_suite": {
              "additionalProperties": false,
              "properties": {
                "after": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "app": {
                  "$ref": "#/definitions/app"
                },
                "before": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "conclusion": {
                  "enum": [
                    "success",
                    "failure",
                    "neutral",
                    "cancelled",
                    "timed_out",
                    "action_required",
                    "stale"
                  ],
                  "type": "string"
                },
                "created_at": {
                  "format": "date-time",
                  "type": "string"
                },
                "deployment": {
                  "$ref": "#/definitions/check-run-deployment"
                },
                "head_branch": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "head_sha": {
                  "description": "The SHA of the head commit that is being checked.",
                  "type": "string"
                },
                "id": {
                  "description": "The id of the check suite that this check run is part of.",
                  "type": "integer"
                },
                "node_id": {
                  "type": "string"
                },
                "pull_requests": {
                  "description": "An array of pull requests that match this check suite. A pull request matches a check suite if they have the same `head_branch`.  \n  \n**Note:**\n\n*   The `head_sha` of the check suite can differ from the `sha` of the pull request if subsequent pushes are made into the PR.\n*   When the check suite's `head_branch` is in a forked repository it will be `null` and the `pull_requests` array will be empty.",
                  "items": {
                    "$ref": "#/definitions/check-run-pull-request"
                  },
                  "type": "array"
                },
                "status": {
                  "enum": [
                    "completed"
                  ],
                  "type": "string"
                },
                "updated_at": {
                  "format": "date-time",
                  "type": "string"
                },
                "url": {
                  "format": "uri",
                  "type": "string"
                }
              },
              "required": [
                "id",
                "head_branch",
                "head_sha",
                "status",
                "conclusion",
                "url",
                "before",
                "after",
                "pull_requests",
                "app",
                "created_at",
                "updated_at"
              ],
              "type": "object"
            },
            "completed_at": {
              "description": "The time the check completed. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`.",
              "type": "string"
            },
            "conclusion": {
              "description": "The result of the completed check run. Can be one of `success`, `failure`, `neutral`, `cancelled`, `timed_out`, `action_required` or `stale`. This value will be `null` until the check run has `completed`.",
              "enum": [
                "success",
                "failure",
                "neutral",
                "cancelled",
                "timed_out",
                "action_required",
                "stale",
                "skipped",
                null
              ],
              "type": [
                "string",
                "null"
              ]
            },
            "deployment": {
              "$ref": "#/definitions/check-run-deployment"
            },
            "details_url": {
              "format": "uri",
              "type": "string"
            },
            "external_id": {
              "type": "string"
            },
            "head_sha": {
              "description": "The SHA of the commit that is being checked.",
              "type": "string"
            },
            "html_url": {
              "format": "uri",
              "type": "string"
            },
            "id": {
              "description": "The id of the check.",
              "type": "integer"
            },
            "name": {
              "description": "The name of the check.",
              "type": "string"
            },
            "node_id": {
              "type": "string"
            },
            "output": {
              "additionalProperties": false,
              "properties": {
                "annotations_count": {
                  "type": "integer"
                },
                "annotations_url": {
                  "format": "uri",
                  "type": "string"
                },
                "summary": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "text": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "title": {
                  "type": [
                    "string",
                    "null"
                  ]
                }
              },
              "required": [
                "summary",
                "text",
                "annotations_count",
                "annotations_url"
              ],
              "type": "object"
            },
            "pull_requests": {
              "items": {
                "$ref": "#/definitions/check-run-pull-request"
              },
              "type": "array"
            },
            "started_at": {
              "description": "The time that the check run began. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`.",
              "type": "string"
            },
            "status": {
              "description": "The phase of the lifecycle that the check is currently in.",
              "enum": [
                "completed"
              ],
              "type": "string"
            },
            "url": {
              "format": "uri",
              "type": "string"
            }
          },
          "required": [
            "id",
            "head_sha",
            "external_id",
            "url",
            "html_url",
            "status",
            "conclusion",
            "started_at",
            "completed_at",
            "output",
            "name",
            "check_suite",
            "app",
            "pull_requests"
          ],
          "type": "object"
        },
        "installation": {
          "$ref": "#/definitions/installation-lite"
        },
        "organization": {
          "$ref": "#/definitions/organization"
        },
        "repository": {
          "$ref": "#/definitions/repository"
        },
        "requested_action": {
          "additionalProperties": false,
          "description": "The action requested by the user.",
          "properties": {
            "identifier": {
              "description": "The integrator reference of the action requested by the user.",
              "type": "string"
            }
          },
          "type": [
            "object",
            "null"
          ]
        },
        "sender": {
          "$ref": "#/definitions/user"
        }
      },
      "required": [
        "action",
        "check_run",
        "repository",
        "sender"
      ],
      "title": "check_run rerequested event",
      "type": "object"
    },
    "check_run_event": {
      "oneOf": [
        {
          "$ref": "#/definitions/check_run$completed"
        },
        {
          "$ref": "#/definitions/check_run$created"
        },
        {
          "$ref": "#/definitions/check_run$requested_action"
        },
        {
          "$ref": "#/definitions/check_run$rerequested"
        }
      ]
    },
    "check_suite$completed": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "additionalProperties": false,
      "properties": {
        "action": {
          "enum": [
            "completed"
          ],
          "type": "string"
        },
        "check_suite": {
          "additionalProperties": false,
          "description": "The [check_suite](https://docs.github.com/en/rest/reference/checks#suites).",
          "properties": {
            "after": {
              "type": [
                "string",
                "null"
              ]
            },
            "app": {
              "$ref": "#/definitions/app"
            },
            "before": {
              "type": [
                "string",
                "null"
              ]
            },
            "check_runs_url": {
              "format": "uri",
              "type": "string"
            },
            "conclusion": {
              "description": "The summary conclusion for all check runs that are part of the check suite. Can be one of `success`, `failure`, `neutral`, `cancelled`, `timed_out`, `action_required` or `stale`. This value will be `null` until the check run has `completed`.",
              "enum": [
                "success",
                "failure",
                "neutral",
                "cancelled",
                "timed_out",
                "action_required",
                "stale",
                null
              ],
              "type": [
                "string",
                "null"
              ]
            },
            "created_at": {
              "format": "date-time",
              "type": "string"
            },
            "head_branch": {
              "description": "The head branch name the changes are on.",
              "type": [
                "string",
                "null"
              ]
            },
            "head_commit": {
              "$ref": "#/definitions/commit-simple"
            },
            "head_sha": {
              "description": "The SHA of the head commit that is being checked.",
              "type": "string"
            },
            "id": {
              "type": "integer"
            },
            "latest_check_runs_count": {
              "type": "integer"
            },
            "node_id": {
              "type": "string"
            },
            "pull_requests": {
              "description": "An array of pull requests that match this check suite. A pull request matches a check suite if they have the same `head_sha` and `head_branch`. When the check suite's `head_branch` is in a forked repository it will be `null` and the `pull_requests` array will be empty.",
              "items": {
                "$ref": "#/definitions/check-run-pull-request"
              },
              "type": "array"
            },
            "rerequestable": {
              "type": "boolean"
            },
            "runs_rerequestable": {
              "type": "boolean"
            },
            "status": {
              "description": "The summary status for all check runs that are part of the check suite. Can be `requested`, `in_progress`, or `completed`.",
              "enum": [
                "requested",
                "in_progress",
                "completed",
                "queued",
                null
              ],
              "type": [
                "string",
                "null"
              ]
            },
            "updated_at": {
              "format": "date-time",
              "type": "string"
            },
            "url": {
              "description": "URL that points to the check suite API resource.",
              "format": "uri",
              "type": "string"
            }
          },
          "required": [
            "id",
            "node_id",
            "head_branch",
            "head_sha",
            "status",
            "conclusion",
            "url",
            "before",
            "after",
            "pull_requests",
            "app",
            "created_at",
            "updated_at",
            "latest_check_runs_count",
            "check_runs_url",
            "head_commit"
          ],
          "type": "object"
        },
        "installation": {
          "$ref": "#/definitions/installation-lite"
        },
        "organization": {
          "$ref": "#/definitions/organization"
        },
        "repository": {
          "$ref": "#/definitions/repository"
        },
        "sender": {
          "$ref": "#/definitions/user"
        }
      },
      "required": [
        "action",
        "check_suite",
        "repository",
        "sender"
      ],
      "title": "check_suite completed event",
      "type": "object"
    },
    "check_suite$requested": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "additionalProperties": false,
      "properties": {
        "action": {
          "enum": [
            "requested"
          ],
          "type": "string"
        },
        "check_suite": {
          "additionalProperties": false,
          "description": "The [check_suite](https://docs.github.com/en/rest/reference/checks#suites).",
          "properties": {
            "after": {
              "type": [
                "string",
                "null"
              ]
            },
            "app": {
              "$ref": "#/definitions/app"
            },
            "before": {
              "type": [
                "string",
                "null"
              ]
            },
            "check_runs_url": {
              "format": "uri",
              "type": "string"
            },
            "conclusion": {
              "description": "The summary conclusion for all check runs that are part of the check suite. Can be one of `success`, `failure`,` neutral`, `cancelled`, `timed_out`, `action_required` or `stale`. This value will be `null` until the check run has completed.",
              "enum": [
                "success",
                "failure",
                "neutral",
                "cancelled",
                "timed_out",
                "action_required",
                "stale",
                null
              ],
              "type": [
                "string",
                "null"
              ]
            },
            "created_at": {
              "format": "date-time",
              "type": "string"
            },
            "head_branch": {
              "description": "The head branch name the changes are on.",
              "type": [
                "string",
                "null"
              ]
            },
            "head_commit": {
              "$ref": "#/definitions/commit-simple"
            },
            "head_sha": {
              "description": "The SHA of the head commit that is being checked.",
              "type": "string"
            },
            "id": {
              "type": "integer"
            },
            "latest_check_runs_count": {
              "type": "integer"
            },
            "node_id": {
              "type": "string"
            },
            "pull_requests": {
              "description": "An array of pull requests that match this check suite. A pull request matches a check suite if they have the same `head_sha` and `head_branch`. When the check suite's `head_branch` is in a forked repository it will be `null` and the `pull_requests` array will be empty.",
              "items": {
                "$ref": "#/definitions/check-run-pull-request"
              },
              "type": "array"
            },
            "rerequestable": {
              "type": "boolean"
            },
            "runs_rerequestable": {
              "type": "boolean"
            },
            "status": {
              "description": "The summary status for all check runs that are part of the check suite. Can be `requested`, `in_progress`, or `completed`.",
              "enum": [
                "requested",
                "in_progress",
                "completed",
                "queued",
                null
              ],
              "type": [
                "string",
                "null"
              ]
            },
            "updated_at": {
              "format": "date-time",
              "type": "string"
            },
            "url": {
              "description": "URL that points to the check suite API resource.",
              "format": "uri",
              "type": "string"
            }
          },
          "required": [
            "id",
            "node_id",
            "head_branch",
            "head_sha",
            "status",
            "conclusion",
            "url",
            "before",
            "after",
            "pull_requests",
            "app",
            "created_at",
            "updated_at",
            "latest_check_runs_count",
            "check_runs_url",
            "head_commit"
          ],
          "type": "object"
        },
        "installation": {
          "$ref": "#/definitions/installation-lite"
        },
        "organization": {
          "$ref": "#/definitions/organization"
        },
        "repository": {
          "$ref": "#/definitions/repository"
        },
        "sender": {
          "$ref": "#/definitions/user"
        }
      },
      "required": [
        "action",
        "check_suite",
        "repository",
        "sender"
      ],
      "title": "check_suite requested event",
      "type": "object"
    },
    "check_suite$rerequested": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "additionalProperties": false,
      "properties": {
        "action": {
          "enum": [
            "rerequested"
          ],
          "type": "string"
        },
        "check_suite": {
          "additionalProperties": false,
          "description": "The [check_suite](https://docs.github.com/en/rest/reference/checks#suites).",
          "properties": {
            "after": {
              "type": [
                "string",
                "null"
              ]
            },
            "app": {
              "$ref": "#/definitions/app"
            },
            "before": {
              "type": [
                "string",
                "null"
              ]
            },
            "check_runs_url": {
              "format": "uri",
              "type": "string"
            },
            "conclusion": {
              "description": "The summary conclusion for all check runs that are part of the check suite. Can be one of `success`, `failure`,` neutral`, `cancelled`, `timed_out`, `action_required` or `stale`. This value will be `null` until the check run has completed.",
              "enum": [
                "success",
                "failure",
                "neutral",
                "cancelled",
                "timed_out",
                "action_required",
                "stale",
                null
              ],
              "type": [
                "string",
                "null"
              ]
            },
            "created_at": {
              "format": "date-time",
              "type": "string"
            },
            "head_branch": {
              "description": "The head branch name the changes are on.",
              "type": [
                "string",
                "null"
              ]
            },
            "head_commit": {
              "$ref": "#/definitions/commit-simple"
            },
            "head_sha": {
              "description": "The SHA of the head commit that is being checked.",
              "type": "string"
            },
            "id": {
              "type": "integer"
            },
            "latest_check_runs_count": {
              "type": "integer"
            },
            "node_id": {
              "type": "string"
            },
            "pull_requests": {
              "description": "An array of pull requests that match this check suite. A pull request matches a check suite if they have the same `head_sha` and `head_branch`. When the check suite's `head_branch` is in a forked repository it will be `null` and the `pull_requests` array will be empty.",
              "items": {
                "$ref": "#/definitions/check-run-pull-request"
              },
              "type": "array"
            },
            "status": {
              "description": "The summary status for all check runs that are part of the check suite. Can be `requested`, `in_progress`, or `completed`.",
              "enum": [
                "requested",
                "in_progress",
                "completed",
                "queued",
                null
              ],
              "type": [
                "string",
                "null"
              ]
            },
            "updated_at": {
              "format": "date-time",
              "type": "string"
            },
            "url": {
              "description": "URL that points to the check suite API resource.",
              "format": "uri",
              "type": "string"
            }
          },
          "required": [
            "id",
            "node_id",
            "head_branch",
            "head_sha",
            "status",
            "conclusion",
            "url",
            "before",
            "after",
            "pull_requests",
            "app",
            "created_at",
            "updated_at",
            "latest_check_runs_count",
            "check_runs_url",
            "head_commit"
          ],
          "type": "object"
        },
        "installation": {
          "$ref": "#/definitions/installation-lite"
        },
        "organization": {
          "$ref": "#/definitions/organization"
        },
        "repository": {
          "$ref": "#/definitions/repository"
        },
        "sender": {
          "$ref": "#/definitions/user"
        }
      },
      "required": [
        "action",
        "check_suite",
        "repository",
        "sender"
      ],
      "title": "check_suite rerequested event",
      "type": "object"
    },
    "check_suite_event": {
      "oneOf": [
        {
          "$ref": "#/definitions/check_suite$completed"
        },
        {
          "$ref": "#/definitions/check_suite$requested"
        },
        {
          "$ref": "#/definitions/check_suite$rerequested"
        }
      ]
    },
    "code_scanning_alert$appeared_in_branch": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "additionalProperties": false,
      "properties": {
        "action": {
          "enum": [
            "appeared_in_branch"
          ],
          "type": "string"
        },
        "alert": {
          "additionalProperties": false,
          "description": "The code scanning alert involved in the event.",
          "properties": {
            "created_at": {
              "description": "The time that the alert was created in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ.`",
              "format": "date-time",
              "type": "string"
            },
            "dismissed_at": {
              "description": "The time that the alert was dismissed in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`.",
              "format": "date-time",
              "type": [
                "string",
                "null"
              ]
            },
            "dismissed_by": {
              "oneOf": [
                {
                  "$ref": "#/definitions/user"
                },
                {
                  "type": "null"
                }
              ]
            },
            "dismissed_reason": {
              "description": "The reason for dismissing or closing the alert. Can be one of: `false positive`, `won't fix`, and `used in tests`.",
              "enum": [
                "false positive",
                "won't fix",
                "used in tests",
                null
              ],
              "type": [
                "string",
                "null"
              ]
            },
            "html_url": {
              "description": "The GitHub URL of the alert resource.",
              "format": "uri",
              "type": "string"
            },
            "instances": {
              "items": {
                "$ref": "#/definitions/alert-instance"
              },
              "type": "array"
            },
            "most_recent_instance": {
              "$ref": "#/definitions/alert-instance"
            },
            "number": {
              "description": "The code scanning alert number.",
              "type": "integer"
            },
            "rule": {
              "additionalProperties": false,
              "properties": {
                "description": {
                  "description": "A short description of the rule used to detect the alert.",
                  "type": "string"
                },
                "id": {
                  "description": "A unique identifier for the rule used to detect the alert.",
                  "type": "string"
                },
                "severity": {
                  "description": "The severity of the alert.",
                  "enum": [
                    "none",
                    "note",
                    "warning",
                    "error",
                    null
                  ],
                  "type": [
                    "string",
                    "null"
                  ]
                }
              },
              "required": [
                "id",
                "severity",
                "description"
              ],
              "type": "object"
            },
            "state": {
              "description": "State of a code scanning alert.",
              "enum": [
                "open",
                "dismissed",
                "fixed"
              ],
              "type": "string"
            },
            "tool": {
              "additionalProperties": false,
              "properties": {
                "name": {
                  "description": "The name of the tool used to generate the code scanning analysis alert.",
                  "type": "string"
                },
                "version": {
                  "description": "The version of the tool used to detect the alert.",
                  "type": [
                    "string",
                    "null"
                  ]
                }
              },
              "required": [
                "name",
                "version"
              ],
              "type": "object"
            },
            "url": {
              "format": "uri",
              "type": "string"
            }
          },
          "required": [
            "number",
            "created_at",
            "url",
            "html_url",
            "instances",
            "state",
            "dismissed_by",
            "dismissed_at",
            "dismissed_reason",
            "rule",
            "tool"
          ],
          "type": "object"
        },
        "commit_oid": {
          "description": "The commit SHA of the code scanning alert. When the action is `reopened_by_user` or `closed_by_user`, the event was triggered by the `sender` and this value will be empty.",
          "type": "string"
        },
        "installation": {
          "$ref": "#/definitions/installation-lite"
        },
        "organization": {
          "$ref": "#/definitions/organization"
        },
        "ref": {
          "description": "The Git reference of the code scanning alert. When the action is `reopened_by_user` or `closed_by_user`, the event was triggered by the `sender` and this value will be empty.",
          "type": "string"
        },
        "repository": {
          "$ref": "#/definitions/repository"
        },
        "sender": {
          "$ref": "#/definitions/github-org"
        }
      },
      "required": [
        "action",
        "alert",
        "ref",
        "commit_oid",
        "repository",
        "sender"
      ],
      "title": "code_scanning_alert appeared_in_branch event",
      "type": "object"
    },
    "code_scanning_alert$closed_by_user": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "additionalProperties": false,
      "properties": {
        "action": {
          "enum": [
            "closed_by_user"
          ],
          "type": "string"
        },
        "alert": {
          "additionalProperties": false,
          "description": "The code scanning alert involved in the event.",
          "properties": {
            "created_at": {
              "description": "The time that the alert was created in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ.`",
              "format": "date-time",
              "type": "string"
            },
            "dismissed_at": {
              "description": "The time that the alert was dismissed in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`.",
              "format": "date-time",
              "type": "string"
            },
            "dismissed_by": {
              "$ref": "#/definitions/user"
            },
            "dismissed_reason": {
              "description": "The reason for dismissing or closing the alert. Can be one of: `false positive`, `won't fix`, and `used in tests`.",
              "enum": [
                "false positive",
                "won't fix",
                "used in tests",
                null
              ],
              "type": [
                "string",
                "null"
              ]
            },
            "html_url": {
              "description": "The GitHub URL of the alert resource.",
              "format": "uri",
              "type": "string"
            },
            "instances": {
              "items": {
                "allOf": [
                  {
                    "$ref": "#/definitions/alert-instance"
                  },
                  {
                    "properties": {
                      "state": {
                        "enum": [
                          "dismissed"
                        ],
                        "type": "string"
                      }
                    },
                    "required": [
                      "state"
                    ],
                    "tsAdditionalProperties": false,
                    "type": "object"
                  }
                ]
              },
              "type": "array"
            },
            "most_recent_instance": {
              "$ref": "#/definitions/alert-instance"
            },
            "number": {
              "description": "The code scanning alert number.",
              "type": "integer"
            },
            "rule": {
              "additionalProperties": false,
              "properties": {
                "description": {
                  "description": "A short description of the rule used to detect the alert.",
                  "type": "string"
                },
                "full_description": {
                  "type": "string"
                },
                "help": {
                  "type": "null"
                },
                "id": {
                  "description": "A unique identifier for the rule used to detect the alert.",
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "severity": {
                  "description": "The severity of the alert.",
                  "enum": [
                    "none",
                    "note",
                    "warning",
                    "error",
                    null
                  ],
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "tags": {
                  "type": "null"
                }
              },
              "required": [
                "id",
                "severity",
                "description"
              ],
              "type": "object"
            },
            "state": {
              "description": "State of a code scanning alert.",
              "enum": [
                "dismissed"
              ],
              "type": "string"
            },
            "tool": {
              "additionalProperties": false,
              "properties": {
                "guid": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "name": {
                  "description": "The name of the tool used to generate the code scanning analysis alert.",
                  "type": "string"
                },
                "version": {
                  "description": "The version of the tool used to detect the alert.",
                  "type": [
                    "string",
                    "null"
                  ]
                }
              },
              "required": [
                "name",
                "version"
              ],
              "type": "object"
            },
            "url": {
              "format": "uri",
              "type": "string"
            }
          },
          "required": [
            "number",
            "created_at",
            "url",
            "html_url",
            "instances",
            "state",
            "dismissed_by",
            "dismissed_at",
            "dismissed_reason",
            "rule",
            "tool"
          ],
          "type": "object"
        },
        "commit_oid": {
          "description": "The commit SHA of the code scanning alert. When the action is `reopened_by_user` or `closed_by_user`, the event was triggered by the `sender` and this value will be empty.",
          "type": "string"
        },
        "installation": {
          "$ref": "#/definitions/installation-lite"
        },
        "organization": {
          "$ref": "#/definitions/organization"
        },
        "ref": {
          "description": "The Git reference of the code scanning alert. When the action is `reopened_by_user` or `closed_by_user`, the event was triggered by the `sender` and this value will be empty.",
          "type": "string"
        },
        "repository": {
          "$ref": "#/definitions/repository"
        },
        "sender": {
          "$ref": "#/definitions/user"
        }
      },
      "required": [
        "action",
        "alert",
        "ref",
        "commit_oid",
        "repository",
        "sender"
      ],
      "title": "code_scanning_alert closed_by_user event",
      "type": "object"
    },
    "code_scanning_alert$created": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "additionalProperties": false,
      "properties": {
        "action": {
          "enum": [
            "created"
          ],
          "type": "string"
        },
        "alert": {
          "additionalProperties": false,
          "description": "The code scanning alert involved in the event.",
          "properties": {
            "created_at": {
              "description": "The time that the alert was created in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ.`",
              "format": "date-time",
              "type": "string"
            },
            "dismissed_at": {
              "description": "The time that the alert was dismissed in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`.",
              "type": "null"
            },
            "dismissed_by": {
              "type": "null"
            },
            "dismissed_reason": {
              "description": "The reason for dismissing or closing the alert. Can be one of: `false positive`, `won't fix`, and `used in tests`.",
              "type": "null"
            },
            "html_url": {
              "description": "The GitHub URL of the alert resource.",
              "format": "uri",
              "type": "string"
            },
            "instances": {
              "items": {
                "allOf": [
                  {
                    "$ref": "#/definitions/alert-instance"
                  },
                  {
                    "properties": {
                      "state": {
                        "enum": [
                          "open",
                          "dismissed"
                        ],
                        "type": "string"
                      }
                    },
                    "required": [
                      "state"
                    ],
                    "tsAdditionalProperties": false,
                    "type": "object"
                  }
                ]
              },
              "type": "array"
            },
            "most_recent_instance": {
              "$ref": "#/definitions/alert-instance"
            },
            "number": {
              "description": "The code scanning alert number.",
              "type": "integer"
            },
            "rule": {
              "additionalProperties": false,
              "properties": {
                "description": {
                  "description": "A short description of the rule used to detect the alert.",
                  "type": "string"
                },
                "full_description": {
                  "type": "string"
                },
                "help": {
                  "type": "null"
                },
                "id": {
                  "description": "A unique identifier for the rule used to detect the alert.",
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "severity": {
                  "description": "The severity of the alert.",
                  "enum": [
                    "none",
                    "note",
                    "warning",
                    "error",
                    null
                  ],
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "tags": {
                  "type": "null"
                }
              },
              "required": [
                "id",
                "severity",
                "description"
              ],
              "type": "object"
            },
            "state": {
              "description": "State of a code scanning alert.",
              "enum": [
                "open",
                "dismissed"
              ],
              "type": "string"
            },
            "tool": {
              "additionalProperties": false,
              "properties": {
                "guid": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "name": {
                  "description": "The name of the tool used to generate the code scanning analysis alert.",
                  "type": "string"
                },
                "version": {
                  "description": "The version of the tool used to detect the alert.",
                  "type": [
                    "string",
                    "null"
                  ]
                }
              },
              "required": [
                "name",
                "version"
              ],
              "type": "object"
            },
            "url": {
              "format": "uri",
              "type": "string"
            }
          },
          "required": [
            "number",
            "created_at",
            "url",
            "html_url",
            "instances",
            "state",
            "dismissed_by",
            "dismissed_at",
            "dismissed_reason",
            "rule",
            "tool"
          ],
          "type": "object"
        },
        "commit_oid": {
          "description": "The commit SHA of the code scanning alert. When the action is `reopened_by_user` or `closed_by_user`, the event was triggered by the `sender` and this value will be empty.",
          "type": "string"
        },
        "installation": {
          "$ref": "#/definitions/installation-lite"
        },
        "organization": {
          "$ref": "#/definitions/organization"
        },
        "ref": {
          "description": "The Git reference of the code scanning alert. When the action is `reopened_by_user` or `closed_by_user`, the event was triggered by the `sender` and this value will be empty.",
          "type": "string"
        },
        "repository": {
          "$ref": "#/definitions/repository"
        },
        "sender": {
          "$ref": "#/definitions/github-org"
        }
      },
      "required": [
        "action",
        "alert",
        "ref",
        "commit_oid",
        "repository",
        "sender"
      ],
      "title": "code_scanning_alert created event",
      "type": "object"
    },
    "code_scanning_alert$fixed": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "additionalProperties": false,
      "properties": {
        "action": {
          "enum": [
            "fixed"
          ],
          "type": "string"
        },
        "alert": {
          "additionalProperties": false,
          "description": "The code scanning alert involved in the event.",
          "properties": {
            "created_at": {
              "description": "The time that the alert was created in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ.`",
              "format": "date-time",
              "type": "string"
            },
            "dismissed_at": {
              "description": "The time that the alert was dismissed in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`.",
              "format": "date-time",
              "type": [
                "string",
                "null"
              ]
            },
            "dismissed_by": {
              "oneOf": [
                {
                  "$ref": "#/definitions/user"
                },
                {
                  "type": "null"
                }
              ]
            },
            "dismissed_reason": {
              "description": "The reason for dismissing or closing the alert. Can be one of: `false positive`, `won't fix`, and `used in tests`.",
              "enum": [
                "false positive",
                "won't fix",
                "used in tests",
                null
              ],
              "type": [
                "string",
                "null"
              ]
            },
            "html_url": {
              "description": "The GitHub URL of the alert resource.",
              "format": "uri",
              "type": "string"
            },
            "instances": {
              "items": {
                "allOf": [
                  {
                    "$ref": "#/definitions/alert-instance"
                  },
                  {
                    "properties": {
                      "state": {
                        "enum": [
                          "fixed"
                        ],
                        "type": "string"
                      }
                    },
                    "required": [
                      "state"
                    ],
                    "tsAdditionalProperties": false,
                    "type": "object"
                  }
                ]
              },
              "type": "array"
            },
            "instances_url": {
              "format": "uri",
              "type": "string"
            },
            "most_recent_instance": {
              "$ref": "#/definitions/alert-instance"
            },
            "number": {
              "description": "The code scanning alert number.",
              "type": "integer"
            },
            "rule": {
              "additionalProperties": false,
              "properties": {
                "description": {
                  "description": "A short description of the rule used to detect the alert.",
                  "type": "string"
                },
                "full_description": {
                  "type": "string"
                },
                "help": {
                  "type": "null"
                },
                "id": {
                  "description": "A unique identifier for the rule used to detect the alert.",
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "severity": {
                  "description": "The severity of the alert.",
                  "enum": [
                    "none",
                    "note",
                    "warning",
                    "error",
                    null
                  ],
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "tags": {
                  "type": "null"
                }
              },
              "required": [
                "id",
                "severity",
                "description"
              ],
              "type": "object"
            },
            "state": {
              "description": "State of a code scanning alert.",
              "enum": [
                "fixed"
              ],
              "type": "string"
            },
            "tool": {
              "additionalProperties": false,
              "properties": {
                "guid": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "name": {
                  "description": "The name of the tool used to generate the code scanning analysis alert.",
                  "type": "string"
                },
                "version": {
                  "description": "The version of the tool used to detect the alert.",
                  "type": [
                    "string",
                    "null"
                  ]
                }
              },
              "required": [
                "name",
                "version"
              ],
              "type": "object"
            },
            "url": {
              "format": "uri",
              "type": "string"
            }
          },
          "required": [
            "number",
            "created_at",
            "url",
            "html_url",
            "instances",
            "state",
            "dismissed_by",
            "dismissed_at",
            "dismissed_reason",
            "rule",
            "tool"
          ],
          "type": "object"
        },
        "commit_oid": {
          "description": "The commit SHA of the code scanning alert. When the action is `reopened_by_user` or `closed_by_user`, the event was triggered by the `sender` and this value will be empty.",
          "type": "string"
        },
        "installation": {
          "$ref": "#/definitions/installation-lite"
        },
        "organization": {
          "$ref": "#/definitions/organization"
        },
        "ref": {
          "description": "The Git reference of the code scanning alert. When the action is `reopened_by_user` or `closed_by_user`, the event was triggered by the `sender` and this value will be empty.",
          "type": "string"
        },
        "repository": {
          "$ref": "#/definitions/repository"
        },
        "sender": {
          "$ref": "#/definitions/github-org"
        }
      },
      "required": [
        "action",
        "alert",
        "ref",
        "commit_oid",
        "repository",
        "sender"
      ],
      "title": "code_scanning_alert fixed event",
      "type": "object"
    },
    "code_scanning_alert$reopened": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "additionalProperties": false,
      "properties": {
        "action": {
          "enum": [
            "reopened"
          ],
          "type": "string"
        },
        "alert": {
          "additionalProperties": false,
          "description": "The code scanning alert involved in the event.",
          "properties": {
            "created_at": {
              "description": "The time that the alert was created in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ.`",
              "format": "date-time",
              "type": "string"
            },
            "dismissed_at": {
              "description": "The time that the alert was dismissed in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`.",
              "type": "null"
            },
            "dismissed_by": {
              "type": "null"
            },
            "dismissed_reason": {
              "description": "The reason for dismissing or closing the alert. Can be one of: `false positive`, `won't fix`, and `used in tests`.",
              "type": "null"
            },
            "html_url": {
              "description": "The GitHub URL of the alert resource.",
              "format": "uri",
              "type": "string"
            },
            "instances": {
              "items": {
                "allOf": [
                  {
                    "$ref": "#/definitions/alert-instance"
                  },
                  {
                    "properties": {
                      "state": {
                        "enum": [
                          "open"
                        ],
                        "type": "string"
                      }
                    },
                    "required": [
                      "state"
                    ],
                    "tsAdditionalProperties": false,
                    "type": "object"
                  }
                ]
              },
              "type": "array"
            },
            "most_recent_instance": {
              "$ref": "#/definitions/alert-instance"
            },
            "number": {
              "description": "The code scanning alert number.",
              "type": "integer"
            },
            "rule": {
              "additionalProperties": false,
              "properties": {
                "description": {
                  "description": "A short description of the rule used to detect the alert.",
                  "type": "string"
                },
                "full_description": {
                  "type": "string"
                },
                "help": {
                  "type": "null"
                },
                "id": {
                  "description": "A unique identifier for the rule used to detect the alert.",
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "severity": {
                  "description": "The severity of the alert.",
                  "enum": [
                    "none",
                    "note",
                    "warning",
                    "error",
                    null
                  ],
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "tags": {
                  "type": "null"
                }
              },
              "required": [
                "id",
                "severity",
                "description"
              ],
              "type": "object"
            },
            "state": {
              "description": "State of a code scanning alert.",
              "enum": [
                "open",
                "dismissed",
                "fixed"
              ],
              "type": "string"
            },
            "tool": {
              "additionalProperties": false,
              "properties": {
                "guid": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "name": {
                  "description": "The name of the tool used to generate the code scanning analysis alert.",
                  "type": "string"
                },
                "version": {
                  "description": "The version of the tool used to detect the alert.",
                  "type": [
                    "string",
                    "null"
                  ]
                }
              },
              "required": [
                "name",
                "version"
              ],
              "type": "object"
            },
            "url": {
              "format": "uri",
              "type": "string"
            }
          },
          "required": [
            "number",
            "created_at",
            "url",
            "html_url",
            "instances",
            "state",
            "dismissed_by",
            "dismissed_at",
            "dismissed_reason",
            "rule",
            "tool"
          ],
          "type": "object"
        },
        "commit_oid": {
          "description": "The commit SHA of the code scanning alert. When the action is `reopened_by_user` or `closed_by_user`, the event was triggered by the `sender` and this value will be empty.",
          "type": "string"
        },
        "installation": {
          "$ref": "#/definitions/installation-lite"
        },
        "organization": {
          "$ref": "#/definitions/organization"
        },
        "ref": {
          "description": "The Git reference of the code scanning alert. When the action is `reopened_by_user` or `closed_by_user`, the event was triggered by the `sender` and this value will be empty.",
          "type": "string"
        },
        "repository": {
          "$ref": "#/definitions/repository"
        },
        "sender": {
          "$ref": "#/definitions/github-org"
        }
      },
      "required": [
        "action",
        "alert",
        "ref",
        "commit_oid",
        "repository",
        "sender"
      ],
      "title": "code_scanning_alert reopened event",
      "type": "object"
    },
    "code_scanning_alert$reopened_by_user": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "additionalProperties": false,
      "properties": {
        "action": {
          "enum": [
            "reopened_by_user"
          ],
          "type": "string"
        },
        "alert": {
          "additionalProperties": false,
          "description": "The code scanning alert involved in the event.",
          "properties": {
            "created_at": {
              "description": "The time that the alert was created in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ.`",
              "format": "date-time",
              "type": "string"
            },
            "dismissed_at": {
              "description": "The time that the alert was dismissed in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`.",
              "type": "null"
            },
            "dismissed_by": {
              "type": "null"
            },
            "dismissed_reason": {
              "description": "The reason for dismissing or closing the alert. Can be one of: `false positive`, `won't fix`, and `used in tests`.",
              "type": "null"
            },
            "html_url": {
              "description": "The GitHub URL of the alert resource.",
              "format": "uri",
              "type": "string"
            },
            "instances": {
              "items": {
                "allOf": [
                  {
                    "$ref": "#/definitions/alert-instance"
                  },
                  {
                    "properties": {
                      "state": {
                        "enum": [
                          "open"
                        ],
                        "type": "string"
                      }
                    },
                    "required": [
                      "state"
                    ],
                    "tsAdditionalProperties": false,
                    "type": "object"
                  }
                ]
              },
              "type": "array"
            },
            "most_recent_instance": {
              "$ref": "#/definitions/alert-instance"
            },
            "number": {
              "description": "The code scanning alert number.",
              "type": "integer"
            },
            "rule": {
              "additionalProperties": false,
              "properties": {
                "description": {
                  "description": "A short description of the rule used to detect the alert.",
                  "type": "string"
                },
                "id": {
                  "description": "A unique identifier for the rule used to detect the alert.",
                  "type": "string"
                },
                "severity": {
                  "description": "The severity of the alert.",
                  "enum": [
                    "none",
                    "note",
                    "warning",
                    "error",
                    null
                  ],
                  "type": [
                    "string",
                    "null"
                  ]
                }
              },
              "required": [
                "id",
                "severity",
                "description"
              ],
              "type": "object"
            },
            "state": {
              "description": "State of a code scanning alert.",
              "enum": [
                "open"
              ],
              "type": "string"
            },
            "tool": {
              "additionalProperties": false,
              "properties": {
                "name": {
                  "description": "The name of the tool used to generate the code scanning analysis alert.",
                  "type": "string"
                },
                "version": {
                  "description": "The version of the tool used to detect the alert.",
                  "type": [
                    "string",
                    "null"
                  ]
                }
              },
              "required": [
                "name",
                "version"
              ],
              "type": "object"
            },
            "url": {
              "format": "uri",
              "type": "string"
            }
          },
          "required": [
            "number",
            "created_at",
            "url",
            "html_url",
            "instances",
            "state",
            "dismissed_by",
            "dismissed_at",
            "dismissed_reason",
            "rule",
            "tool"
          ],
          "type": "object"
        },
        "commit_oid": {
          "description": "The commit SHA of the code scanning alert. When the action is `reopened_by_user` or `closed_by_user`, the event was triggered by the `sender` and this value will be empty.",
          "type": "string"
        },
        "installation": {
          "$ref": "#/definitions/installation-lite"
        },
        "organization": {
          "$ref": "#/definitions/organization"
        },
        "ref": {
          "description": "The Git reference of the code scanning alert. When the action is `reopened_by_user` or `closed_by_user`, the event was triggered by the `sender` and this value will be empty.",
          "type": "string"
        },
        "repository": {
          "$ref": "#/definitions/repository"
        },
        "sender": {
          "$ref": "#/definitions/user"
        }
      },
      "required": [
        "action",
        "alert",
        "ref",
        "commit_oid",
        "repository",
        "sender"
      ],
      "title": "code_scanning_alert reopened_by_user event",
      "type": "object"
    },
    "code_scanning_alert_event": {
      "oneOf": [
        {
          "$ref": "#/definitions/code_scanning_alert$appeared_in_branch"
        },
        {
          "$ref": "#/definitions/code_scanning_alert$closed_by_user"
        },
        {
          "$ref": "#/definitions/code_scanning_alert$created"
        },
        {
          "$ref": "#/definitions/code_scanning_alert$fixed"
        },
        {
          "$ref": "#/definitions/code_scanning_alert$reopened"
        },
        {
          "$ref": "#/definitions/code_scanning_alert$reopened_by_user"
        }
      ]
    },
    "commit": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "additionalProperties": false,
      "properties": {
        "added": {
          "description": "An array of files added in the commit.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "author": {
          "$ref": "#/definitions/committer"
        },
        "committer": {
          "$ref": "#/definitions/committer"
        },
        "distinct": {
          "description": "Whether this commit is distinct from any that have been pushed before.",
          "type": "boolean"
        },
        "id": {
          "type": "string"
        },
        "message": {
          "description": "The commit message.",
          "type": "string"
        },
        "modified": {
          "description": "An array of files modified by the commit.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "removed": {
          "description": "An array of files removed in the commit.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "timestamp": {
          "description": "The ISO 8601 timestamp of the commit.",
          "format": "date-time",
          "type": "string"
        },
        "tree_id": {
          "type": "string"
        },
        "url": {
          "description": "URL that points to the commit API resource.",
          "format": "uri",
          "type": "string"
        }
      },
      "required": [
        "id",
        "tree_id",
        "distinct",
        "message",
        "timestamp",
        "url",
        "author",
        "committer",
        "added",
        "removed",
        "modified"
      ],
      "title": "Commit",
      "type": "object"
    },
    "commit-simple": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "additionalProperties": false,
      "properties": {
        "author": {
          "$ref": "#/definitions/committer"
        },
        "committer": {
          "$ref": "#/definitions/committer"
        },
        "id": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "timestamp": {
          "type": "string"
        },
        "tree_id": {
          "type": "string"
        }
      },
      "required": [
        "id",
        "tree_id",
        "message",
        "timestamp",
        "author",
        "committer"
      ],
      "title": "SimpleCommit",
      "type": "object"
    },
    "commit_comment$created": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "additionalProperties": false,
      "description": "A commit comment is created. The type of activity is specified in the `action` property. ",
      "properties": {
        "action": {
          "description": "The action performed. Can be `created`.",
          "enum": [
            "created"
          ],
          "type": "string"
        },
        "comment": {
          "additionalProperties": false,
          "description": "The [commit comment](https://docs.github.com/en/rest/reference/repos#get-a-commit-comment) resource.",
          "properties": {
            "author_association": {
              "$ref": "#/definitions/author_association"
            },
            "body": {
              "description": "The text of the comment.",
              "type": "string"
            },
            "commit_id": {
              "description": "The SHA of the commit to which the comment applies.",
              "type": "string"
            },
            "created_at": {
              "type": "string"
            },
            "html_url": {
              "format": "uri",
              "type": "string"
            },
            "id": {
              "description": "The ID of the commit comment.",
              "type": "integer"
            },
            "line": {
              "description": "The line of the blob to which the comment applies. The last line of the range for a multi-line comment",
              "type": [
                "integer",
                "null"
              ]
            },
            "node_id": {
              "description": "The node ID of the commit comment.",
              "type": "string"
            },
            "path": {
              "description": "The relative path of the file to which the comment applies.",
              "type": [
                "string",
                "null"
              ]
            },
            "position": {
              "description": "The line index in the diff to which the comment applies.",
              "type": [
                "integer",
                "null"
              ]
            },
            "updated_at": {
              "type": "string"
            },
            "url": {
              "format": "uri",
              "type": "string"
            },
            "user": {
              "$ref": "#/definitions/user"
            }
          },
          "required": [
            "url",
            "html_url",
            "id",
            "node_id",
            "user",
            "position",
            "line",
            "path",
            "commit_id",
            "created_at",
            "updated_at",
            "author_association",
            "body"
          ],
          "type": "object"
        },
        "installation": {
          "$ref": "#/definitions/installation-lite"
        },
        "organization": {
          "$ref": "#/definitions/organization"
        },
        "repository": {
          "$ref": "#/definitions/repository"
        },
        "sender": {
          "$ref": "#/definitions/user"
        }
      },
      "required": [
        "action",
        "comment",
        "repository",
        "sender"
      ],
      "title": "commit_comment created event",
      "type": "object"
    },
    "commit_comment_event": {
      "oneOf": [
        {
          "$ref": "#/definitions/commit_comment$created"
        }
      ]
    },
    "committer": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "additionalProperties": false,
      "description": "Metaproperties for Git author/committer information.",
      "properties": {
        "date": {
          "format": "date-time",
          "type": "string"
        },
        "email": {
          "description": "The git author's email address.",
          "oneOf": [
            {
              "format": "email",
              "type": "string"
            },
            {
              "type": "null"
            }
          ]
        },
        "name": {
          "description": "The git author's name.",
          "type": "string"
        },
        "username": {
          "type": "string"
        }
      },
      "required": [
        "email",
        "name"
      ],
      "title": "Committer",
      "type": "object"
    },
    "create$event": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "additionalProperties": false,
      "description": "A Git branch or tag is created.",
      "properties": {
        "description": {
          "description": "The repository's current description.",
          "type": [
            "string",
            "null"
          ]
        },
        "installation": {
          "$ref": "#/definitions/installation-lite"
        },
        "master_branch": {
          "description": "The name of the repository's default branch (usually `main`).",
          "type": "string"
        },
        "organization": {
          "$ref": "#/definitions/organization"
        },
        "pusher_type": {
          "description": "The pusher type for the event. Can be either `user` or a deploy key.",
          "type": "string"
        },
        "ref": {
          "description": "The [`git ref`](https://docs.github.com/en/rest/reference/git#get-a-reference) resource.",
          "type": "string"
        },
        "ref_type": {
          "description": "The type of Git ref object created in the repository. Can be either `branch` or `tag`.",
          "enum": [
            "tag",
            "branch"
          ],
          "type": "string"
        },
        "repository": {
          "$ref": "#/definitions/repository"
        },
        "sender": {
          "$ref": "#/definitions/user"
        }
      },
      "required": [
        "ref",
        "ref_type",
        "master_branch",
        "description",
        "pusher_type",
        "repository",
        "sender"
      ],
      "title": "create event",
      "type": "object"
    },
    "delete$event": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "additionalProperties": false,
      "description": "A Git branch or tag is deleted.",
      "properties": {
        "installation": {
          "$ref": "#/definitions/installation-lite"
        },
        "organization": {
          "$ref": "#/definitions/organization"
        },
        "pusher_type": {
          "description": "The pusher type for the event. Can be either `user` or a deploy key.",
          "type": "string"
        },
        "ref": {
          "description": "The [`git ref`](https://docs.github.com/en/rest/reference/git#get-a-reference) resource.",
          "type": "string"
        },
        "ref_type": {
          "description": "The type of Git ref object deleted in the repository. Can be either `branch` or `tag`.",
          "enum": [
            "tag",
            "branch"
          ],
          "type": "string"
        },
        "repository": {
          "$ref": "#/definitions/repository"
        },
        "sender": {
          "$ref": "#/definitions/user"
        }
      },
      "required": [
        "ref",
        "ref_type",
        "pusher_type",
        "repository",
        "sender"
      ],
      "title": "delete event",
      "type": "object"
    },
    "deploy_key$created": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "additionalProperties": false,
      "properties": {
        "action": {
          "enum": [
            "created"
          ],
          "type": "string"
        },
        "installation": {
          "$ref": "#/definitions/installation-lite"
        },
        "key": {
          "additionalProperties": false,
          "description": "The [`deploy key`](https://docs.github.com/en/rest/reference/deployments#get-a-deploy-key) resource.",
          "properties": {
            "created_at": {
              "type": "string"
            },
            "id": {
              "type": "integer"
            },
            "key": {
              "type": "string"
            },
            "read_only": {
              "type": "boolean"
            },
            "title": {
              "type": "string"
            },
            "url": {
              "format": "uri",
              "type": "string"
            },
            "verified": {
              "type": "boolean"
            }
          },
          "required": [
            "id",
            "key",
            "url",
            "title",
            "verified",
            "created_at",
            "read_only"
          ],
          "type": "object"
        },
        "organization": {
          "$ref": "#/definitions/organization"
        },
        "repository": {
          "$ref": "#/definitions/repository"
        },
        "sender": {
          "$ref": "#/definitions/user"
        }
      },
      "required": [
        "action",
        "key",
        "repository",
        "sender"
      ],
      "title": "deploy_key created event",
      "type": "object"
    },
    "deploy_key$deleted": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "additionalProperties": false,
      "properties": {
        "action": {
          "enum": [
            "deleted"
          ],
          "type": "string"
        },
        "installation": {
          "$ref": "#/definitions/installation-lite"
        },
        "key": {
          "additionalProperties": false,
          "description": "The [`deploy key`](https://docs.github.com/en/rest/reference/deployments#get-a-deploy-key) resource.",
          "properties": {
            "created_at": {
              "type": "string"
            },
            "id": {
              "type": "integer"
            },
            "key": {
              "type": "string"
            },
            "read_only": {
              "type": "boolean"
            },
            "title": {
              "type": "string"
            },
            "url": {
              "format": "uri",
              "type": "string"
            },
            "verified": {
              "type": "boolean"
            }
          },
          "required": [
            "id",
            "key",
            "url",
            "title",
            "verified",
            "created_at",
            "read_only"
          ],
          "type": "object"
        },
        "organization": {
          "$ref": "#/definitions/organization"
        },
        "repository": {
          "$ref": "#/definitions/repository"
        },
        "sender": {
          "$ref": "#/definitions/user"
        }
      },
      "required": [
        "action",
        "key",
        "repository",
        "sender"
      ],
      "title": "deploy_key deleted event",
      "type": "object"
    },
    "deploy_key_event": {
      "oneOf": [
        {
          "$ref": "#/definitions/deploy_key$created"
        },
        {
          "$ref": "#/definitions/deploy_key$deleted"
        }
      ]
    },
    "deployment": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "additionalProperties": false,
      "description": "The [deployment](https://docs.github.com/en/rest/reference/deployments#list-deployments).",
      "properties": {
        "created_at": {
          "type": "string"
        },
        "creator": {
          "$ref": "#/definitions/user"
        },
        "description": {
          "type": [
            "string",
            "null"
          ]
        },
        "environment": {
          "type": "string"
        },
        "id": {
          "type": "integer"
        },
        "node_id": {
          "type": "string"
        },
        "original_environment": {
          "type": "string"
        },
        "payload": {
          "additionalProperties": true,
          "required": [],
          "type": "object"
        },
        "performed_via_github_app": {
          "oneOf": [
            {
              "$ref": "#/definitions/app"
            },
            {
              "type": "null"
            }
          ]
        },
        "production_environment": {
          "type": "boolean"
        },
        "ref": {
          "type": "string"
        },
        "repository_url": {
          "format": "uri",
          "type": "string"
        },
        "sha": {
          "type": "string"
        },
        "statuses_url": {
          "format": "uri",
          "type": "string"
        },
        "task": {
          "type": "string"
        },
        "transient_environment": {
          "type": "boolean"
        },
        "updated_at": {
          "type": "string"
        },
        "url": {
          "format": "uri",
          "type": "string"
        }
      },
      "required": [
        "url",
        "id",
        "node_id",
        "sha",
        "ref",
        "task",
        "payload",
        "original_environment",
        "environment",
        "description",
        "creator",
        "created_at",
        "updated_at",
        "statuses_url",
        "repository_url"
      ],
      "title": "Deployment",
      "type": "object"
    },
    "deployment$created": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "additionalProperties": false,
      "properties": {
        "action": {
          "enum": [
            "created"
          ],
          "type": "string"
        },
        "deployment": {
          "$ref": "#/definitions/deployment"
        },
        "installation": {
          "$ref": "#/definitions/installation-lite"
        },
        "organization": {
          "$ref": "#/definitions/organization"
        },
        "repository": {
          "$ref": "#/definitions/repository"
        },
        "sender": {
          "$ref": "#/definitions/user"
        },
        "workflow": {
          "oneOf": [
            {
              "$ref": "#/definitions/workflow"
            },
            {
              "type": "null"
            }
          ]
        },
        "workflow_run": {
          "oneOf": [
            {
              "$ref": "#/definitions/deployment-workflow-run"
            },
            {
              "type": "null"
            }
          ]
        }
      },
      "required": [
        "action",
        "deployment",
        "workflow",
        "workflow_run",
        "repository",
        "sender"
      ],
      "title": "deployment created event",
      "type": "object"
    },
    "deployment-workflow-run": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "additionalProperties": false,
      "properties": {
        "actor": {
          "$ref": "#/definitions/user"
        },
        "check_suite_id": {
          "type": "integer"
        },
        "check_suite_node_id": {
          "type": "string"
        },
        "conclusion": {
          "enum": [
            "success",
            "failure",
            "neutral",
            "cancelled",
            "timed_out",
            "action_required",
            "stale",
            null
          ],
          "type": [
            "string",
            "null"
          ]
        },
        "created_at": {
          "format": "date-time",
          "type": "string"
        },
        "event": {
          "type": "string"
        },
        "head_branch": {
          "type": "string"
        },
        "head_sha": {
          "type": "string"
        },
        "html_url": {
          "format": "uri",
          "type": "string"
        },
        "id": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "node_id": {
          "type": "string"
        },
        "path": {
          "type": "string"
        },
        "pull_requests": {
          "items": {
            "$ref": "#/definitions/check-run-pull-request"
          },
          "type": "array"
        },
        "run_attempt": {
          "type": "integer"
        },
        "run_number": {
          "type": "integer"
        },
        "run_started_at": {
          "format": "date-time",
          "type": "string"
        },
        "status": {
          "enum": [
            "requested",
            "in_progress",
            "completed",
            "queued"
          ],
          "type": "string"
        },
        "triggering_actor": {
          "$ref": "#/definitions/user"
        },
        "updated_at": {
          "format": "date-time",
          "type": "string"
        },
        "url": {
          "format": "uri",
          "type": "string"
        },
        "workflow_id": {
          "type": "integer"
        }
      },
      "required": [
        "id",
        "name",
        "node_id",
        "head_branch",
        "head_sha",
        "run_number",
        "event",
        "status",
        "conclusion",
        "workflow_id",
        "check_suite_id",
        "check_suite_node_id",
        "url",
        "html_url",
        "pull_requests",
        "created_at",
        "updated_at",
        "actor",
        "triggering_actor",
        "run_attempt",
        "run_started_at"
      ],
      "title": "Deployment Workflow Run",
      "type": "object"
    },
    "deployment_event": {
      "oneOf": [
        {
          "$ref": "#/definitions/deployment$created"
        }
      ]
    },
    "deployment_status$created": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "additionalProperties": false,
      "properties": {
        "action": {
          "enum": [
            "created"
          ],
          "type": "string"
        },
        "check_run": {
          "additionalProperties": false,
          "properties": {
            "completed_at": {
              "format": "date-time",
              "type": [
                "string",
                "null"
              ]
            },
            "conclusion": {
              "description": "The result of the completed check run. Can be one of `success`, `failure`, `neutral`, `cancelled`, `timed_out`, `action_required` or `stale`. This value will be `null` until the check run has completed.",
              "enum": [
                "success",
                "failure",
                "neutral",
                "cancelled",
                "timed_out",
                "action_required",
                "stale",
                "skipped",
                null
              ],
              "type": [
                "string",
                "null"
              ]
            },
            "details_url": {
              "format": "uri",
              "type": "string"
            },
            "external_id": {
              "type": "string"
            },
            "head_sha": {
              "description": "The SHA of the commit that is being checked.",
              "type": "string"
            },
            "html_url": {
              "format": "uri",
              "type": "string"
            },
            "id": {
              "description": "The id of the check.",
              "type": "integer"
            },
            "name": {
              "description": "The name of the check run.",
              "type": "string"
            },
            "node_id": {
              "type": "string"
            },
            "started_at": {
              "format": "date-time",
              "type": "string"
            },
            "status": {
              "description": "The current status of the check run. Can be `queued`, `in_progress`, or `completed`.",
              "enum": [
                "queued",
                "in_progress",
                "completed",
                "waiting"
              ],
              "type": "string"
            },
            "url": {
              "format": "uri",
              "type": "string"
            }
          },
          "required": [
            "id",
            "name",
            "node_id",
            "head_sha",
            "external_id",
            "url",
            "html_url",
            "details_url",
            "status",
            "conclusion",
            "started_at",
            "completed_at"
          ],
          "type": "object"
        },
        "deployment": {
          "$ref": "#/definitions/deployment"
        },
        "deployment_status": {
          "additionalProperties": false,
          "description": "The [deployment status](https://docs.github.com/en/rest/reference/deployments#list-deployment-statuses).",
          "properties": {
            "created_at": {
              "type": "string"
            },
            "creator": {
              "$ref": "#/definitions/user"
            },
            "deployment_url": {
              "format": "uri",
              "type": "string"
            },
            "description": {
              "description": "The optional human-readable description added to the status.",
              "type": "string"
            },
            "environment": {
              "type": "string"
            },
            "environment_url": {
              "oneOf": [
                {
                  "format": "uri",
                  "type": "string"
                },
                {
                  "enum": [
                    ""
                  ],
                  "type": "string"
                }
              ]
            },
            "id": {
              "type": "integer"
            },
            "log_url": {
              "format": "uri",
              "type": "string"
            },
            "node_id": {
              "type": "string"
            },
            "performed_via_github_app": {
              "oneOf": [
                {
                  "$ref": "#/definitions/app"
                },
                {
                  "type": "null"
                }
              ]
            },
            "repository_url": {
              "format": "uri",
              "type": "string"
            },
            "state": {
              "description": "The new state. Can be `pending`, `success`, `failure`, or `error`.",
              "type": "string"
            },
            "target_url": {
              "description": "The optional link added to the status.",
              "type": "string"
            },
            "updated_at": {
              "type": "string"
            },
            "url": {
              "format": "uri",
              "type": "string"
            }
          },
          "required": [
            "url",
            "id",
            "node_id",
            "state",
            "creator",
            "description",
            "environment",
            "target_url",
            "created_at",
            "updated_at",
            "deployment_url",
            "repository_url"
          ],
          "type": "object"
        },
        "installation": {
          "$ref": "#/definitions/installation-lite"
        },
        "organization": {
          "$ref": "#/definitions/organization"
        },
        "repository": {
          "$ref": "#/definitions/repository"
        },
        "sender": {
          "$ref": "#/definitions/user"
        },
        "workflow": {
          "$ref": "#/definitions/workflow"
        },
        "workflow_run": {
          "$ref": "#/definitions/deployment-workflow-run"
        }
      },
      "required": [
        "action",
        "deployment_status",
        "deployment",
        "repository",
        "sender"
      ],
      "title": "deployment_status created event",
      "type": "object"
    },
    "deployment_status_event": {
      "oneOf": [
        {
          "$ref": "#/definitions/deployment_status$created"
        }
      ]
    },
    "discussion": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "additionalProperties": false,
      "properties": {
        "active_lock_reason": {
          "type": [
            "string",
            "null"
          ]
        },
        "answer_chosen_at": {
          "type": [
            "string",
            "null"
          ]
        },
        "answer_chosen_by": {
          "oneOf": [
            {
              "$ref": "#/definitions/user"
            },
            {
              "type": "null"
            }
          ]
        },
        "answer_html_url": {
          "type": [
            "string",
            "null"
          ]
        },
        "author_association": {
          "$ref": "#/definitions/author_association"
        },
        "body": {
          "type": "string"
        },
        "category": {
          "additionalProperties": false,
          "properties": {
            "created_at": {
              "format": "date-time",
              "type": "string"
            },
            "description": {
              "type": "string"
            },
            "emoji": {
              "type": "string"
            },
            "id": {
              "type": "integer"
            },
            "is_answerable": {
              "type": "boolean"
            },
            "name": {
              "type": "string"
            },
            "repository_id": {
              "type": "integer"
            },
            "slug": {
              "type": "string"
            },
            "updated_at": {
              "type": "string"
            }
          },
          "required": [
            "id",
            "repository_id",
            "emoji",
            "name",
            "description",
            "created_at",
            "updated_at",
            "slug",
            "is_answerable"
          ],
          "type": "object"
        },
        "comments": {
          "type": "integer"
        },
        "created_at": {
          "format": "date-time",
          "type": "string"
        },
        "html_url": {
          "type": "string"
        },
        "id": {
          "type": "integer"
        },
        "locked": {
          "type": "boolean"
        },
        "node_id": {
          "type": "string"
        },
        "number": {
          "type": "integer"
        },
        "reactions": {
          "$ref": "#/definitions/reactions"
        },
        "repository_url": {
          "type": "string"
        },
        "state": {
          "enum": [
            "open",
            "locked",
            "converting"
          ],
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "updated_at": {
          "format": "date-time",
          "type": "string"
        },
        "user": {
          "$ref": "#/definitions/user"
        }
      },
      "required": [
        "repository_url",
        "category",
        "answer_html_url",
        "answer_chosen_at",
        "answer_chosen_by",
        "html_url",
        "id",
        "node_id",
        "number",
        "title",
        "user",
        "state",
        "locked",
        "comments",
        "created_at",
        "updated_at",
        "author_association",
        "active_lock_reason",
        "body"
      ],
      "title": "Discussion",
      "type": "object"
    },
    "discussion$answered": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "additionalProperties": false,
      "properties": {
        "action": {
          "enum": [
            "answered"
          ],
          "type": "string"
        },
        "answer": {
          "additionalProperties": false,
          "properties": {
            "author_association": {
              "$ref": "#/definitions/author_association"
            },
            "body": {
              "type": "string"
            },
            "child_comment_count": {
              "type": "integer"
            },
            "created_at": {
              "format": "date-time",
              "type": "string"
            },
            "discussion_id": {
              "type": "integer"
            },
            "html_url": {
              "type": "string"
            },
            "id": {
              "type": "integer"
            },
            "node_id": {
              "type": "string"
            },
            "parent_id": {
              "type": "null"
            },
            "repository_url": {
              "type": "string"
            },
            "updated_at": {
              "format": "date-time",
              "type": "string"
            },
            "user": {
              "$ref": "#/definitions/user"
            }
          },
          "required": [
            "id",
            "node_id",
            "html_url",
            "parent_id",
            "child_comment_count",
            "repository_url",
            "discussion_id",
            "author_association",
            "user",
            "created_at",
            "updated_at",
            "body"
          ],
          "type": "object"
        },
        "discussion": {
          "allOf": [
            {
              "$ref": "#/definitions/discussion"
            },
            {
              "properties": {
                "answer_chosen_at": {
                  "format": "date-time",
                  "type": "string"
                },
                "answer_chosen_by": {
                  "$ref": "#/definitions/user"
                },
                "answer_html_url": {
                  "format": "uri",
                  "type": "string"
                },
                "category": {
                  "properties": {
                    "is_answerable": {
                      "enum": [
                        true
                      ],
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "is_answerable"
                  ],
                  "tsAdditionalProperties": false,
                  "type": "object"
                }
              },
              "required": [
                "category",
                "answer_html_url",
                "answer_chosen_at",
                "answer_chosen_by"
              ],
              "tsAdditionalProperties": false,
              "type": "object"
            }
          ]
        },
        "installation": {
          "$ref": "#/definitions/installation-lite"
        },
        "organization": {
          "$ref": "#/definitions/organization"
        },
        "repository": {
          "$ref": "#/definitions/repository"
        },
        "sender": {
          "$ref": "#/definitions/user"
        }
      },
      "required": [
        "action",
        "discussion",
        "answer",
        "repository",
        "sender"
      ],
      "title": "discussion answered event",
      "type": "object"
    },
    "discussion$category_changed": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "additionalProperties": false,
      "properties": {
        "action": {
          "enum": [
            "category_changed"
          ],
          "type": "string"
        },
        "changes": {
          "additionalProperties": false,
          "properties": {
            "category": {
              "additionalProperties": false,
              "properties": {
                "from": {
                  "additionalProperties": false,
                  "properties": {
                    "created_at": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "emoji": {
                      "type": "string"
                    },
                    "id": {
                      "type": "integer"
                    },
                    "is_answerable": {
                      "type": "boolean"
                    },
                    "name": {
                      "type": "string"
                    },
                    "repository_id": {
                      "type": "integer"
                    },
                    "slug": {
                      "type": "string"
                    },
                    "updated_at": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "repository_id",
                    "emoji",
                    "name",
                    "description",
                    "created_at",
                    "updated_at",
                    "slug",
                    "is_answerable"
                  ],
                  "type": "object"
                }
              },
              "required": [
                "from"
              ],
              "type": "object"
            }
          },
          "required": [
            "category"
          ],
          "type": "object"
        },
        "discussion": {
          "$ref": "#/definitions/discussion"
        },
        "installation": {
          "$ref": "#/definitions/installation-lite"
        },
        "organization": {
          "$ref": "#/definitions/organization"
        },
        "repository": {
          "$ref": "#/definitions/repository"
        },
        "sender": {
          "$ref": "#/definitions/user"
        }
      },
      "required": [
        "action",
        "changes",
        "discussion",
        "repository",
        "sender"
      ],
      "title": "discussion category changed event",
      "type": "object"
    },
    "discussion$created": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "additionalProperties": false,
      "properties": {
        "action": {
          "enum": [
            "created"
          ],
          "type": "string"
        },
        "discussion": {
          "allOf": [
            {
              "$ref": "#/definitions/discussion"
            },
            {
              "properties": {
                "answer_chosen_at": {
                  "type": "null"
                },
                "answer_chosen_by": {
                  "type": "null"
                },
                "answer_html_url": {
                  "type": "null"
                },
                "locked": {
                  "enum": [
                    false
                  ],
                  "type": "boolean"
                },
                "state": {
                  "enum": [
                    "open",
                    "converting"
                  ],
                  "type": "string"
                }
              },
              "required": [
                "state",
                "locked",
                "answer_html_url",
                "answer_chosen_at",
                "answer_chosen_by"
              ],
              "tsAdditionalProperties": false,
              "type": "object"
            }
          ]
        },
        "installation": {
          "$ref": "#/definitions/installation-lite"
        },
        "organization": {
          "$ref": "#/definitions/organization"
        },
        "repository": {
          "$ref": "#/definitions/repository"
        },
        "sender": {
          "$ref": "#/definitions/user"
        }
      },
      "required": [
        "action",
        "discussion",
        "repository",
        "sender"
      ],
      "title": "discussion created event",
      "type": "object"
    },
    "discussion$deleted": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "additionalProperties": false,
      "properties": {
        "action": {
          "enum": [
            "deleted"
          ],
          "type": "string"
        },
        "discussion": {
          "$ref": "#/definitions/discussion"
        },
        "installation": {
          "$ref": "#/definitions/installation-lite"
        },
        "organization": {
          "$ref": "#/definitions/organization"
        },
        "repository": {
          "$ref": "#/definitions/repository"
        },
        "sender": {
          "$ref": "#/definitions/user"
        }
      },
      "required": [
        "action",
        "discussion",
        "repository",
        "sender"
      ],
      "title": "discussion deleted event",
      "type": "object"
    },
    "discussion$edited": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "additionalProperties": false,
      "properties": {
        "action": {
          "enum": [
            "edited"
          ],
          "type": "string"
        },
        "changes": {
          "additionalProperties": false,
          "properties": {
            "body": {
              "additionalProperties": false,
              "properties": {
                "from": {
                  "type": "string"
                }
              },
              "required": [
                "from"
              ],
              "type": "object"
            },
            "title": {
              "additionalProperties": false,
              "properties": {
                "from": {
                  "type": "string"
                }
              },
              "required": [
                "from"
              ],
              "type": "object"
            }
          },
          "type": "object"
        },
        "discussion": {
          "$ref": "#/definitions/discussion"
        },
        "installation": {
          "$ref": "#/definitions/installation-lite"
        },
        "organization": {
          "$ref": "#/definitions/organization"
        },
        "repository": {
          "$ref": "#/definitions/repository"
        },
        "sender": {
          "$ref": "#/definitions/user"
        }
      },
      "required": [
        "action",
        "discussion",
        "repository",
        "sender"
      ],
      "title": "discussion edited event",
      "type": "object"
    },
    "discussion$labeled": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "additionalProperties": false,
      "properties": {
        "action": {
          "enum": [
            "labeled"
          ],
          "type": "string"
        },
        "discussion": {
          "$ref": "#/definitions/discussion"
        },
        "installation": {
          "$ref": "#/definitions/installation-lite"
        },
        "label": {
          "$ref": "#/definitions/label"
        },
        "organization": {
          "$ref": "#/definitions/organization"
        },
        "repository": {
          "$ref": "#/definitions/repository"
        },
        "sender": {
          "$ref": "#/definitions/user"
        }
      },
      "required": [
        "action",
        "discussion",
        "label",
        "repository",
        "sender"
      ],
      "title": "discussion labeled event",
      "type": "object"
    },
    "discussion$locked": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "additionalProperties": false,
      "properties": {
        "action": {
          "enum": [
            "locked"
          ],
          "type": "string"
        },
        "discussion": {
          "allOf": [
            {
              "$ref": "#/definitions/discussion"
            },
            {
              "properties": {
                "locked": {
                  "enum": [
                    true
                  ],
                  "type": "boolean"
                },
                "state": {
                  "enum": [
                    "locked"
                  ],
                  "type": "string"
                }
              },
              "required": [
                "state",
                "locked"
              ],
              "tsAdditionalProperties": false,
              "type": "object"
            }
          ]
        },
        "installation": {
          "$ref": "#/definitions/installation-lite"
        },
        "organization": {
          "$ref": "#/definitions/organization"
        },
        "repository": {
          "$ref": "#/definitions/repository"
        },
        "sender": {
          "$ref": "#/definitions/user"
        }
      },
      "required": [
        "action",
        "discussion",
        "repository",
        "sender"
      ],
      "title": "discussion locked event",
      "type": "object"
    },
    "discussion$pinned": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "additionalProperties": false,
      "properties": {
        "action": {
          "enum": [
            "pinned"
          ],
          "type": "string"
        },
        "discussion": {
          "$ref": "#/definitions/discussion"
        },
        "installation": {
          "$ref": "#/definitions/installation-lite"
        },
        "organization": {
          "$ref": "#/definitions/organization"
        },
        "repository": {
          "$ref": "#/definitions/repository"
        },
        "sender": {
          "$ref": "#/definitions/user"
        }
      },
      "required": [
        "action",
        "discussion",
        "repository",
        "sender"
      ],
      "title": "discussion pinned event",
      "type": "object"
    },
    "discussion$transferred": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "additionalProperties": false,
      "properties": {
        "action": {
          "enum": [
            "transferred"
          ],
          "type": "string"
        },
        "changes": {
          "additionalProperties": false,
          "properties": {
            "new_discussion": {
              "$ref": "#/definitions/discussion"
            },
            "new_repository": {
              "$ref": "#/definitions/repository"
            }
          },
          "required": [
            "new_discussion",
            "new_repository"
          ],
          "type": "object"
        },
        "discussion": {
          "$ref": "#/definitions/discussion"
        },
        "installation": {
          "$ref": "#/definitions/installation-lite"
        },
        "organization": {
          "$ref": "#/definitions/organization"
        },
        "repository": {
          "$ref": "#/definitions/repository"
        },
        "sender": {
          "$ref": "#/definitions/user"
        }
      },
      "required": [
        "action",
        "changes",
        "discussion",
        "repository",
        "sender"
      ],
      "title": "discussion transferred event",
      "type": "object"
    },
    "discussion$unanswered": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "additionalProperties": false,
      "properties": {
        "action": {
          "enum": [
            "unanswered"
          ],
          "type": "string"
        },
        "discussion": {
          "allOf": [
            {
              "$ref": "#/definitions/discussion"
            },
            {
              "properties": {
                "answer_chosen_at": {
                  "type": "null"
                },
                "answer_chosen_by": {
                  "type": "null"
                },
                "answer_html_url": {
                  "type": "null"
                },
                "category": {
                  "properties": {
                    "is_answerable": {
                      "enum": [
                        true
                      ],
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "is_answerable"
                  ],
                  "tsAdditionalProperties": false,
                  "type": "object"
                }
              },
              "required": [
                "category",
                "answer_html_url",
                "answer_chosen_at",
                "answer_chosen_by"
              ],
              "tsAdditionalProperties": false,
              "type": "object"
            }
          ]
        },
        "installation": {
          "$ref": "#/definitions/installation-lite"
        },
        "old_answer": {
          "additionalProperties": false,
          "properties": {
            "author_association": {
              "$ref": "#/definitions/author_association"
            },
            "body": {
              "type": "string"
            },
            "child_comment_count": {
              "type": "integer"
            },
            "created_at": {
              "format": "date-time",
              "type": "string"
            },
            "discussion_id": {
              "type": "integer"
            },
            "html_url": {
              "type": "string"
            },
            "id": {
              "type": "integer"
            },
            "node_id": {
              "type": "string"
            },
            "parent_id": {
              "type": "null"
            },
            "repository_url": {
              "type": "string"
            },
            "updated_at": {
              "format": "date-time",
              "type": "string"
            },
            "user": {
              "$ref": "#/definitions/user"
            }
          },
          "required": [
            "id",
            "node_id",
            "html_url",
            "parent_id",
            "child_comment_count",
            "repository_url",
            "discussion_id",
            "author_association",
            "user",
            "created_at",
            "updated_at",
            "body"
          ],
          "type": "object"
        },
        "organization": {
          "$ref": "#/definitions/organization"
        },
        "repository": {
          "$ref": "#/definitions/repository"
        },
        "sender": {
          "$ref": "#/definitions/user"
        }
      },
      "required": [
        "action",
        "discussion",
        "old_answer",
        "repository",
        "sender"
      ],
      "title": "discussion unanswered event",
      "type": "object"
    },
    "discussion$unlabeled": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "additionalProperties": false,
      "properties": {
        "action": {
          "enum": [
            "unlabeled"
          ],
          "type": "string"
        },
        "discussion": {
          "$ref": "#/definitions/discussion"
        },
        "installation": {
          "$ref": "#/definitions/installation-lite"
        },
        "label": {
          "$ref": "#/definitions/label"
        },
        "organization": {
          "$ref": "#/definitions/organization"
        },
        "repository": {
          "$ref": "#/definitions/repository"
        },
        "sender": {
          "$ref": "#/definitions/user"
        }
      },
      "required": [
        "action",
        "discussion",
        "label",
        "repository",
        "sender"
      ],
      "title": "discussion unlabeled event",
      "type": "object"
    },
    "discussion$unlocked": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "additionalProperties": false,
      "properties": {
        "action": {
          "enum": [
            "unlocked"
          ],
          "type": "string"
        },
        "discussion": {
          "allOf": [
            {
              "$ref": "#/definitions/discussion"
            },
            {
              "properties": {
                "locked": {
                  "enum": [
                    false
                  ],
                  "type": "boolean"
                },
                "state": {
                  "enum": [
                    "open"
                  ],
                  "type": "string"
                }
              },
              "required": [
                "state",
                "locked"
              ],
              "tsAdditionalProperties": false,
              "type": "object"
            }
          ]
        },
        "installation": {
          "$ref": "#/definitions/installation-lite"
        },
        "organization": {
          "$ref": "#/definitions/organization"
        },
        "repository": {
          "$ref": "#/definitions/repository"
        },
        "sender": {
          "$ref": "#/definitions/user"
        }
      },
      "required": [
        "action",
        "discussion",
        "repository",
        "sender"
      ],
      "title": "discussion unlocked event",
      "type": "object"
    },
    "discussion$unpinned": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "additionalProperties": false,
      "properties": {
        "action": {
          "enum": [
            "unpinned"
          ],
          "type": "string"
        },
        "discussion": {
          "$ref": "#/definitions/discussion"
        },
        "installation": {
          "$ref": "#/definitions/installation-lite"
        },
        "organization": {
          "$ref": "#/definitions/organization"
        },
        "repository": {
          "$ref": "#/definitions/repository"
        },
        "sender": {
          "$ref": "#/definitions/user"
        }
      },
      "required": [
        "action",
        "discussion",
        "repository",
        "sender"
      ],
      "title": "discussion unpinned event",
      "type": "object"
    },
    "discussion_comment$created": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "additionalProperties": false,
      "properties": {
        "action": {
          "enum": [
            "created"
          ],
          "type": "string"
        },
        "comment": {
          "additionalProperties": false,
          "properties": {
            "author_association": {
              "$ref": "#/definitions/author_association"
            },
            "body": {
              "type": "string"
            },
            "child_comment_count": {
              "type": "integer"
            },
            "created_at": {
              "type": "string"
            },
            "discussion_id": {
              "type": "integer"
            },
            "html_url": {
              "type": "string"
            },
            "id": {
              "type": "integer"
            },
            "node_id": {
              "type": "string"
            },
            "parent_id": {
              "type": [
                "integer",
                "null"
              ]
            },
            "reactions": {
              "$ref": "#/definitions/reactions"
            },
            "repository_url": {
              "type": "string"
            },
            "updated_at": {
              "type": "string"
            },
            "user": {
              "$ref": "#/definitions/user"
            }
          },
          "required": [
            "id",
            "node_id",
            "html_url",
            "parent_id",
            "child_comment_count",
            "repository_url",
            "discussion_id",
            "author_association",
            "user",
            "created_at",
            "updated_at",
            "body",
            "reactions"
          ],
          "type": "object"
        },
        "discussion": {
          "$ref": "#/definitions/discussion"
        },
        "installation": {
          "$ref": "#/definitions/installation-lite"
        },
        "organization": {
          "$ref": "#/definitions/organization"
        },
        "repository": {
          "$ref": "#/definitions/repository"
        },
        "sender": {
          "$ref": "#/definitions/user"
        }
      },
      "required": [
        "action",
        "comment",
        "discussion",
        "repository",
        "sender",
        "installation"
      ],
      "title": "discussion_comment created event",
      "type": "object"
    },
    "discussion_comment$deleted": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "additionalProperties": false,
      "properties": {
        "action": {
          "enum": [
            "deleted"
          ],
          "type": "string"
        },
        "comment": {
          "additionalProperties": false,
          "properties": {
            "author_association": {
              "$ref": "#/definitions/author_association"
            },
            "body": {
              "type": "string"
            },
            "child_comment_count": {
              "type": "integer"
            },
            "created_at": {
              "type": "string"
            },
            "discussion_id": {
              "type": "integer"
            },
            "html_url": {
              "type": "string"
            },
            "id": {
              "type": "integer"
            },
            "node_id": {
              "type": "string"
            },
            "parent_id": {
              "type": [
                "integer",
                "null"
              ]
            },
            "reactions": {
              "$ref": "#/definitions/reactions"
            },
            "repository_url": {
              "type": "string"
            },
            "updated_at": {
              "type": "string"
            },
            "user": {
              "$ref": "#/definitions/user"
            }
          },
          "required": [
            "id",
            "node_id",
            "html_url",
            "parent_id",
            "child_comment_count",
            "repository_url",
            "discussion_id",
            "author_association",
            "user",
            "created_at",
            "updated_at",
            "body",
            "reactions"
          ],
          "type": "object"
        },
        "discussion": {
          "$ref": "#/definitions/discussion"
        },
        "installation": {
          "$ref": "#/definitions/installation-lite"
        },
        "organization": {
          "$ref": "#/definitions/organization"
        },
        "repository": {
          "$ref": "#/definitions/repository"
        },
        "sender": {
          "$ref": "#/definitions/user"
        }
      },
      "required": [
        "action",
        "comment",
        "discussion",
        "repository",
        "sender",
        "installation"
      ],
      "title": "discussion_comment deleted event",
      "type": "object"
    },
    "discussion_comment$edited": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "additionalProperties": false,
      "properties": {
        "action": {
          "enum": [
            "edited"
          ],
          "type": "string"
        },
        "changes": {
          "additionalProperties": false,
          "properties": {
            "body": {
              "additionalProperties": false,
              "properties": {
                "from": {
                  "type": "string"
                }
              },
              "required": [
                "from"
              ],
              "type": "object"
            }
          },
          "required": [
            "body"
          ],
          "type": "object"
        },
        "comment": {
          "additionalProperties": false,
          "properties": {
            "author_association": {
              "$ref": "#/definitions/author_association"
            },
            "body": {
              "type": "string"
            },
            "child_comment_count": {
              "type": "integer"
            },
            "created_at": {
              "type": "string"
            },
            "discussion_id": {
              "type": "integer"
            },
            "html_url": {
              "type": "string"
            },
            "id": {
              "type": "integer"
            },
            "node_id": {
              "type": "string"
            },
            "parent_id": {
              "type": [
                "integer",
                "null"
              ]
            },
            "reactions": {
              "$ref": "#/definitions/reactions"
            },
            "repository_url": {
              "type": "string"
            },
            "updated_at": {
              "type": "string"
            },
            "user": {
              "$ref": "#/definitions/user"
            }
          },
          "required": [
            "id",
            "node_id",
            "html_url",
            "parent_id",
            "child_comment_count",
            "repository_url",
            "discussion_id",
            "author_association",
            "user",
            "created_at",
            "updated_at",
            "body",
            "reactions"
          ],
          "type": "object"
        },
        "discussion": {
          "$ref": "#/definitions/discussion"
        },
        "installation": {
          "$ref": "#/definitions/installation-lite"
        },
        "organization": {
          "$ref": "#/definitions/organization"
        },
        "repository": {
          "$ref": "#/definitions/repository"
        },
        "sender": {
          "$ref": "#/definitions/user"
        }
      },
      "required": [
        "action",
        "changes",
        "comment",
        "discussion",
        "repository",
        "sender",
        "installation"
      ],
      "title": "discussion_comment edited event",
      "type": "object"
    },
    "discussion_comment_event": {
      "oneOf": [
        {
          "$ref": "#/definitions/discussion_comment$created"
        },
        {
          "$ref": "#/definitions/discussion_comment$deleted"
        },
        {
          "$ref": "#/definitions/discussion_comment$edited"
        }
      ]
    },
    "discussion_event": {
      "oneOf": [
        {
          "$ref": "#/definitions/discussion$answered"
        },
        {
          "$ref": "#/definitions/discussion$category_changed"
        },
        {
          "$ref": "#/definitions/discussion$created"
        },
        {
          "$ref": "#/definitions/discussion$deleted"
        },
        {
          "$ref": "#/definitions/discussion$edited"
        },
        {
          "$ref": "#/definitions/discussion$labeled"
        },
        {
          "$ref": "#/definitions/discussion$locked"
        },
        {
          "$ref": "#/definitions/discussion$pinned"
        },
        {
          "$ref": "#/definitions/discussion$transferred"
        },
        {
          "$ref": "#/definitions/discussion$unanswered"
        },
        {
          "$ref": "#/definitions/discussion$unlabeled"
        },
        {
          "$ref": "#/definitions/discussion$unlocked"
        },
        {
          "$ref": "#/definitions/discussion$unpinned"
        }
      ]
    },
    "fork$event": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "additionalProperties": false,
      "description": "A user forks a repository.",
      "properties": {
        "forkee": {
          "allOf": [
            {
              "$ref": "#/definitions/repository"
            },
            {
              "properties": {
                "fork": {
                  "enum": [
                    true
                  ],
                  "type": "boolean"
                }
              },
              "tsAdditionalProperties": false,
              "type": "object"
            }
          ],
          "description": "The created [`repository`](https://docs.github.com/en/rest/reference/repos#get-a-repository) resource."
        },
        "installation": {
          "$ref": "#/definitions/installation-lite"
        },
        "organization": {
          "$ref": "#/definitions/organization"
        },
        "repository": {
          "$ref": "#/definitions/repository"
        },
        "sender": {
          "$ref": "#/definitions/user"
        }
      },
      "required": [
        "forkee",
        "repository",
        "sender"
      ],
      "title": "fork event",
      "type": "object"
    },
    "github-org": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "additionalProperties": false,
      "properties": {
        "avatar_url": {
          "const": "https://avatars.githubusercontent.com/u/9919?v=4",
          "format": "uri",
          "type": "string"
        },
        "email": {
          "type": "null"
        },
        "events_url": {
          "const": "https://api.github.com/users/github/events{/privacy}",
          "format": "uri-template",
          "type": "string"
        },
        "followers_url": {
          "const": "https://api.github.com/users/github/followers",
          "format": "uri",
          "type": "string"
        },
        "following_url": {
          "const": "https://api.github.com/users/github/following{/other_user}",
          "format": "uri-template",
          "type": "string"
        },
        "gists_url": {
          "const": "https://api.github.com/users/github/gists{/gist_id}",
          "format": "uri-template",
          "type": "string"
        },
        "gravatar_id": {
          "const": "",
          "type": "string"
        },
        "html_url": {
          "const": "https://github.com/github",
          "format": "uri",
          "type": "string"
        },
        "id": {
          "const": 9919,
          "type": "integer"
        },
        "login": {
          "const": "github",
          "type": "string"
        },
        "name": {
          "const": "GitHub",
          "type": "string"
        },
        "node_id": {
          "const": "MDEyOk9yZ2FuaXphdGlvbjk5MTk=",
          "type": "string"
        },
        "organizations_url": {
          "const": "https://api.github.com/users/github/orgs",
          "format": "uri",
          "type": "string"
        },
        "received_events_url": {
          "const": "https://api.github.com/users/github/received_events",
          "format": "uri",
          "type": "string"
        },
        "repos_url": {
          "const": "https://api.github.com/users/github/repos",
          "format": "uri",
          "type": "string"
        },
        "site_admin": {
          "const": false,
          "type": "boolean"
        },
        "starred_url": {
          "const": "https://api.github.com/users/github/starred{/owner}{/repo}",
          "format": "uri-template",
          "type": "string"
        },
        "subscriptions_url": {
          "const": "https://api.github.com/users/github/subscriptions",
          "format": "uri",
          "type": "string"
        },
        "type": {
          "const": "Organization",
          "type": "string"
        },
        "url": {
          "const": "https://api.github.com/users/github",
          "format": "uri",
          "type": "string"
        }
      },
      "required": [
        "login",
        "id",
        "node_id",
        "avatar_url",
        "gravatar_id",
        "url",
        "html_url",
        "followers_url",
        "following_url",
        "gists_url",
        "starred_url",
        "subscriptions_url",
        "organizations_url",
        "repos_url",
        "events_url",
        "received_events_url",
        "type",
        "site_admin"
      ],
      "title": "GitHub Org",
      "type": "object"
    },
    "github_app_authorization$revoked": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "additionalProperties": false,
      "properties": {
        "action": {
          "enum": [
            "revoked"
          ],
          "type": "string"
        },
        "sender": {
          "$ref": "#/definitions/user"
        }
      },
      "required": [
        "action",
        "sender"
      ],
      "title": "github_app_authorization revoked event",
      "type": "object"
    },
    "github_app_authorization_event": {
      "oneOf": [
        {
          "$ref": "#/definitions/github_app_authorization$revoked"
        }
      ]
    },
    "gollum$event": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "additionalProperties": false,
      "description": "A wiki page is created or updated.",
      "properties": {
        "installation": {
          "$ref": "#/definitions/installation-lite"
        },
        "organization": {
          "$ref": "#/definitions/organization"
        },
        "pages": {
          "description": "The pages that were updated.",
          "items": {
            "additionalProperties": false,
            "properties": {
              "action": {
                "description": "The action that was performed on the page. Can be `created` or `edited`.",
                "enum": [
                  "created",
                  "edited"
                ],
                "type": "string"
              },
              "html_url": {
                "description": "Points to the HTML wiki page.",
                "format": "uri",
                "type": "string"
              },
              "page_name": {
                "description": "The name of the page.",
                "type": "string"
              },
              "sha": {
                "description": "The latest commit SHA of the page.",
                "type": "string"
              },
              "summary": {
                "type": "null"
              },
              "title": {
                "description": "The current page title.",
                "type": "string"
              }
            },
            "required": [
              "page_name",
              "title",
              "summary",
              "action",
              "sha",
              "html_url"
            ],
            "type": "object"
          },
          "type": "array"
        },
        "repository": {
          "$ref": "#/definitions/repository"
        },
        "sender": {
          "$ref": "#/definitions/user"
        }
      },
      "required": [
        "pages",
        "repository",
        "sender"
      ],
      "title": "gollum event",
      "type": "object"
    },
    "installation": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "additionalProperties": false,
      "description": "The GitHub App installation.",
      "properties": {
        "access_tokens_url": {
          "format": "uri",
          "type": "string"
        },
        "account": {
          "$ref": "#/definitions/user"
        },
        "app_id": {
          "type": "integer"
        },
        "app_slug": {
          "type": "string"
        },
        "created_at": {
          "oneOf": [
            {
              "format": "date-time",
              "type": "string"
            },
            {
              "type": "integer"
            }
          ]
        },
        "events": {
          "items": {
            "enum": [
              "branch_protection_rule",
              "check_run",
              "check_suite",
              "code_scanning_alert",
              "commit_comment",
              "content_reference",
              "create",
              "delete",
              "deployment",
              "deployment_review",
              "deployment_status",
              "deploy_key",
              "discussion",
              "discussion_comment",
              "fork",
              "gollum",
              "issues",
              "issue_comment",
              "label",
              "member",
              "membership",
              "merge_queue_entry",
              "milestone",
              "organization",
              "org_block",
              "page_build",
              "project",
              "projects_v2_item",
              "project_card",
              "project_column",
              "public",
              "pull_request",
              "pull_request_review",
              "pull_request_review_comment",
              "pull_request_review_thread",
              "push",
              "registry_package",
              "release",
              "repository",
              "repository_dispatch",
              "secret_scanning_alert",
              "secret_scanning_alert_location",
              "star",
              "status",
              "team",
              "team_add",
              "watch",
              "workflow_dispatch",
              "workflow_job",
              "workflow_run"
            ],
            "type": "string"
          },
          "type": "array"
        },
        "has_multiple_single_files": {
          "type": "boolean"
        },
        "html_url": {
          "format": "uri",
          "type": "string"
        },
        "id": {
          "description": "The ID of the installation.",
          "type": "integer"
        },
        "permissions": {
          "additionalProperties": false,
          "properties": {
            "actions": {
              "enum": [
                "read",
                "write"
              ],
              "type": "string"
            },
            "administration": {
              "enum": [
                "read",
                "write"
              ],
              "type": "string"
            },
            "checks": {
              "enum": [
                "read",
                "write"
              ],
              "type": "string"
            },
            "content_references": {
              "enum": [
                "read",
                "write"
              ],
              "type": "string"
            },
            "contents": {
              "enum": [
                "read",
                "write"
              ],
              "type": "string"
            },
            "deployments": {
              "enum": [
                "read",
                "write"
              ],
              "type": "string"
            },
            "discussions": {
              "enum": [
                "read",
                "write"
              ],
              "type": "string"
            },
            "emails": {
              "enum": [
                "read",
                "write"
              ],
              "type": "string"
            },
            "environments": {
              "enum": [
                "read",
                "write"
              ],
              "type": "string"
            },
            "issues": {
              "enum": [
                "read",
                "write"
              ],
              "type": "string"
            },
            "members": {
              "enum": [
                "read",
                "write"
              ],
              "type": "string"
            },
            "metadata": {
              "enum": [
                "read",
                "write"
              ],
              "type": "string"
            },
            "organization_administration": {
              "enum": [
                "read",
                "write"
              ],
              "type": "string"
            },
            "organization_events": {
              "enum": [
                "read",
                "write"
              ],
              "type": "string"
            },
            "organization_hooks": {
              "enum": [
                "read",
                "write"
              ],
              "type": "string"
            },
            "organization_packages": {
              "enum": [
                "read",
                "write"
              ],
              "type": "string"
            },
            "organization_plan": {
              "enum": [
                "read",
                "write"
              ],
              "type": "string"
            },
            "organization_projects": {
              "enum": [
                "read",
                "write"
              ],
              "type": "string"
            },
            "organization_secrets": {
              "enum": [
                "read",
                "write"
              ],
              "type": "string"
            },
            "organization_self_hosted_runners": {
              "enum": [
                "read",
                "write"
              ],
              "type": "string"
            },
            "organization_user_blocking": {
              "enum": [
                "read",
                "write"
              ],
              "type": "string"
            },
            "packages": {
              "enum": [
                "read",
                "write"
              ],
              "type": "string"
            },
            "pages": {
              "enum": [
                "read",
                "write"
              ],
              "type": "string"
            },
            "pull_requests": {
              "enum": [
                "read",
                "write"
              ],
              "type": "string"
            },
            "repository_hooks": {
              "enum": [
                "read",
                "write"
              ],
              "type": "string"
            },
            "repository_projects": {
              "enum": [
                "read",
                "write"
              ],
              "type": "string"
            },
            "secret_scanning_alerts": {
              "enum": [
                "read",
                "write"
              ],
              "type": "string"
            },
            "secrets": {
              "enum": [
                "read",
                "write"
              ],
              "type": "string"
            },
            "security_events": {
              "enum": [
                "read",
                "write"
              ],
              "type": "string"
            },
            "security_scanning_alert": {
              "enum": [
                "read",
                "write"
              ],
              "type": "string"
            },
            "single_file": {
              "enum": [
                "read",
                "write"
              ],
              "type": "string"
            },
            "statuses": {
              "enum": [
                "read",
                "write"
              ],
              "type": "string"
            },
            "team_discussions": {
              "enum": [
                "read",
                "write"
              ],
              "type": "string"
            },
            "vulnerability_alerts": {
              "enum": [
                "read",
                "write"
              ],
              "type": "string"
            },
            "workflows": {
              "enum": [
                "read",
                "write"
              ],
              "type": "string"
            }
          },
          "required": [],
          "type": "object"
        },
        "repositories_url": {
          "format": "uri",
          "type": "string"
        },
        "repository_selection": {
          "description": "Describe whether all repositories have been selected or there's a selection involved",
          "enum": [
            "all",
            "selected"
          ],
          "type": "string"
        },
        "single_file_name": {
          "type": [
            "string",
            "null"
          ]
        },
        "single_file_paths": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "suspended_at": {
          "format": "date-time",
          "type": [
            "string",
            "null"
          ]
        },
        "suspended_by": {
          "oneOf": [
            {
              "$ref": "#/definitions/user"
            },
            {
              "type": "null"
            }
          ]
        },
        "target_id": {
          "description": "The ID of the user or organization this token is being scoped to.",
          "type": "integer"
        },
        "target_type": {
          "enum": [
            "User",
            "Organization"
          ],
          "type": "string"
        },
        "updated_at": {
          "oneOf": [
            {
              "format": "date-time",
              "type": "string"
            },
            {
              "type": "integer"
            }
          ]
        }
      },
      "required": [
        "id",
        "account",
        "repository_selection",
        "access_tokens_url",
        "repositories_url",
        "html_url",
        "app_id",
        "target_id",
        "target_type",
        "permissions",
        "events",
        "created_at",
        "updated_at",
        "single_file_name",
        "suspended_at",
        "suspended_by"
      ],
      "title": "Installation",
      "type": "object"
    },
    "installation$created": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "additionalProperties": false,
      "properties": {
        "action": {
          "enum": [
            "created"
          ],
          "type": "string"
        },
        "installation": {
          "$ref": "#/definitions/installation"
        },
        "repositories": {
          "description": "An array of repository objects that the installation can access.",
          "items": {
            "additionalProperties": false,
            "properties": {
              "full_name": {
                "type": "string"
              },
              "id": {
                "description": "Unique identifier of the repository",
                "type": "integer"
              },
              "name": {
                "description": "The name of the repository.",
                "type": "string"
              },
              "node_id": {
                "type": "string"
              },
              "private": {
                "description": "Whether the repository is private or public.",
                "type": "boolean"
              }
            },
            "required": [
              "id",
              "node_id",
              "name",
              "full_name",
              "private"
            ],
            "type": "object"
          },
          "type": "array"
        },
        "requester": {
          "$ref": "#/definitions/user"
        },
        "sender": {
          "$ref": "#/definitions/user"
        }
      },
      "required": [
        "action",
        "installation",
        "sender"
      ],
      "title": "installation created event",
      "type": "object"
    },
    "installation$deleted": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "additionalProperties": false,
      "properties": {
        "action": {
          "enum": [
            "deleted"
          ],
          "type": "string"
        },
        "installation": {
          "$ref": "#/definitions/installation"
        },
        "repositories": {
          "description": "An array of repository objects that the installation can access.",
          "items": {
            "additionalProperties": false,
            "properties": {
              "full_name": {
                "type": "string"
              },
              "id": {
                "description": "Unique identifier of the repository",
                "type": "integer"
              },
              "name": {
                "description": "The name of the repository.",
                "type": "string"
              },
              "node_id": {
                "type": "string"
              },
              "private": {
                "description": "Whether the repository is private or public.",
                "type": "boolean"
              }
            },
            "required": [
              "id",
              "node_id",
              "name",
              "full_name",
              "private"
            ],
            "type": "object"
          },
          "type": "array"
        },
        "requester": {
          "type": "null"
        },
        "sender": {
          "$ref": "#/definitions/user"
        }
      },
      "required": [
        "action",
        "installation",
        "sender"
      ],
      "title": "installation deleted event",
      "type": "object"
    },
    "installation$new_permissions_accepted": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "additionalProperties": false,
      "properties": {
        "action": {
          "enum": [
            "new_permissions_accepted"
          ],
          "type": "string"
        },
        "installation": {
          "$ref": "#/definitions/installation"
        },
        "repositories": {
          "description": "An array of repository objects that the installation can access.",
          "items": {
            "additionalProperties": false,
            "properties": {
              "full_name": {
                "type": "string"
              },
              "id": {
                "description": "Unique identifier of the repository",
                "type": "integer"
              },
              "name": {
                "description": "The name of the repository.",
                "type": "string"
              },
              "node_id": {
                "type": "string"
              },
              "private": {
                "description": "Whether the repository is private or public.",
                "type": "boolean"
              }
            },
            "required": [
              "id",
              "node_id",
              "name",
              "full_name",
              "private"
            ],
            "type": "object"
          },
          "type": "array"
        },
        "requester": {
          "type": "null"
        },
        "sender": {
          "$ref": "#/definitions/user"
        }
      },
      "required": [
        "action",
        "installation",
        "sender"
      ],
      "title": "installation new_permissions_accepted event",
      "type": "object"
    },
    "installation$suspend": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "additionalProperties": false,
      "properties": {
        "action": {
          "enum": [
            "suspend"
          ],
          "type": "string"
        },
        "installation": {
          "allOf": [
            {
              "$ref": "#/definitions/installation"
            },
            {
              "properties": {
                "suspended_at": {
                  "format": "date-time",
                  "type": "string"
                },
                "suspended_by": {
                  "$ref": "#/definitions/user"
                }
              },
              "required": [
                "suspended_by",
                "suspended_at"
              ],
              "tsAdditionalProperties": false,
              "type": "object"
            }
          ]
        },
        "repositories": {
          "description": "An array of repository objects that the installation can access.",
          "items": {
            "additionalProperties": false,
            "properties": {
              "full_name": {
                "type": "string"
              },
              "id": {
                "description": "Unique identifier of the repository",
                "type": "integer"
              },
              "name": {
                "description": "The name of the repository.",
                "type": "string"
              },
              "node_id": {
                "type": "string"
              },
              "private": {
                "description": "Whether the repository is private or public.",
                "type": "boolean"
              }
            },
            "required": [
              "id",
              "node_id",
              "name",
              "full_name",
              "private"
            ],
            "type": "object"
          },
          "type": "array"
        },
        "requester": {
          "type": "null"
        },
        "sender": {
          "$ref": "#/definitions/user"
        }
      },
      "required": [
        "action",
        "installation",
        "sender"
      ],
      "title": "installation suspend event",
      "type": "object"
    },
    "installation$unsuspend": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "additionalProperties": false,
      "properties": {
        "action": {
          "enum": [
            "unsuspend"
          ],
          "type": "string"
        },
        "installation": {
          "allOf": [
            {
              "$ref": "#/definitions/installation"
            },
            {
              "properties": {
                "suspended_at": {
                  "type": "null"
                },
                "suspended_by": {
                  "type": "null"
                }
              },
              "required": [
                "suspended_by",
                "suspended_at"
              ],
              "tsAdditionalProperties": false,
              "type": "object"
            }
          ]
        },
        "repositories": {
          "description": "An array of repository objects that the installation can access.",
          "items": {
            "additionalProperties": false,
            "properties": {
              "full_name": {
                "type": "string"
              },
              "id": {
                "description": "Unique identifier of the repository",
                "type": "integer"
              },
              "name": {
                "description": "The name of the repository.",
                "type": "string"
              },
              "node_id": {
                "type": "string"
              },
              "private": {
                "description": "Whether the repository is private or public.",
                "type": "boolean"
              }
            },
            "required": [
              "id",
              "node_id",
              "name",
              "full_name",
              "private"
            ],
            "type": "object"
          },
          "type": "array"
        },
        "requester": {
          "type": "null"
        },
        "sender": {
          "$ref": "#/definitions/user"
        }
      },
      "required": [
        "action",
        "installation",
        "sender"
      ],
      "title": "installation unsuspend event",
      "type": "object"
    },
    "installation-lite": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "additionalProperties": false,
      "description": "Installation",
      "properties": {
        "id": {
          "description": "The ID of the installation.",
          "type": "integer"
        },
        "node_id": {
          "type": "string"
        }
      },
      "required": [
        "id",
        "node_id"
      ],
      "title": "InstallationLite",
      "type": "object"
    },
    "installation_event": {
      "oneOf": [
        {
          "$ref": "#/definitions/installation$created"
        },
        {
          "$ref": "#/definitions/installation$deleted"
        },
        {
          "$ref": "#/definitions/installation$new_permissions_accepted"
        },
        {
          "$ref": "#/definitions/installation$suspend"
        },
        {
          "$ref": "#/definitions/installation$unsuspend"
        }
      ]
    },
    "installation_repositories$added": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "additionalProperties": false,
      "properties": {
        "action": {
          "enum": [
            "added"
          ],
          "type": "string"
        },
        "installation": {
          "$ref": "#/definitions/installation"
        },
        "repositories_added": {
          "description": "An array of repository objects, which were added to the installation.",
          "items": {
            "additionalProperties": false,
            "properties": {
              "full_name": {
                "type": "string"
              },
              "id": {
                "description": "Unique identifier of the repository",
                "type": "integer"
              },
              "name": {
                "description": "The name of the repository.",
                "type": "string"
              },
              "node_id": {
                "type": "string"
              },
              "private": {
                "description": "Whether the repository is private or public.",
                "type": "boolean"
              }
            },
            "required": [
              "id",
              "node_id",
              "name",
              "full_name",
              "private"
            ],
            "type": "object"
          },
          "type": "array"
        },
        "repositories_removed": {
          "description": "An array of repository objects, which were removed from the installation.",
          "items": {
            "additionalProperties": false,
            "properties": {
              "full_name": {
                "type": "string"
              },
              "id": {
                "description": "Unique identifier of the repository",
                "type": "integer"
              },
              "name": {
                "description": "The name of the repository.",
                "type": "string"
              },
              "node_id": {
                "type": "string"
              },
              "private": {
                "description": "Whether the repository is private or public.",
                "type": "boolean"
              }
            },
            "type": "object"
          },
          "maxItems": 0,
          "type": "array"
        },
        "repository_selection": {
          "description": "Describe whether all repositories have been selected or there's a selection involved",
          "enum": [
            "all",
            "selected"
          ],
          "type": "string"
        },
        "requester": {
          "oneOf": [
            {
              "$ref": "#/definitions/user"
            },
            {
              "type": "null"
            }
          ]
        },
        "sender": {
          "$ref": "#/definitions/user"
        }
      },
      "required": [
        "action",
        "installation",
        "repository_selection",
        "repositories_added",
        "repositories_removed",
        "requester",
        "sender"
      ],
      "title": "installation_repositories added event",
      "type": "object"
    },
    "installation_repositories$removed": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "additionalProperties": false,
      "properties": {
        "action": {
          "enum": [
            "removed"
          ],
          "type": "string"
        },
        "installation": {
          "$ref": "#/definitions/installation"
        },
        "repositories_added": {
          "description": "An array of repository objects, which were added to the installation.",
          "items": {
            "additionalProperties": false,
            "properties": {
              "full_name": {
                "type": "string"
              },
              "id": {
                "description": "Unique identifier of the repository",
                "type": "integer"
              },
              "name": {
                "description": "The name of the repository.",
                "type": "string"
              },
              "node_id": {
                "type": "string"
              },
              "private": {
                "description": "Whether the repository is private or public.",
                "type": "boolean"
              }
            },
            "required": [
              "id",
              "node_id",
              "name",
              "full_name",
              "private"
            ],
            "type": "object"
          },
          "maxItems": 0,
          "type": "array"
        },
        "repositories_removed": {
          "description": "An array of repository objects, which were removed from the installation.",
          "items": {
            "additionalProperties": false,
            "properties": {
              "full_name": {
                "type": "string"
              },
              "id": {
                "description": "Unique identifier of the repository",
                "type": "integer"
              },
              "name": {
                "description": "The name of the repository.",
                "type": "string"
              },
              "node_id": {
                "type": "string"
              },
              "private": {
                "description": "Whether the repository is private or public.",
                "type": "boolean"
              }
            },
            "required": [
              "id",
              "node_id",
              "name",
              "full_name",
              "private"
            ],
            "type": "object"
          },
          "type": "array"
        },
        "repository_selection": {
          "description": "Describe whether all repositories have been selected or there's a selection involved",
          "enum": [
            "all",
            "selected"
          ],
          "type": "string"
        },
        "requester": {
          "oneOf": [
            {
              "$ref": "#/definitions/user"
            },
            {
              "type": "null"
            }
          ]
        },
        "sender": {
          "$ref": "#/definitions/user"
        }
      },
      "required": [
        "action",
        "installation",
        "repository_selection",
        "repositories_added",
        "repositories_removed",
        "requester",
        "sender"
      ],
      "title": "installation_repositories removed event",
      "type": "object"
    },
    "installation_repositories_event": {
      "oneOf": [
        {
          "$ref": "#/definitions/installation_repositories$added"
        },
        {
          "$ref": "#/definitions/installation_repositories$removed"
        }
      ]
    },
    "issue": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "additionalProperties": false,
      "description": "The [issue](https://docs.github.com/en/rest/reference/issues) itself.",
      "properties": {
        "active_lock_reason": {
          "enum": [
            "resolved",
            "off-topic",
            "too heated",
            "spam",
            null
          ],
          "type": [
            "string",
            "null"
          ]
        },
        "assignee": {
          "oneOf": [
            {
              "$ref": "#/definitions/user"
            },
            {
              "type": "null"
            }
          ]
        },
        "assignees": {
          "items": {
            "$ref": "#/definitions/user"
          },
          "type": "array"
        },
        "author_association": {
          "$ref": "#/definitions/author_association"
        },
        "body": {
          "description": "Contents of the issue",
          "type": [
            "string",
            "null"
          ]
        },
        "closed_at": {
          "format": "date-time",
          "type": [
            "string",
            "null"
          ]
        },
        "comments": {
          "type": "integer"
        },
        "comments_url": {
          "format": "uri",
          "type": "string"
        },
        "created_at": {
          "format": "date-time",
          "type": "string"
        },
        "draft": {
          "type": "boolean"
        },
        "events_url": {
          "format": "uri",
          "type": "string"
        },
        "html_url": {
          "format": "uri",
          "type": "string"
        },
        "id": {
          "type": "integer"
        },
        "labels": {
          "items": {
            "$ref": "#/definitions/label"
          },
          "type": "array"
        },
        "labels_url": {
          "format": "uri-template",
          "type": "string"
        },
        "locked": {
          "type": "boolean"
        },
        "milestone": {
          "oneOf": [
            {
              "$ref": "#/definitions/milestone"
            },
            {
              "type": "null"
            }
          ]
        },
        "node_id": {
          "type": "string"
        },
        "number": {
          "type": "integer"
        },
        "performed_via_github_app": {
          "oneOf": [
            {
              "$ref": "#/definitions/app"
            },
            {
              "type": "null"
            }
          ]
        },
        "pull_request": {
          "additionalProperties": false,
          "properties": {
            "diff_url": {
              "format": "uri",
              "type": "string"
            },
            "html_url": {
              "format": "uri",
              "type": "string"
            },
            "merged_at": {
              "format": "date-time",
              "type": [
                "string",
                "null"
              ]
            },
            "patch_url": {
              "format": "uri",
              "type": "string"
            },
            "url": {
              "format": "uri",
              "type": "string"
            }
          },
          "type": "object"
        },
        "reactions": {
          "$ref": "#/definitions/reactions"
        },
        "repository_url": {
          "format": "uri",
          "type": "string"
        },
        "state": {
          "description": "State of the issue; either 'open' or 'closed'",
          "enum": [
            "open",
            "closed"
          ],
          "type": "string"
        },
        "state_reason": {
          "type": [
            "string",
            "null"
          ]
        },
        "timeline_url": {
          "format": "uri",
          "type": "string"
        },
        "title": {
          "description": "Title of the issue",
          "type": "string"
        },
        "updated_at": {
          "format": "date-time",
          "type": "string"
        },
        "url": {
          "description": "URL for the issue",
          "format": "uri",
          "type": "string"
        },
        "user": {
          "$ref": "#/definitions/user"
        }
      },
      "required": [
        "url",
        "repository_url",
        "labels_url",
        "comments_url",
        "events_url",
        "html_url",
        "id",
        "node_id",
        "number",
        "title",
        "user",
        "assignees",
        "milestone",
        "comments",
        "created_at",
        "updated_at",
        "closed_at",
        "author_association",
        "active_lock_reason",
        "body",
        "reactions"
      ],
      "title": "Issue",
      "type": "object"
    },
    "issue-comment": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "additionalProperties": false,
      "description": "The [comment](https://docs.github.com/en/rest/reference/issues#comments) itself.",
      "properties": {
        "author_association": {
          "$ref": "#/definitions/author_association"
        },
        "body": {
          "description": "Contents of the issue comment",
          "type": "string"
        },
        "created_at": {
          "format": "date-time",
          "type": "string"
        },
        "html_url": {
          "format": "uri",
          "type": "string"
        },
        "id": {
          "description": "Unique identifier of the issue comment",
          "type": "integer"
        },
        "issue_url": {
          "format": "uri",
          "type": "string"
        },
        "node_id": {
          "type": "string"
        },
        "performed_via_github_app": {
          "oneOf": [
            {
              "$ref": "#/definitions/app"
            },
            {
              "type": "null"
            }
          ]
        },
        "reactions": {
          "$ref": "#/definitions/reactions"
        },
        "updated_at": {
          "format": "date-time",
          "type": "string"
        },
        "url": {
          "description": "URL for the issue comment",
          "format": "uri",
          "type": "string"
        },
        "user": {
          "$ref": "#/definitions/user"
        }
      },
      "required": [
        "url",
        "html_url",
        "issue_url",
        "id",
        "node_id",
        "user",
        "created_at",
        "updated_at",
        "author_association",
        "performed_via_github_app",
        "body",
        "reactions"
      ],
      "title": "issue comment",
      "type": "object"
    },
    "issue_comment$created": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "additionalProperties": false,
      "properties": {
        "action": {
          "enum": [
            "created"
          ],
          "type": "string"
        },
        "comment": {
          "$ref": "#/definitions/issue-comment"
        },
        "installation": {
          "$ref": "#/definitions/installation-lite"
        },
        "issue": {
          "allOf": [
            {
              "$ref": "#/definitions/issue"
            },
            {
              "properties": {
                "assignee": {
                  "oneOf": [
                    {
                      "$ref": "#/definitions/user"
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "labels": {
                  "items": {
                    "$ref": "#/definitions/label"
                  },
                  "type": "array"
                },
                "locked": {
                  "type": "boolean"
                },
                "state": {
                  "description": "State of the issue; either 'open' or 'closed'",
                  "enum": [
                    "open",
                    "closed"
                  ],
                  "type": "string"
                }
              },
              "required": [
                "labels",
                "state",
                "locked",
                "assignee"
              ],
              "tsAdditionalProperties": false,
              "type": "object"
            }
          ],
          "description": "The [issue](https://docs.github.com/en/rest/reference/issues) the comment belongs to."
        },
        "organization": {
          "$ref": "#/definitions/organization"
        },
        "repository": {
          "$ref": "#/definitions/repository"
        },
        "sender": {
          "$ref": "#/definitions/user"
        }
      },
      "required": [
        "action",
        "issue",
        "comment",
        "repository",
        "sender"
      ],
      "title": "issue_comment created event",
      "type": "object"
    },
    "issue_comment$deleted": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "additionalProperties": false,
      "properties": {
        "action": {
          "enum": [
            "deleted"
          ],
          "type": "string"
        },
        "comment": {
          "$ref": "#/definitions/issue-comment"
        },
        "installation": {
          "$ref": "#/definitions/installation-lite"
        },
        "issue": {
          "allOf": [
            {
              "$ref": "#/definitions/issue"
            },
            {
              "properties": {
                "assignee": {
                  "oneOf": [
                    {
                      "$ref": "#/definitions/user"
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "labels": {
                  "items": {
                    "$ref": "#/definitions/label"
                  },
                  "type": "array"
                },
                "locked": {
                  "type": "boolean"
                },
                "state": {
                  "description": "State of the issue; either 'open' or 'closed'",
                  "enum": [
                    "open",
                    "closed"
                  ],
                  "type": "string"
                }
              },
              "required": [
                "labels",
                "state",
                "locked",
                "assignee"
              ],
              "tsAdditionalProperties": false,
              "type": "object"
            }
          ],
          "description": "The [issue](https://docs.github.com/en/rest/reference/issues) the comment belongs to."
        },
        "organization": {
          "$ref": "#/definitions/organization"
        },
        "repository": {
          "$ref": "#/definitions/repository"
        },
        "sender": {
          "$ref": "#/definitions/user"
        }
      },
      "required": [
        "action",
        "issue",
        "comment",
        "repository",
        "sender"
      ],
      "title": "issue_comment deleted event",
      "type": "object"
    },
    "issue_comment$edited": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "additionalProperties": false,
      "properties": {
        "action": {
          "enum": [
            "edited"
          ],
          "type": "string"
        },
        "changes": {
          "additionalProperties": false,
          "description": "The changes to the comment.",
          "properties": {
            "body": {
              "additionalProperties": false,
              "properties": {
                "from": {
                  "description": "The previous version of the body.",
                  "type": "string"
                }
              },
              "required": [
                "from"
              ],
              "type": "object"
            }
          },
          "type": "object"
        },
        "comment": {
          "$ref": "#/definitions/issue-comment"
        },
        "installation": {
          "$ref": "#/definitions/installation-lite"
        },
        "issue": {
          "allOf": [
            {
              "$ref": "#/definitions/issue"
            },
            {
              "properties": {
                "assignee": {
                  "oneOf": [
                    {
                      "$ref": "#/definitions/user"
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "labels": {
                  "items": {
                    "$ref": "#/definitions/label"
                  },
                  "type": "array"
                },
                "locked": {
                  "type": "boolean"
                },
                "state": {
                  "description": "State of the issue; either 'open' or 'closed'",
                  "enum": [
                    "open",
                    "closed"
                  ],
                  "type": "string"
                }
              },
              "required": [
                "labels",
                "state",
                "locked",
                "assignee"
              ],
              "tsAdditionalProperties": false,
              "type": "object"
            }
          ],
          "description": "The [issue](https://docs.github.com/en/rest/reference/issues) the comment belongs to."
        },
        "organization": {
          "$ref": "#/definitions/organization"
        },
        "repository": {
          "$ref": "#/definitions/repository"
        },
        "sender": {
          "$ref": "#/definitions/user"
        }
      },
      "required": [
        "action",
        "changes",
        "issue",
        "comment",
        "repository",
        "sender"
      ],
      "title": "issue_comment edited event",
      "type": "object"
    },
    "issue_comment_event": {
      "oneOf": [
        {
          "$ref": "#/definitions/issue_comment$created"
        },
        {
          "$ref": "#/definitions/issue_comment$deleted"
        },
        {
          "$ref": "#/definitions/issue_comment$edited"
        }
      ]
    },
    "issues$assigned": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "additionalProperties": false,
      "description": "Activity related to an issue. The type of activity is specified in the action property.",
      "properties": {
        "action": {
          "description": "The action that was performed.",
          "enum": [
            "assigned"
          ],
          "type": "string"
        },
        "assignee": {
          "description": "The optional user who was assigned or unassigned from the issue.",
          "oneOf": [
            {
              "$ref": "#/definitions/user"
            },
            {
              "type": "null"
            }
          ]
        },
        "installation": {
          "$ref": "#/definitions/installation-lite"
        },
        "issue": {
          "$ref": "#/definitions/issue"
        },
        "organization": {
          "$ref": "#/definitions/organization"
        },
        "repository": {
          "$ref": "#/definitions/repository"
        },
        "sender": {
          "$ref": "#/definitions/user"
        }
      },
      "required": [
        "action",
        "issue",
        "repository",
        "sender"
      ],
      "title": "issues assigned event",
      "type": "object"
    },
    "issues$closed": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "additionalProperties": false,
      "properties": {
        "action": {
          "description": "The action that was performed.",
          "enum": [
            "closed"
          ],
          "type": "string"
        },
        "installation": {
          "$ref": "#/definitions/installation-lite"
        },
        "issue": {
          "allOf": [
            {
              "$ref": "#/definitions/issue"
            },
            {
              "properties": {
                "closed_at": {
                  "type": "string"
                },
                "state": {
                  "enum": [
                    "closed"
                  ],
                  "type": "string"
                }
              },
              "required": [
                "state",
                "closed_at"
              ],
              "tsAdditionalProperties": false,
              "type": "object"
            }
          ],
          "description": "The [issue](https://docs.github.com/en/rest/reference/issues) itself."
        },
        "organization": {
          "$ref": "#/definitions/organization"
        },
        "repository": {
          "$ref": "#/definitions/repository"
        },
        "sender": {
          "$ref": "#/definitions/user"
        }
      },
      "required": [
        "action",
        "issue",
        "repository",
        "sender"
      ],
      "title": "issues closed event",
      "type": "object"
    },
    "issues$deleted": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "additionalProperties": false,
      "properties": {
        "action": {
          "enum": [
            "deleted"
          ],
          "type": "string"
        },
        "installation": {
          "$ref": "#/definitions/installation-lite"
        },
        "issue": {
          "$ref": "#/definitions/issue"
        },
        "organization": {
          "$ref": "#/definitions/organization"
        },
        "repository": {
          "$ref": "#/definitions/repository"
        },
        "sender": {
          "$ref": "#/definitions/user"
        }
      },
      "required": [
        "action",
        "issue",
        "repository",
        "sender"
      ],
      "title": "issues deleted event",
      "type": "object"
    },
    "issues$demilestoned": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "additionalProperties": false,
      "properties": {
        "action": {
          "enum": [
            "demilestoned"
          ],
          "type": "string"
        },
        "installation": {
          "$ref": "#/definitions/installation-lite"
        },
        "issue": {
          "allOf": [
            {
              "$ref": "#/definitions/issue"
            },
            {
              "properties": {
                "milestone": {
                  "type": "null"
                }
              },
              "required": [
                "milestone"
              ],
              "tsAdditionalProperties": false,
              "type": "object"
            }
          ]
        },
        "milestone": {
          "$ref": "#/definitions/milestone"
        },
        "organization": {
          "$ref": "#/definitions/organization"
        },
        "repository": {
          "$ref": "#/definitions/repository"
        },
        "sender": {
          "$ref": "#/definitions/user"
        }
      },
      "required": [
        "action",
        "issue",
        "milestone",
        "repository",
        "sender"
      ],
      "title": "issues demilestoned event",
      "type": "object"
    },
    "issues$edited": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "additionalProperties": false,
      "properties": {
        "action": {
          "enum": [
            "edited"
          ],
          "type": "string"
        },
        "changes": {
          "additionalProperties": false,
          "description": "The changes to the issue.",
          "properties": {
            "body": {
              "additionalProperties": false,
              "properties": {
                "from": {
                  "description": "The previous version of the body.",
                  "type": "string"
                }
              },
              "required": [
                "from"
              ],
              "type": "object"
            },
            "title": {
              "additionalProperties": false,
              "properties": {
                "from": {
                  "description": "The previous version of the title.",
                  "type": "string"
                }
              },
              "required": [
                "from"
              ],
              "type": "object"
            }
          },
          "type": "object"
        },
        "installation": {
          "$ref": "#/definitions/installation-lite"
        },
        "issue": {
          "$ref": "#/definitions/issue"
        },
        "label": {
          "$ref": "#/definitions/label"
        },
        "organization": {
          "$ref": "#/definitions/organization"
        },
        "repository": {
          "$ref": "#/definitions/repository"
        },
        "sender": {
          "$ref": "#/definitions/user"
        }
      },
      "required": [
        "action",
        "changes",
        "issue",
        "repository",
        "sender"
      ],
      "title": "issues edited event",
      "type": "object"
    },
    "issues$labeled": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "additionalProperties": false,
      "properties": {
        "action": {
          "enum": [
            "labeled"
          ],
          "type": "string"
        },
        "installation": {
          "$ref": "#/definitions/installation-lite"
        },
        "issue": {
          "$ref": "#/definitions/issue"
        },
        "label": {
          "$ref": "#/definitions/label",
          "description": "The label that was added to the issue."
        },
        "organization": {
          "$ref": "#/definitions/organization"
        },
        "repository": {
          "$ref": "#/definitions/repository"
        },
        "sender": {
          "$ref": "#/definitions/user"
        }
      },
      "required": [
        "action",
        "issue",
        "repository",
        "sender"
      ],
      "title": "issues labeled event",
      "type": "object"
    },
    "issues$locked": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "additionalProperties": false,
      "properties": {
        "action": {
          "enum": [
            "locked"
          ],
          "type": "string"
        },
        "installation": {
          "$ref": "#/definitions/installation-lite"
        },
        "issue": {
          "allOf": [
            {
              "$ref": "#/definitions/issue"
            },
            {
              "properties": {
                "active_lock_reason": {
                  "enum": [
                    "resolved",
                    "off-topic",
                    "too heated",
                    "spam",
                    null
                  ],
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "locked": {
                  "enum": [
                    true
                  ],
                  "type": "boolean"
                }
              },
              "required": [
                "locked",
                "active_lock_reason"
              ],
              "tsAdditionalProperties": false,
              "type": "object"
            }
          ]
        },
        "organization": {
          "$ref": "#/definitions/organization"
        },
        "repository": {
          "$ref": "#/definitions/repository"
        },
        "sender": {
          "$ref": "#/definitions/user"
        }
      },
      "required": [
        "action",
        "issue",
        "repository",
        "sender"
      ],
      "title": "issues locked event",
      "type": "object"
    },
    "issues$milestoned": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "additionalProperties": false,
      "properties": {
        "action": {
          "enum": [
            "milestoned"
          ],
          "type": "string"
        },
        "installation": {
          "$ref": "#/definitions/installation-lite"
        },
        "issue": {
          "allOf": [
            {
              "$ref": "#/definitions/issue"
            },
            {
              "properties": {
                "milestone": {
                  "$ref": "#/definitions/milestone"
                }
              },
              "required": [
                "milestone"
              ],
              "tsAdditionalProperties": false,
              "type": "object"
            }
          ]
        },
        "milestone": {
          "$ref": "#/definitions/milestone"
        },
        "organization": {
          "$ref": "#/definitions/organization"
        },
        "repository": {
          "$ref": "#/definitions/repository"
        },
        "sender": {
          "$ref": "#/definitions/user"
        }
      },
      "required": [
        "action",
        "issue",
        "milestone",
        "repository",
        "sender"
      ],
      "title": "issues milestoned event",
      "type": "object"
    },
    "issues$opened": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "additionalProperties": false,
      "properties": {
        "action": {
          "enum": [
            "opened"
          ],
          "type": "string"
        },
        "changes": {
          "additionalProperties": false,
          "properties": {
            "old_issue": {
              "$ref": "#/definitions/issue"
            },
            "old_repository": {
              "$ref": "#/definitions/repository"
            }
          },
          "required": [
            "old_issue",
            "old_repository"
          ],
          "type": "object"
        },
        "installation": {
          "$ref": "#/definitions/installation-lite"
        },
        "issue": {
          "allOf": [
            {
              "$ref": "#/definitions/issue"
            },
            {
              "properties": {
                "closed_at": {
                  "type": "null"
                },
                "state": {
                  "enum": [
                    "open"
                  ],
                  "type": "string"
                }
              },
              "required": [
                "state",
                "closed_at"
              ],
              "tsAdditionalProperties": false,
              "type": "object"
            }
          ]
        },
        "organization": {
          "$ref": "#/definitions/organization"
        },
        "repository": {
          "$ref": "#/definitions/repository"
        },
        "sender": {
          "$ref": "#/definitions/user"
        }
      },
      "required": [
        "action",
        "issue",
        "repository",
        "sender"
      ],
      "title": "issues opened event",
      "type": "object"
    },
    "issues$pinned": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "additionalProperties": false,
      "properties": {
        "action": {
          "enum": [
            "pinned"
          ],
          "type": "string"
        },
        "installation": {
          "$ref": "#/definitions/installation-lite"
        },
        "issue": {
          "$ref": "#/definitions/issue"
        },
        "organization": {
          "$ref": "#/definitions/organization"
        },
        "repository": {
          "$ref": "#/definitions/repository"
        },
        "sender": {
          "$ref": "#/definitions/user"
        }
      },
      "required": [
        "action",
        "issue",
        "repository",
        "sender"
      ],
      "title": "issues pinned event",
      "type": "object"
    },
    "issues$reopened": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "additionalProperties": false,
      "properties": {
        "action": {
          "enum": [
            "reopened"
          ],
          "type": "string"
        },
        "installation": {
          "$ref": "#/definitions/installation-lite"
        },
        "issue": {
          "allOf": [
            {
              "$ref": "#/definitions/issue"
            },
            {
              "properties": {
                "state": {
                  "enum": [
                    "open"
                  ],
                  "type": "string"
                }
              },
              "required": [
                "state"
              ],
              "tsAdditionalProperties": false,
              "type": "object"
            }
          ]
        },
        "organization": {
          "$ref": "#/definitions/organization"
        },
        "repository": {
          "$ref": "#/definitions/repository"
        },
        "sender": {
          "$ref": "#/definitions/user"
        }
      },
      "required": [
        "action",
        "issue",
        "repository",
        "sender"
      ],
      "title": "issues reopened event",
      "type": "object"
    },
    "issues$transferred": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "additionalProperties": false,
      "properties": {
        "action": {
          "enum": [
            "transferred"
          ],
          "type": "string"
        },
        "changes": {
          "additionalProperties": false,
          "properties": {
            "new_issue": {
              "$ref": "#/definitions/issue"
            },
            "new_repository": {
              "$ref": "#/definitions/repository"
            }
          },
          "required": [
            "new_issue",
            "new_repository"
          ],
          "type": "object"
        },
        "installation": {
          "$ref": "#/definitions/installation-lite"
        },
        "issue": {
          "$ref": "#/definitions/issue"
        },
        "organization": {
          "$ref": "#/definitions/organization"
        },
        "repository": {
          "$ref": "#/definitions/repository"
        },
        "sender": {
          "$ref": "#/definitions/user"
        }
      },
      "required": [
        "action",
        "changes",
        "issue",
        "repository",
        "sender"
      ],
      "title": "issues transferred event",
      "type": "object"
    },
    "issues$unassigned": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "additionalProperties": false,
      "properties": {
        "action": {
          "description": "The action that was performed.",
          "enum": [
            "unassigned"
          ],
          "type": "string"
        },
        "assignee": {
          "description": "The optional user who was assigned or unassigned from the issue.",
          "oneOf": [
            {
              "$ref": "#/definitions/user"
            },
            {
              "type": "null"
            }
          ]
        },
        "installation": {
          "$ref": "#/definitions/installation-lite"
        },
        "issue": {
          "$ref": "#/definitions/issue"
        },
        "organization": {
          "$ref": "#/definitions/organization"
        },
        "repository": {
          "$ref": "#/definitions/repository"
        },
        "sender": {
          "$ref": "#/definitions/user"
        }
      },
      "required": [
        "action",
        "issue",
        "repository",
        "sender"
      ],
      "title": "issues unassigned event",
      "type": "object"
    },
    "issues$unlabeled": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "additionalProperties": false,
      "properties": {
        "action": {
          "enum": [
            "unlabeled"
          ],
          "type": "string"
        },
        "installation": {
          "$ref": "#/definitions/installation-lite"
        },
        "issue": {
          "$ref": "#/definitions/issue"
        },
        "label": {
          "$ref": "#/definitions/label",
          "description": "The label that was removed from the issue."
        },
        "organization": {
          "$ref": "#/definitions/organization"
        },
        "repository": {
          "$ref": "#/definitions/repository"
        },
        "sender": {
          "$ref": "#/definitions/user"
        }
      },
      "required": [
        "action",
        "issue",
        "repository",
        "sender"
      ],
      "title": "issues unlabeled event",
      "type": "object"
    },
    "issues$unlocked": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "additionalProperties": false,
      "properties": {
        "action": {
          "enum": [
            "unlocked"
          ],
          "type": "string"
        },
        "installation": {
          "$ref": "#/definitions/installation-lite"
        },
        "issue": {
          "allOf": [
            {
              "$ref": "#/definitions/issue"
            },
            {
              "properties": {
                "active_lock_reason": {
                  "type": "null"
                },
                "locked": {
                  "enum": [
                    false
                  ],
                  "type": "boolean"
                }
              },
              "required": [
                "locked",
                "active_lock_reason"
              ],
              "tsAdditionalProperties": false,
              "type": "object"
            }
          ]
        },
        "organization": {
          "$ref": "#/definitions/organization"
        },
        "repository": {
          "$ref": "#/definitions/repository"
        },
        "sender": {
          "$ref": "#/definitions/user"
        }
      },
      "required": [
        "action",
        "issue",
        "repository",
        "sender"
      ],
      "title": "issues unlocked event",
      "type": "object"
    },
    "issues$unpinned": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "additionalProperties": false,
      "properties": {
        "action": {
          "enum": [
            "unpinned"
          ],
          "type": "string"
        },
        "installation": {
          "$ref": "#/definitions/installation-lite"
        },
        "issue": {
          "$ref": "#/definitions/issue"
        },
        "organization": {
          "$ref": "#/definitions/organization"
        },
        "repository": {
          "$ref": "#/definitions/repository"
        },
        "sender": {
          "$ref": "#/definitions/user"
        }
      },
      "required": [
        "action",
        "issue",
        "repository",
        "sender"
      ],
      "title": "issues unpinned event",
      "type": "object"
    },
    "issues_event": {
      "oneOf": [
        {
          "$ref": "#/definitions/issues$assigned"
        },
        {
          "$ref": "#/definitions/issues$closed"
        },
        {
          "$ref": "#/definitions/issues$deleted"
        },
        {
          "$ref": "#/definitions/issues$demilestoned"
        },
        {
          "$ref": "#/definitions/issues$edited"
        },
        {
          "$ref": "#/definitions/issues$labeled"
        },
        {
          "$ref": "#/definitions/issues$locked"
        },
        {
          "$ref": "#/definitions/issues$milestoned"
        },
        {
          "$ref": "#/definitions/issues$opened"
        },
        {
          "$ref": "#/definitions/issues$pinned"
        },
        {
          "$ref": "#/definitions/issues$reopened"
        },
        {
          "$ref": "#/definitions/issues$transferred"
        },
        {
          "$ref": "#/definitions/issues$unassigned"
        },
        {
          "$ref": "#/definitions/issues$unlabeled"
        },
        {
          "$ref": "#/definitions/issues$unlocked"
        },
        {
          "$ref": "#/definitions/issues$unpinned"
        }
      ]
    },
    "label": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "additionalProperties": false,
      "properties": {
        "color": {
          "description": "6-character hex code, without the leading #, identifying the color",
          "type": "string"
        },
        "default": {
          "type": "boolean"
        },
        "description": {
          "type": [
            "string",
            "null"
          ]
        },
        "id": {
          "type": "integer"
        },
        "name": {
          "description": "The name of the label.",
          "type": "string"
        },
        "node_id": {
          "type": "string"
        },
        "url": {
          "description": "URL for the label",
          "format": "uri",
          "type": "string"
        }
      },
      "required": [
        "id",
        "node_id",
        "url",
        "name",
        "color",
        "default",
        "description"
      ],
      "title": "Label",
      "type": "object"
    },
    "label$created": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "additionalProperties": false,
      "properties": {
        "action": {
          "enum": [
            "created"
          ],
          "type": "string"
        },
        "installation": {
          "$ref": "#/definitions/installation-lite"
        },
        "label": {
          "$ref": "#/definitions/label",
          "description": "The label that was added."
        },
        "organization": {
          "$ref": "#/definitions/organization"
        },
        "repository": {
          "$ref": "#/definitions/repository"
        },
        "sender": {
          "$ref": "#/definitions/user"
        }
      },
      "required": [
        "action",
        "label",
        "repository",
        "sender"
      ],
      "title": "label created event",
      "type": "object"
    },
    "label$deleted": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "additionalProperties": false,
      "properties": {
        "action": {
          "enum": [
            "deleted"
          ],
          "type": "string"
        },
        "installation": {
          "$ref": "#/definitions/installation-lite"
        },
        "label": {
          "$ref": "#/definitions/label",
          "description": "The label that was removed."
        },
        "organization": {
          "$ref": "#/definitions/organization"
        },
        "repository": {
          "$ref": "#/definitions/repository"
        },
        "sender": {
          "$ref": "#/definitions/user"
        }
      },
      "required": [
        "action",
        "label",
        "repository",
        "sender"
      ],
      "title": "label deleted event",
      "type": "object"
    },
    "label$edited": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "additionalProperties": false,
      "properties": {
        "action": {
          "enum": [
            "edited"
          ],
          "type": "string"
        },
        "changes": {
          "additionalProperties": false,
          "description": "The changes to the label if the action was `edited`.",
          "properties": {
            "color": {
              "additionalProperties": false,
              "properties": {
                "from": {
                  "description": "The previous version of the color if the action was `edited`.",
                  "type": "string"
                }
              },
              "required": [
                "from"
              ],
              "type": "object"
            },
            "description": {
              "additionalProperties": false,
              "properties": {
                "from": {
                  "description": "The previous version of the description if the action was `edited`.",
                  "type": "string"
                }
              },
              "required": [
                "from"
              ],
              "type": "object"
            },
            "name": {
              "additionalProperties": false,
              "properties": {
                "from": {
                  "description": "The previous version of the name if the action was `edited`.",
                  "type": "string"
                }
              },
              "required": [
                "from"
              ],
              "type": "object"
            }
          },
          "type": "object"
        },
        "installation": {
          "$ref": "#/definitions/installation-lite"
        },
        "label": {
          "$ref": "#/definitions/label",
          "description": "The label that was edited."
        },
        "organization": {
          "$ref": "#/definitions/organization"
        },
        "repository": {
          "$ref": "#/definitions/repository"
        },
        "sender": {
          "$ref": "#/definitions/user"
        }
      },
      "required": [
        "action",
        "label",
        "repository",
        "sender"
      ],
      "title": "label edited event",
      "type": "object"
    },
    "label_event": {
      "oneOf": [
        {
          "$ref": "#/definitions/label$created"
        },
        {
          "$ref": "#/definitions/label$deleted"
        },
        {
          "$ref": "#/definitions/label$edited"
        }
      ]
    },
    "license": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "additionalProperties": false,
      "properties": {
        "key": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "node_id": {
          "type": "string"
        },
        "spdx_id": {
          "type": "string"
        },
        "url": {
          "format": "uri",
          "type": [
            "string",
            "null"
          ]
        }
      },
      "required": [
        "key",
        "name",
        "spdx_id",
        "url",
        "node_id"
      ],
      "title": "License",
      "type": "object"
    },
    "link": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "additionalProperties": false,
      "properties": {
        "href": {
          "format": "uri-template",
          "type": "string"
        }
      },
      "required": [
        "href"
      ],
      "title": "Link",
      "type": "object"
    },
    "marketplace-purchase": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "additionalProperties": false,
      "properties": {
        "account": {
          "additionalProperties": false,
          "properties": {
            "id": {
              "type": "integer"
            },
            "login": {
              "type": "string"
            },
            "node_id": {
              "type": "string"
            },
            "organization_billing_email": {
              "type": "string"
            },
            "type": {
              "type": "string"
            }
          },
          "required": [
            "type",
            "id",
            "node_id",
            "login",
            "organization_billing_email"
          ],
          "type": "object"
        },
        "billing_cycle": {
          "type": "string"
        },
        "free_trial_ends_on": {
          "type": "null"
        },
        "next_billing_date": {
          "type": "string"
        },
        "on_free_trial": {
          "type": "boolean"
        },
        "plan": {
          "additionalProperties": false,
          "properties": {
            "bullets": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "description": {
              "type": "string"
            },
            "has_free_trial": {
              "type": "boolean"
            },
            "id": {
              "type": "integer"
            },
            "monthly_price_in_cents": {
              "type": "integer"
            },
            "name": {
              "type": "string"
            },
            "price_model": {
              "type": "string"
            },
            "unit_name": {
              "type": [
                "string",
                "null"
              ]
            },
            "yearly_price_in_cents": {
              "type": "integer"
            }
          },
          "required": [
            "id",
            "name",
            "description",
            "monthly_price_in_cents",
            "yearly_price_in_cents",
            "price_model",
            "has_free_trial",
            "unit_name",
            "bullets"
          ],
          "type": "object"
        },
        "unit_count": {
          "type": "integer"
        }
      },
      "required": [
        "account",
        "billing_cycle",
        "unit_count",
        "on_free_trial",
        "free_trial_ends_on",
        "plan"
      ],
      "title": "Marketplace Purchase",
      "type": "object"
    },
    "marketplace_purchase$cancelled": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "additionalProperties": false,
      "properties": {
        "action": {
          "enum": [
            "cancelled"
          ],
          "type": "string"
        },
        "effective_date": {
          "type": "string"
        },
        "marketplace_purchase": {
          "allOf": [
            {
              "$ref": "#/definitions/marketplace-purchase"
            },
            {
              "properties": {
                "next_billing_date": {
                  "type": "string"
                }
              },
              "required": [
                "next_billing_date"
              ],
              "tsAdditionalProperties": false,
              "type": "object"
            }
          ]
        },
        "previous_marketplace_purchase": {
          "$ref": "#/definitions/marketplace-purchase"
        },
        "sender": {
          "additionalProperties": false,
          "properties": {
            "avatar_url": {
              "format": "uri",
              "type": "string"
            },
            "email": {
              "type": "string"
            },
            "events_url": {
              "format": "uri-template",
              "type": "string"
            },
            "followers_url": {
              "format": "uri",
              "type": "string"
            },
            "following_url": {
              "format": "uri-template",
              "type": "string"
            },
            "gists_url": {
              "format": "uri-template",
              "type": "string"
            },
            "gravatar_id": {
              "type": "string"
            },
            "html_url": {
              "format": "uri",
              "type": "string"
            },
            "id": {
              "type": "integer"
            },
            "login": {
              "type": "string"
            },
            "organizations_url": {
              "format": "uri",
              "type": "string"
            },
            "received_events_url": {
              "format": "uri",
              "type": "string"
            },
            "repos_url": {
              "format": "uri",
              "type": "string"
            },
            "site_admin": {
              "type": "boolean"
            },
            "starred_url": {
              "format": "uri-template",
              "type": "string"
            },
            "subscriptions_url": {
              "format": "uri",
              "type": "string"
            },
            "type": {
              "type": "string"
            },
            "url": {
              "format": "uri",
              "type": "string"
            }
          },
          "required": [
            "login",
            "id",
            "avatar_url",
            "gravatar_id",
            "url",
            "html_url",
            "followers_url",
            "following_url",
            "gists_url",
            "starred_url",
            "subscriptions_url",
            "organizations_url",
            "repos_url",
            "events_url",
            "received_events_url",
            "type",
            "site_admin",
            "email"
          ],
          "type": "object"
        }
      },
      "required": [
        "action",
        "effective_date",
        "sender",
        "marketplace_purchase"
      ],
      "title": "marketplace_purchase cancelled event",
      "type": "object"
    },
    "marketplace_purchase$changed": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "additionalProperties": false,
      "properties": {
        "action": {
          "enum": [
            "changed"
          ],
          "type": "string"
        },
        "effective_date": {
          "type": "string"
        },
        "marketplace_purchase": {
          "allOf": [
            {
              "$ref": "#/definitions/marketplace-purchase"
            },
            {
              "properties": {
                "next_billing_date": {
                  "type": "string"
                }
              },
              "required": [
                "next_billing_date"
              ],
              "tsAdditionalProperties": false,
              "type": "object"
            }
          ]
        },
        "previous_marketplace_purchase": {
          "$ref": "#/definitions/marketplace-purchase"
        },
        "sender": {
          "additionalProperties": false,
          "properties": {
            "avatar_url": {
              "format": "uri",
              "type": "string"
            },
            "email": {
              "type": "string"
            },
            "events_url": {
              "format": "uri-template",
              "type": "string"
            },
            "followers_url": {
              "format": "uri",
              "type": "string"
            },
            "following_url": {
              "format": "uri-template",
              "type": "string"
            },
            "gists_url": {
              "format": "uri-template",
              "type": "string"
            },
            "gravatar_id": {
              "type": "string"
            },
            "html_url": {
              "format": "uri",
              "type": "string"
            },
            "id": {
              "type": "integer"
            },
            "login": {
              "type": "string"
            },
            "organizations_url": {
              "format": "uri",
              "type": "string"
            },
            "received_events_url": {
              "format": "uri",
              "type": "string"
            },
            "repos_url": {
              "format": "uri",
              "type": "string"
            },
            "site_admin": {
              "type": "boolean"
            },
            "starred_url": {
              "format": "uri-template",
              "type": "string"
            },
            "subscriptions_url": {
              "format": "uri",
              "type": "string"
            },
            "type": {
              "type": "string"
            },
            "url": {
              "format": "uri",
              "type": "string"
            }
          },
          "required": [
            "login",
            "id",
            "avatar_url",
            "gravatar_id",
            "url",
            "html_url",
            "followers_url",
            "following_url",
            "gists_url",
            "starred_url",
            "subscriptions_url",
            "organizations_url",
            "repos_url",
            "events_url",
            "received_events_url",
            "type",
            "site_admin",
            "email"
          ],
          "type": "object"
        }
      },
      "required": [
        "action",
        "effective_date",
        "sender",
        "marketplace_purchase"
      ],
      "title": "marketplace_purchase changed event",
      "type": "object"
    },
    "marketplace_purchase$pending_change": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "additionalProperties": false,
      "properties": {
        "action": {
          "enum": [
            "pending_change"
          ],
          "type": "string"
        },
        "effective_date": {
          "type": "string"
        },
        "marketplace_purchase": {
          "allOf": [
            {
              "$ref": "#/definitions/marketplace-purchase"
            },
            {
              "properties": {
                "next_billing_date": {
                  "type": "string"
                }
              },
              "required": [
                "next_billing_date"
              ],
              "tsAdditionalProperties": false,
              "type": "object"
            }
          ]
        },
        "previous_marketplace_purchase": {
          "$ref": "#/definitions/marketplace-purchase"
        },
        "sender": {
          "additionalProperties": false,
          "properties": {
            "avatar_url": {
              "format": "uri",
              "type": "string"
            },
            "email": {
              "type": "string"
            },
            "events_url": {
              "format": "uri-template",
              "type": "string"
            },
            "followers_url": {
              "format": "uri",
              "type": "string"
            },
            "following_url": {
              "format": "uri-template",
              "type": "string"
            },
            "gists_url": {
              "format": "uri-template",
              "type": "string"
            },
            "gravatar_id": {
              "type": "string"
            },
            "html_url": {
              "format": "uri",
              "type": "string"
            },
            "id": {
              "type": "integer"
            },
            "login": {
              "type": "string"
            },
            "organizations_url": {
              "format": "uri",
              "type": "string"
            },
            "received_events_url": {
              "format": "uri",
              "type": "string"
            },
            "repos_url": {
              "format": "uri",
              "type": "string"
            },
            "site_admin": {
              "type": "boolean"
            },
            "starred_url": {
              "format": "uri-template",
              "type": "string"
            },
            "subscriptions_url": {
              "format": "uri",
              "type": "string"
            },
            "type": {
              "type": "string"
            },
            "url": {
              "format": "uri",
              "type": "string"
            }
          },
          "required": [
            "login",
            "id",
            "avatar_url",
            "gravatar_id",
            "url",
            "html_url",
            "followers_url",
            "following_url",
            "gists_url",
            "starred_url",
            "subscriptions_url",
            "organizations_url",
            "repos_url",
            "events_url",
            "received_events_url",
            "type",
            "site_admin",
            "email"
          ],
          "type": "object"
        }
      },
      "required": [
        "action",
        "effective_date",
        "sender",
        "marketplace_purchase"
      ],
      "title": "marketplace_purchase pending_change event",
      "type": "object"
    },
    "marketplace_purchase$pending_change_cancelled": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "additionalProperties": false,
      "properties": {
        "action": {
          "enum": [
            "pending_change_cancelled"
          ],
          "type": "string"
        },
        "effective_date": {
          "type": "string"
        },
        "marketplace_purchase": {
          "allOf": [
            {
              "$ref": "#/definitions/marketplace-purchase"
            },
            {
              "properties": {
                "next_billing_date": {
                  "type": "string"
                }
              },
              "required": [
                "next_billing_date"
              ],
              "tsAdditionalProperties": false,
              "type": "object"
            }
          ]
        },
        "previous_marketplace_purchase": {
          "$ref": "#/definitions/marketplace-purchase"
        },
        "sender": {
          "additionalProperties": false,
          "properties": {
            "avatar_url": {
              "format": "uri",
              "type": "string"
            },
            "email": {
              "type": "string"
            },
            "events_url": {
              "format": "uri-template",
              "type": "string"
            },
            "followers_url": {
              "format": "uri",
              "type": "string"
            },
            "following_url": {
              "format": "uri-template",
              "type": "string"
            },
            "gists_url": {
              "format": "uri-template",
              "type": "string"
            },
            "gravatar_id": {
              "type": "string"
            },
            "html_url": {
              "format": "uri",
              "type": "string"
            },
            "id": {
              "type": "integer"
            },
            "login": {
              "type": "string"
            },
            "organizations_url": {
              "format": "uri",
              "type": "string"
            },
            "received_events_url": {
              "format": "uri",
              "type": "string"
            },
            "repos_url": {
              "format": "uri",
              "type": "string"
            },
            "site_admin": {
              "type": "boolean"
            },
            "starred_url": {
              "format": "uri-template",
              "type": "string"
            },
            "subscriptions_url": {
              "format": "uri",
              "type": "string"
            },
            "type": {
              "type": "string"
            },
            "url": {
              "format": "uri",
              "type": "string"
            }
          },
          "required": [
            "login",
            "id",
            "avatar_url",
            "gravatar_id",
            "url",
            "html_url",
            "followers_url",
            "following_url",
            "gists_url",
            "starred_url",
            "subscriptions_url",
            "organizations_url",
            "repos_url",
            "events_url",
            "received_events_url",
            "type",
            "site_admin",
            "email"
          ],
          "type": "object"
        }
      },
      "required": [
        "action",
        "effective_date",
        "sender",
        "marketplace_purchase"
      ],
      "title": "marketplace_purchase pending_change_cancelled event",
      "type": "object"
    },
    "marketplace_purchase$purchased": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "additionalProperties": false,
      "properties": {
        "action": {
          "enum": [
            "purchased"
          ],
          "type": "string"
        },
        "effective_date": {
          "type": "string"
        },
        "marketplace_purchase": {
          "allOf": [
            {
              "$ref": "#/definitions/marketplace-purchase"
            },
            {
              "properties": {
                "next_billing_date": {
                  "type": "string"
                }
              },
              "required": [
                "next_billing_date"
              ],
              "tsAdditionalProperties": false,
              "type": "object"
            }
          ]
        },
        "previous_marketplace_purchase": {
          "$ref": "#/definitions/marketplace-purchase"
        },
        "sender": {
          "additionalProperties": false,
          "properties": {
            "avatar_url": {
              "format": "uri",
              "type": "string"
            },
            "email": {
              "type": "string"
            },
            "events_url": {
              "format": "uri-template",
              "type": "string"
            },
            "followers_url": {
              "format": "uri",
              "type": "string"
            },
            "following_url": {
              "format": "uri-template",
              "type": "string"
            },
            "gists_url": {
              "format": "uri-template",
              "type": "string"
            },
            "gravatar_id": {
              "type": "string"
            },
            "html_url": {
              "format": "uri",
              "type": "string"
            },
            "id": {
              "type": "integer"
            },
            "login": {
              "type": "string"
            },
            "organizations_url": {
              "format": "uri",
              "type": "string"
            },
            "received_events_url": {
              "format": "uri",
              "type": "string"
            },
            "repos_url": {
              "format": "uri",
              "type": "string"
            },
            "site_admin": {
              "type": "boolean"
            },
            "starred_url": {
              "format": "uri-template",
              "type": "string"
            },
            "subscriptions_url": {
              "format": "uri",
              "type": "string"
            },
            "type": {
              "type": "string"
            },
            "url": {
              "format": "uri",
              "type": "string"
            }
          },
          "required": [
            "login",
            "id",
            "avatar_url",
            "gravatar_id",
            "url",
            "html_url",
            "followers_url",
            "following_url",
            "gists_url",
            "starred_url",
            "subscriptions_url",
            "organizations_url",
            "repos_url",
            "events_url",
            "received_events_url",
            "type",
            "site_admin",
            "email"
          ],
          "type": "object"
        }
      },
      "required": [
        "action",
        "effective_date",
        "sender",
        "marketplace_purchase"
      ],
      "title": "marketplace_purchase purchased event",
      "type": "object"
    },
    "marketplace_purchase_event": {
      "oneOf": [
        {
          "$ref": "#/definitions/marketplace_purchase$cancelled"
        },
        {
          "$ref": "#/definitions/marketplace_purchase$changed"
        },
        {
          "$ref": "#/definitions/marketplace_purchase$pending_change"
        },
        {
          "$ref": "#/definitions/marketplace_purchase$pending_change_cancelled"
        },
        {
          "$ref": "#/definitions/marketplace_purchase$purchased"
        }
      ]
    },
    "member$added": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "additionalProperties": false,
      "description": "Activity related to repository collaborators. The type of activity is specified in the action property.",
      "properties": {
        "action": {
          "enum": [
            "added"
          ],
          "type": "string"
        },
        "changes": {
          "additionalProperties": false,
          "properties": {
            "permission": {
              "additionalProperties": false,
              "properties": {
                "to": {
                  "enum": [
                    "write",
                    "admin"
                  ],
                  "type": "string"
                }
              },
              "required": [
                "to"
              ],
              "type": "object"
            }
          },
          "type": "object"
        },
        "installation": {
          "$ref": "#/definitions/installation-lite"
        },
        "member": {
          "$ref": "#/definitions/user",
          "description": "The user that was added."
        },
        "organization": {
          "$ref": "#/definitions/organization"
        },
        "repository": {
          "$ref": "#/definitions/repository"
        },
        "sender": {
          "$ref": "#/definitions/user"
        }
      },
      "required": [
        "action",
        "member",
        "repository",
        "sender"
      ],
      "title": "member added event",
      "type": "object"
    },
    "member$edited": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "additionalProperties": false,
      "properties": {
        "action": {
          "enum": [
            "edited"
          ],
          "type": "string"
        },
        "changes": {
          "additionalProperties": false,
          "description": "The changes to the collaborator permissions",
          "properties": {
            "old_permission": {
              "additionalProperties": false,
              "properties": {
                "from": {
                  "description": "The previous permissions of the collaborator if the action was edited.",
                  "type": "string"
                }
              },
              "required": [
                "from"
              ],
              "type": "object"
            }
          },
          "required": [
            "old_permission"
          ],
          "type": "object"
        },
        "installation": {
          "$ref": "#/definitions/installation-lite"
        },
        "member": {
          "$ref": "#/definitions/user",
          "description": "The user who's permissions are changed."
        },
        "organization": {
          "$ref": "#/definitions/organization"
        },
        "repository": {
          "$ref": "#/definitions/repository"
        },
        "sender": {
          "$ref": "#/definitions/user"
        }
      },
      "required": [
        "action",
        "changes",
        "member",
        "repository",
        "sender"
      ],
      "title": "member edited event",
      "type": "object"
    },
    "member$removed": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "additionalProperties": false,
      "properties": {
        "action": {
          "enum": [
            "removed"
          ],
          "type": "string"
        },
        "installation": {
          "$ref": "#/definitions/installation-lite"
        },
        "member": {
          "$ref": "#/definitions/user",
          "description": "The user that was removed."
        },
        "organization": {
          "$ref": "#/definitions/organization"
        },
        "repository": {
          "$ref": "#/definitions/repository"
        },
        "sender": {
          "$ref": "#/definitions/user"
        }
      },
      "required": [
        "action",
        "member",
        "repository",
        "sender"
      ],
      "title": "member removed event",
      "type": "object"
    },
    "member_event": {
      "oneOf": [
        {
          "$ref": "#/definitions/member$added"
        },
        {
          "$ref": "#/definitions/member$edited"
        },
        {
          "$ref": "#/definitions/member$removed"
        }
      ]
    },
    "membership": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "additionalProperties": false,
      "description": "The membership between the user and the organization. Not present when the action is `member_invited`.",
      "properties": {
        "organization_url": {
          "format": "uri",
          "type": "string"
        },
        "role": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "url": {
          "format": "uri",
          "type": "string"
        },
        "user": {
          "$ref": "#/definitions/user"
        }
      },
      "required": [
        "url",
        "state",
        "role",
        "organization_url",
        "user"
      ],
      "title": "Membership",
      "type": "object"
    },
    "membership$added": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "additionalProperties": false,
      "properties": {
        "action": {
          "enum": [
            "added"
          ],
          "type": "string"
        },
        "installation": {
          "$ref": "#/definitions/installation-lite"
        },
        "member": {
          "$ref": "#/definitions/user",
          "description": "The [user](https://docs.github.com/en/rest/reference/users) that was added or removed."
        },
        "organization": {
          "$ref": "#/definitions/organization"
        },
        "scope": {
          "description": "The scope of the membership. Currently, can only be `team`.",
          "enum": [
            "team"
          ],
          "type": "string"
        },
        "sender": {
          "$ref": "#/definitions/user"
        },
        "team": {
          "$ref": "#/definitions/team",
          "description": "The [team](https://docs.github.com/en/rest/reference/teams) for the membership."
        }
      },
      "required": [
        "action",
        "scope",
        "member",
        "sender",
        "team",
        "organization"
      ],
      "title": "membership added event",
      "type": "object"
    },
    "membership$removed": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "additionalProperties": false,
      "properties": {
        "action": {
          "enum": [
            "removed"
          ],
          "type": "string"
        },
        "installation": {
          "$ref": "#/definitions/installation-lite"
        },
        "member": {
          "$ref": "#/definitions/user",
          "description": "The [user](https://docs.github.com/en/rest/reference/users) that was added or removed."
        },
        "organization": {
          "$ref": "#/definitions/organization"
        },
        "scope": {
          "description": "The scope of the membership. Currently, can only be `team`.",
          "enum": [
            "team",
            "organization"
          ],
          "type": "string"
        },
        "sender": {
          "$ref": "#/definitions/user"
        },
        "team": {
          "description": "The [team](https://docs.github.com/en/rest/reference/teams) for the membership.",
          "oneOf": [
            {
              "$ref": "#/definitions/team"
            },
            {
              "additionalProperties": false,
              "properties": {
                "deleted": {
                  "type": "boolean"
                },
                "id": {
                  "type": "integer"
                },
                "name": {
                  "type": "string"
                }
              },
              "required": [
                "id",
                "name"
              ],
              "type": "object"
            }
          ]
        }
      },
      "required": [
        "action",
        "scope",
        "member",
        "sender",
        "team",
        "organization"
      ],
      "title": "membership removed event",
      "type": "object"
    },
    "membership_event": {
      "oneOf": [
        {
          "$ref": "#/definitions/membership$added"
        },
        {
          "$ref": "#/definitions/membership$removed"
        }
      ]
    },
    "meta$deleted": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "additionalProperties": false,
      "properties": {
        "action": {
          "enum": [
            "deleted"
          ],
          "type": "string"
        },
        "hook": {
          "additionalProperties": false,
          "description": "The modified webhook. This will contain different keys based on the type of webhook it is: repository, organization, business, app, or GitHub Marketplace.",
          "properties": {
            "active": {
              "type": "boolean"
            },
            "config": {
              "additionalProperties": false,
              "properties": {
                "content_type": {
                  "enum": [
                    "json",
                    "form"
                  ],
                  "type": "string"
                },
                "insecure_ssl": {
                  "type": "string"
                },
                "secret": {
                  "type": "string"
                },
                "url": {
                  "format": "uri",
                  "type": "string"
                }
              },
              "required": [
                "content_type",
                "insecure_ssl",
                "url",
                "secret"
              ],
              "type": "object"
            },
            "created_at": {
              "type": "string"
            },
            "events": {
              "$ref": "#/definitions/webhook-events"
            },
            "id": {
              "type": "integer"
            },
            "name": {
              "type": "string"
            },
            "type": {
              "type": "string"
            },
            "updated_at": {
              "type": "string"
            }
          },
          "required": [
            "type",
            "id",
            "name",
            "active",
            "events",
            "config",
            "updated_at",
            "created_at"
          ],
          "type": "object"
        },
        "hook_id": {
          "description": "The id of the modified webhook.",
          "type": "integer"
        },
        "repository": {
          "$ref": "#/definitions/repository"
        },
        "sender": {
          "$ref": "#/definitions/user"
        }
      },
      "required": [
        "action",
        "hook_id",
        "hook",
        "repository",
        "sender"
      ],
      "title": "meta deleted event",
      "type": "object"
    },
    "meta_event": {
      "oneOf": [
        {
          "$ref": "#/definitions/meta$deleted"
        }
      ]
    },
    "milestone": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "additionalProperties": false,
      "description": "A collection of related issues and pull requests.",
      "properties": {
        "closed_at": {
          "format": "date-time",
          "type": [
            "string",
            "null"
          ]
        },
        "closed_issues": {
          "type": "integer"
        },
        "created_at": {
          "format": "date-time",
          "type": "string"
        },
        "creator": {
          "$ref": "#/definitions/user"
        },
        "description": {
          "type": [
            "string",
            "null"
          ]
        },
        "due_on": {
          "format": "date-time",
          "type": [
            "string",
            "null"
          ]
        },
        "html_url": {
          "format": "uri",
          "type": "string"
        },
        "id": {
          "type": "integer"
        },
        "labels_url": {
          "format": "uri",
          "type": "string"
        },
        "node_id": {
          "type": "string"
        },
        "number": {
          "description": "The number of the milestone.",
          "type": "integer"
        },
        "open_issues": {
          "type": "integer"
        },
        "state": {
          "description": "The state of the milestone.",
          "enum": [
            "open",
            "closed"
          ],
          "type": "string"
        },
        "title": {
          "description": "The title of the milestone.",
          "type": "string"
        },
        "updated_at": {
          "format": "date-time",
          "type": "string"
        },
        "url": {
          "format": "uri",
          "type": "string"
        }
      },
      "required": [
        "url",
        "html_url",
        "labels_url",
        "id",
        "node_id",
        "number",
        "title",
        "description",
        "creator",
        "open_issues",
        "closed_issues",
        "state",
        "created_at",
        "updated_at",
        "due_on",
        "closed_at"
      ],
      "title": "Milestone",
      "type": "object"
    },
    "milestone$closed": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "additionalProperties": false,
      "properties": {
        "action": {
          "enum": [
            "closed"
          ],
          "type": "string"
        },
        "installation": {
          "$ref": "#/definitions/installation-lite"
        },
        "milestone": {
          "allOf": [
            {
              "$ref": "#/definitions/milestone"
            },
            {
              "properties": {
                "closed_at": {
                  "type": "string"
                },
                "state": {
                  "enum": [
                    "closed"
                  ],
                  "type": "string"
                }
              },
              "required": [
                "state",
                "closed_at"
              ],
              "tsAdditionalProperties": false,
              "type": "object"
            }
          ]
        },
        "organization": {
          "$ref": "#/definitions/organization"
        },
        "repository": {
          "$ref": "#/definitions/repository"
        },
        "sender": {
          "$ref": "#/definitions/user"
        }
      },
      "required": [
        "action",
        "milestone",
        "repository",
        "sender"
      ],
      "title": "milestone closed event",
      "type": "object"
    },
    "milestone$created": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "additionalProperties": false,
      "properties": {
        "action": {
          "enum": [
            "created"
          ],
          "type": "string"
        },
        "installation": {
          "$ref": "#/definitions/installation-lite"
        },
        "milestone": {
          "allOf": [
            {
              "$ref": "#/definitions/milestone"
            },
            {
              "properties": {
                "closed_at": {
                  "type": "null"
                },
                "state": {
                  "enum": [
                    "open"
                  ],
                  "type": "string"
                }
              },
              "required": [
                "state",
                "closed_at"
              ],
              "tsAdditionalProperties": false,
              "type": "object"
            }
          ]
        },
        "organization": {
          "$ref": "#/definitions/organization"
        },
        "repository": {
          "$ref": "#/definitions/repository"
        },
        "sender": {
          "$ref": "#/definitions/user"
        }
      },
      "required": [
        "action",
        "milestone",
        "repository",
        "sender"
      ],
      "title": "milestone created event",
      "type": "object"
    },
    "milestone$deleted": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "additionalProperties": false,
      "properties": {
        "action": {
          "enum": [
            "deleted"
          ],
          "type": "string"
        },
        "installation": {
          "$ref": "#/definitions/installation-lite"
        },
        "milestone": {
          "$ref": "#/definitions/milestone"
        },
        "organization": {
          "$ref": "#/definitions/organization"
        },
        "repository": {
          "$ref": "#/definitions/repository"
        },
        "sender": {
          "$ref": "#/definitions/user"
        }
      },
      "required": [
        "action",
        "milestone",
        "repository",
        "sender"
      ],
      "title": "milestone deleted event",
      "type": "object"
    },
    "milestone$edited": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "additionalProperties": false,
      "properties": {
        "action": {
          "enum": [
            "edited"
          ],
          "type": "string"
        },
        "changes": {
          "additionalProperties": false,
          "description": "The changes to the milestone if the action was `edited`.",
          "properties": {
            "description": {
              "additionalProperties": false,
              "properties": {
                "from": {
                  "description": "The previous version of the description if the action was `edited`.",
                  "type": "string"
                }
              },
              "required": [
                "from"
              ],
              "type": "object"
            },
            "due_on": {
              "additionalProperties": false,
              "properties": {
                "from": {
                  "description": "The previous version of the due date if the action was `edited`.",
                  "type": "string"
                }
              },
              "required": [
                "from"
              ],
              "type": "object"
            },
            "title": {
              "additionalProperties": false,
              "properties": {
                "from": {
                  "description": "The previous version of the title if the action was `edited`.",
                  "type": "string"
                }
              },
              "required": [
                "from"
              ],
              "type": "object"
            }
          },
          "type": "object"
        },
        "installation": {
          "$ref": "#/definitions/installation-lite"
        },
        "milestone": {
          "$ref": "#/definitions/milestone"
        },
        "organization": {
          "$ref": "#/definitions/organization"
        },
        "repository": {
          "$ref": "#/definitions/repository"
        },
        "sender": {
          "$ref": "#/definitions/user"
        }
      },
      "required": [
        "action",
        "changes",
        "milestone",
        "repository",
        "sender"
      ],
      "title": "milestone edited event",
      "type": "object"
    },
    "milestone$opened": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "additionalProperties": false,
      "properties": {
        "action": {
          "enum": [
            "opened"
          ],
          "type": "string"
        },
        "installation": {
          "$ref": "#/definitions/installation-lite"
        },
        "milestone": {
          "allOf": [
            {
              "$ref": "#/definitions/milestone"
            },
            {
              "properties": {
                "closed_at": {
                  "type": "null"
                },
                "state": {
                  "enum": [
                    "open"
                  ],
                  "type": "string"
                }
              },
              "required": [
                "state",
                "closed_at"
              ],
              "tsAdditionalProperties": false,
              "type": "object"
            }
          ]
        },
        "organization": {
          "$ref": "#/definitions/organization"
        },
        "repository": {
          "$ref": "#/definitions/repository"
        },
        "sender": {
          "$ref": "#/definitions/user"
        }
      },
      "required": [
        "action",
        "milestone",
        "repository",
        "sender"
      ],
      "title": "milestone opened event",
      "type": "object"
    },
    "milestone_event": {
      "oneOf": [
        {
          "$ref": "#/definitions/milestone$closed"
        },
        {
          "$ref": "#/definitions/milestone$created"
        },
        {
          "$ref": "#/definitions/milestone$deleted"
        },
        {
          "$ref": "#/definitions/milestone$edited"
        },
        {
          "$ref": "#/definitions/milestone$opened"
        }
      ]
    },
    "org_block$blocked": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "additionalProperties": false,
      "properties": {
        "action": {
          "enum": [
            "blocked"
          ],
          "type": "string"
        },
        "blocked_user": {
          "$ref": "#/definitions/user",
          "description": "Information about the user that was blocked or unblocked."
        },
        "installation": {
          "$ref": "#/definitions/installation-lite"
        },
        "organization": {
          "$ref": "#/definitions/organization"
        },
        "sender": {
          "$ref": "#/definitions/user"
        }
      },
      "required": [
        "action",
        "blocked_user",
        "organization",
        "sender"
      ],
      "title": "org_block blocked event",
      "type": "object"
    },
    "org_block$unblocked": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "additionalProperties": false,
      "properties": {
        "action": {
          "enum": [
            "unblocked"
          ],
          "type": "string"
        },
        "blocked_user": {
          "$ref": "#/definitions/user",
          "description": "Information about the user that was blocked or unblocked."
        },
        "installation": {
          "$ref": "#/definitions/installation-lite"
        },
        "organization": {
          "$ref": "#/definitions/organization"
        },
        "sender": {
          "$ref": "#/definitions/user"
        }
      },
      "required": [
        "action",
        "blocked_user",
        "organization",
        "sender"
      ],
      "title": "org_block unblocked event",
      "type": "object"
    },
    "org_block_event": {
      "oneOf": [
        {
          "$ref": "#/definitions/org_block$blocked"
        },
        {
          "$ref": "#/definitions/org_block$unblocked"
        }
      ]
    },
    "organization": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "additionalProperties": false,
      "properties": {
        "avatar_url": {
          "format": "uri",
          "type": "string"
        },
        "description": {
          "type": [
            "string",
            "null"
          ]
        },
        "events_url": {
          "format": "uri",
          "type": "string"
        },
        "hooks_url": {
          "format": "uri",
          "type": "string"
        },
        "html_url": {
          "format": "uri",
          "type": "string"
        },
        "id": {
          "type": "integer"
        },
        "issues_url": {
          "format": "uri",
          "type": "string"
        },
        "login": {
          "type": "string"
        },
        "members_url": {
          "format": "uri-template",
          "type": "string"
        },
        "node_id": {
          "type": "string"
        },
        "public_members_url": {
          "format": "uri-template",
          "type": "string"
        },
        "repos_url": {
          "format": "uri",
          "type": "string"
        },
        "url": {
          "format": "uri",
          "type": "string"
        }
      },
      "required": [
        "login",
        "id",
        "node_id",
        "url",
        "repos_url",
        "events_url",
        "hooks_url",
        "issues_url",
        "members_url",
        "public_members_url",
        "avatar_url",
        "description"
      ],
      "title": "Organization",
      "type": "object"
    },
    "organization$deleted": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "additionalProperties": false,
      "properties": {
        "action": {
          "enum": [
            "deleted"
          ],
          "type": "string"
        },
        "installation": {
          "$ref": "#/definitions/installation-lite"
        },
        "membership": {
          "$ref": "#/definitions/membership"
        },
        "organization": {
          "$ref": "#/definitions/organization"
        },
        "sender": {
          "$ref": "#/definitions/user"
        }
      },
      "required": [
        "action",
        "organization",
        "sender"
      ],
      "title": "organization deleted event",
      "type": "object"
    },
    "organization$member_added": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "additionalProperties": false,
      "properties": {
        "action": {
          "enum": [
            "member_added"
          ],
          "type": "string"
        },
        "installation": {
          "$ref": "#/definitions/installation-lite"
        },
        "membership": {
          "$ref": "#/definitions/membership"
        },
        "organization": {
          "$ref": "#/definitions/organization"
        },
        "sender": {
          "$ref": "#/definitions/user"
        }
      },
      "required": [
        "action",
        "membership",
        "organization",
        "sender"
      ],
      "title": "organization member_added event",
      "type": "object"
    },
    "organization$member_invited": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "additionalProperties": false,
      "properties": {
        "action": {
          "enum": [
            "member_invited"
          ],
          "type": "string"
        },
        "installation": {
          "$ref": "#/definitions/installation-lite"
        },
        "invitation": {
          "additionalProperties": false,
          "description": "The invitation for the user or email if the action is `member_invited`.",
          "properties": {
            "created_at": {
              "format": "date-time",
              "type": "string"
            },
            "email": {
              "type": [
                "string",
                "null"
              ]
            },
            "failed_at": {
              "oneOf": [
                {
                  "format": "date-time",
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ]
            },
            "failed_reason": {
              "type": [
                "string",
                "null"
              ]
            },
            "id": {
              "type": "number"
            },
            "invitation_teams_url": {
              "format": "uri",
              "type": "string"
            },
            "inviter": {
              "$ref": "#/definitions/user"
            },
            "login": {
              "type": "string"
            },
            "node_id": {
              "type": "string"
            },
            "role": {
              "type": "string"
            },
            "team_count": {
              "type": "number"
            }
          },
          "required": [
            "id",
            "node_id",
            "login",
            "email",
            "role",
            "created_at",
            "failed_at",
            "failed_reason",
            "inviter",
            "team_count",
            "invitation_teams_url"
          ],
          "type": "object"
        },
        "organization": {
          "$ref": "#/definitions/organization"
        },
        "sender": {
          "$ref": "#/definitions/user"
        },
        "user": {
          "$ref": "#/definitions/user"
        }
      },
      "required": [
        "action",
        "invitation",
        "user",
        "organization",
        "sender"
      ],
      "title": "organization member_invited event",
      "type": "object"
    },
    "organization$member_removed": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "additionalProperties": false,
      "properties": {
        "action": {
          "enum": [
            "member_removed"
          ],
          "type": "string"
        },
        "installation": {
          "$ref": "#/definitions/installation-lite"
        },
        "membership": {
          "$ref": "#/definitions/membership"
        },
        "organization": {
          "$ref": "#/definitions/organization"
        },
        "sender": {
          "$ref": "#/definitions/user"
        }
      },
      "required": [
        "action",
        "membership",
        "organization",
        "sender"
      ],
      "title": "organization member_removed event",
      "type": "object"
    },
    "organization$renamed": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "additionalProperties": false,
      "properties": {
        "action": {
          "enum": [
            "renamed"
          ],
          "type": "string"
        },
        "installation": {
          "$ref": "#/definitions/installation-lite"
        },
        "membership": {
          "$ref": "#/definitions/membership"
        },
        "organization": {
          "$ref": "#/definitions/organization"
        },
        "sender": {
          "$ref": "#/definitions/user"
        }
      },
      "required": [
        "action",
        "membership",
        "organization",
        "sender"
      ],
      "title": "organization renamed event",
      "type": "object"
    },
    "organization_event": {
      "oneOf": [
        {
          "$ref": "#/definitions/organization$deleted"
        },
        {
          "$ref": "#/definitions/organization$member_added"
        },
        {
          "$ref": "#/definitions/organization$member_invited"
        },
        {
          "$ref": "#/definitions/organization$member_removed"
        },
        {
          "$ref": "#/definitions/organization$renamed"
        }
      ]
    },
    "package$published": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "additionalProperties": false,
      "properties": {
        "action": {
          "enum": [
            "published"
          ],
          "type": "string"
        },
        "organization": {
          "$ref": "#/definitions/organization"
        },
        "package": {
          "additionalProperties": false,
          "description": "Information about the package.",
          "properties": {
            "created_at": {
              "type": "string"
            },
            "description": {
              "type": [
                "string",
                "null"
              ]
            },
            "ecosystem": {
              "type": "string"
            },
            "html_url": {
              "format": "uri",
              "type": "string"
            },
            "id": {
              "type": "integer"
            },
            "name": {
              "type": "string"
            },
            "namespace": {
              "type": "string"
            },
            "owner": {
              "$ref": "#/definitions/user"
            },
            "package_type": {
              "type": "string"
            },
            "package_version": {
              "additionalProperties": false,
              "properties": {
                "author": {
                  "$ref": "#/definitions/user"
                },
                "body": {
                  "type": "string"
                },
                "body_html": {
                  "type": "string"
                },
                "created_at": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "docker_metadata": {
                  "items": {},
                  "type": "array"
                },
                "draft": {
                  "type": "boolean"
                },
                "html_url": {
                  "format": "uri",
                  "type": "string"
                },
                "id": {
                  "type": "integer"
                },
                "installation_command": {
                  "type": "string"
                },
                "manifest": {
                  "type": "string"
                },
                "metadata": {
                  "items": {},
                  "type": "array"
                },
                "name": {
                  "type": "string"
                },
                "package_files": {
                  "items": {
                    "additionalProperties": false,
                    "properties": {
                      "content_type": {
                        "type": "string"
                      },
                      "created_at": {
                        "type": "string"
                      },
                      "download_url": {
                        "format": "uri",
                        "type": "string"
                      },
                      "id": {
                        "type": "integer"
                      },
                      "md5": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "sha1": {
                        "type": "string"
                      },
                      "sha256": {
                        "type": "string"
                      },
                      "size": {
                        "type": "integer"
                      },
                      "state": {
                        "type": "string"
                      },
                      "updated_at": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "download_url",
                      "id",
                      "name",
                      "sha256",
                      "sha1",
                      "md5",
                      "content_type",
                      "state",
                      "size",
                      "created_at",
                      "updated_at"
                    ],
                    "type": "object"
                  },
                  "type": "array"
                },
                "prerelease": {
                  "type": "boolean"
                },
                "release": {
                  "additionalProperties": false,
                  "properties": {
                    "author": {
                      "$ref": "#/definitions/user"
                    },
                    "created_at": {
                      "type": "string"
                    },
                    "draft": {
                      "type": "boolean"
                    },
                    "html_url": {
                      "format": "uri",
                      "type": "string"
                    },
                    "id": {
                      "type": "integer"
                    },
                    "name": {
                      "type": "string"
                    },
                    "prerelease": {
                      "type": "boolean"
                    },
                    "published_at": {
                      "type": "string"
                    },
                    "tag_name": {
                      "type": "string"
                    },
                    "target_commitish": {
                      "type": "string"
                    },
                    "url": {
                      "format": "uri",
                      "type": "string"
                    }
                  },
                  "required": [
                    "url",
                    "html_url",
                    "id",
                    "tag_name",
                    "target_commitish",
                    "name",
                    "draft",
                    "author",
                    "prerelease",
                    "created_at",
                    "published_at"
                  ],
                  "type": "object"
                },
                "source_url": {
                  "type": "string"
                },
                "summary": {
                  "type": "string"
                },
                "tag_name": {
                  "type": "string"
                },
                "target_commitish": {
                  "type": "string"
                },
                "target_oid": {
                  "type": "string"
                },
                "updated_at": {
                  "type": "string"
                },
                "version": {
                  "type": "string"
                }
              },
              "required": [
                "id",
                "version",
                "summary",
                "name",
                "description",
                "body",
                "body_html",
                "release",
                "manifest",
                "html_url",
                "tag_name",
                "target_commitish",
                "target_oid",
                "draft",
                "prerelease",
                "created_at",
                "updated_at",
                "metadata",
                "docker_metadata",
                "package_files",
                "author",
                "source_url",
                "installation_command"
              ],
              "type": "object"
            },
            "registry": {
              "additionalProperties": false,
              "properties": {
                "about_url": {
                  "format": "uri",
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "type": {
                  "type": "string"
                },
                "url": {
                  "format": "uri",
                  "type": "string"
                },
                "vendor": {
                  "type": "string"
                }
              },
              "required": [
                "about_url",
                "name",
                "type",
                "url",
                "vendor"
              ],
              "type": "object"
            },
            "updated_at": {
              "type": "string"
            }
          },
          "required": [
            "id",
            "name",
            "namespace",
            "description",
            "ecosystem",
            "package_type",
            "html_url",
            "created_at",
            "updated_at",
            "owner",
            "package_version",
            "registry"
          ],
          "type": "object"
        },
        "repository": {
          "$ref": "#/definitions/repository"
        },
        "sender": {
          "$ref": "#/definitions/user"
        }
      },
      "required": [
        "action",
        "package",
        "repository",
        "sender"
      ],
      "title": "package published event",
      "type": "object"
    },
    "package$updated": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "additionalProperties": false,
      "properties": {
        "action": {
          "enum": [
            "updated"
          ],
          "type": "string"
        },
        "organization": {
          "$ref": "#/definitions/organization"
        },
        "package": {
          "additionalProperties": false,
          "description": "Information about the package.",
          "properties": {
            "created_at": {
              "type": "string"
            },
            "description": {
              "type": [
                "string",
                "null"
              ]
            },
            "ecosystem": {
              "type": "string"
            },
            "html_url": {
              "format": "uri",
              "type": "string"
            },
            "id": {
              "type": "integer"
            },
            "name": {
              "type": "string"
            },
            "namespace": {
              "type": "string"
            },
            "owner": {
              "$ref": "#/definitions/user"
            },
            "package_type": {
              "type": "string"
            },
            "package_version": {
              "additionalProperties": false,
              "properties": {
                "author": {
                  "$ref": "#/definitions/user"
                },
                "body": {
                  "type": "string"
                },
                "body_html": {
                  "type": "string"
                },
                "created_at": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "docker_metadata": {
                  "items": {},
                  "type": "array"
                },
                "draft": {
                  "type": "boolean"
                },
                "html_url": {
                  "format": "uri",
                  "type": "string"
                },
                "id": {
                  "type": "integer"
                },
                "installation_command": {
                  "type": "string"
                },
                "manifest": {
                  "type": "string"
                },
                "metadata": {
                  "items": {},
                  "type": "array"
                },
                "name": {
                  "type": "string"
                },
                "package_files": {
                  "items": {
                    "additionalProperties": false,
                    "properties": {
                      "content_type": {
                        "type": "string"
                      },
                      "created_at": {
                        "type": "string"
                      },
                      "download_url": {
                        "format": "uri",
                        "type": "string"
                      },
                      "id": {
                        "type": "integer"
                      },
                      "md5": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "sha1": {
                        "type": "string"
                      },
                      "sha256": {
                        "type": "string"
                      },
                      "size": {
                        "type": "integer"
                      },
                      "state": {
                        "type": "string"
                      },
                      "updated_at": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "download_url",
                      "id",
                      "name",
                      "sha256",
                      "sha1",
                      "md5",
                      "content_type",
                      "state",
                      "size",
                      "created_at",
                      "updated_at"
                    ],
                    "type": "object"
                  },
                  "type": "array"
                },
                "prerelease": {
                  "type": "boolean"
                },
                "release": {
                  "additionalProperties": false,
                  "properties": {
                    "author": {
                      "$ref": "#/definitions/user"
                    },
                    "created_at": {
                      "type": "string"
                    },
                    "draft": {
                      "type": "boolean"
                    },
                    "html_url": {
                      "format": "uri",
                      "type": "string"
                    },
                    "id": {
                      "type": "integer"
                    },
                    "name": {
                      "type": "string"
                    },
                    "prerelease": {
                      "type": "boolean"
                    },
                    "published_at": {
                      "type": "string"
                    },
                    "tag_name": {
                      "type": "string"
                    },
                    "target_commitish": {
                      "type": "string"
                    },
                    "url": {
                      "format": "uri",
                      "type": "string"
                    }
                  },
                  "required": [
                    "url",
                    "html_url",
                    "id",
                    "tag_name",
                    "target_commitish",
                    "name",
                    "draft",
                    "author",
                    "prerelease",
                    "created_at",
                    "published_at"
                  ],
                  "type": "object"
                },
                "source_url": {
                  "format": "uri",
                  "type": "string"
                },
                "summary": {
                  "type": "string"
                },
                "tag_name": {
                  "type": "string"
                },
                "target_commitish": {
                  "type": "string"
                },
                "target_oid": {
                  "type": "string"
                },
                "updated_at": {
                  "type": "string"
                },
                "version": {
                  "type": "string"
                }
              },
              "required": [
                "id",
                "version",
                "summary",
                "name",
                "description",
                "body",
                "body_html",
                "release",
                "manifest",
                "html_url",
                "tag_name",
                "target_commitish",
                "target_oid",
                "draft",
                "prerelease",
                "created_at",
                "updated_at",
                "metadata",
                "docker_metadata",
                "package_files",
                "author",
                "source_url",
                "installation_command"
              ],
              "type": "object"
            },
            "registry": {
              "additionalProperties": false,
              "properties": {
                "about_url": {
                  "format": "uri",
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "type": {
                  "type": "string"
                },
                "url": {
                  "format": "uri",
                  "type": "string"
                },
                "vendor": {
                  "type": "string"
                }
              },
              "required": [
                "about_url",
                "name",
                "type",
                "url",
                "vendor"
              ],
              "type": "object"
            },
            "updated_at": {
              "type": "string"
            }
          },
          "required": [
            "id",
            "name",
            "namespace",
            "description",
            "ecosystem",
            "package_type",
            "html_url",
            "created_at",
            "updated_at",
            "owner",
            "package_version",
            "registry"
          ],
          "type": "object"
        },
        "repository": {
          "$ref": "#/definitions/repository"
        },
        "sender": {
          "$ref": "#/definitions/user"
        }
      },
      "required": [
        "action",
        "package",
        "repository",
        "sender"
      ],
      "title": "package updated event",
      "type": "object"
    },
    "package_event": {
      "oneOf": [
        {
          "$ref": "#/definitions/package$published"
        },
        {
          "$ref": "#/definitions/package$updated"
        }
      ]
    },
    "page_build$event": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "additionalProperties": false,
      "description": "Page Build",
      "properties": {
        "build": {
          "additionalProperties": false,
          "description": "The [List GitHub Pages builds](https://docs.github.com/en/rest/reference/repos#list-github-pages-builds) itself.",
          "properties": {
            "commit": {
              "type": "string"
            },
            "created_at": {
              "type": "string"
            },
            "duration": {
              "type": "integer"
            },
            "error": {
              "additionalProperties": false,
              "properties": {
                "message": {
                  "type": [
                    "string",
                    "null"
                  ]
                }
              },
              "required": [
                "message"
              ],
              "type": "object"
            },
            "pusher": {
              "$ref": "#/definitions/user"
            },
            "status": {
              "type": "string"
            },
            "updated_at": {
              "type": "string"
            },
            "url": {
              "format": "uri",
              "type": "string"
            }
          },
          "required": [
            "url",
            "status",
            "error",
            "pusher",
            "commit",
            "duration",
            "created_at",
            "updated_at"
          ],
          "type": "object"
        },
        "id": {
          "type": "integer"
        },
        "installation": {
          "$ref": "#/definitions/installation-lite"
        },
        "organization": {
          "$ref": "#/definitions/organization"
        },
        "repository": {
          "$ref": "#/definitions/repository"
        },
        "sender": {
          "$ref": "#/definitions/user"
        }
      },
      "required": [
        "id",
        "build",
        "repository",
        "sender"
      ],
      "title": "page_build event",
      "type": "object"
    },
    "ping$event": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "additionalProperties": false,
      "properties": {
        "hook": {
          "additionalProperties": false,
          "description": "The [webhook configuration](https://docs.github.com/en/rest/reference/repos#get-a-repository-webhook).",
          "properties": {
            "active": {
              "type": "boolean"
            },
            "app_id": {
              "description": "When you register a new GitHub App, GitHub sends a ping event to the **webhook URL** you specified during registration. The event contains the `app_id`, which is required for [authenticating](https://docs.github.com/en/apps/building-integrations/setting-up-and-registering-github-apps/about-authentication-options-for-github-apps) an app.",
              "type": "integer"
            },
            "config": {
              "additionalProperties": false,
              "properties": {
                "content_type": {
                  "enum": [
                    "json",
                    "form"
                  ],
                  "type": "string"
                },
                "insecure_ssl": {
                  "type": "string"
                },
                "secret": {
                  "type": "string"
                },
                "url": {
                  "format": "uri",
                  "type": "string"
                }
              },
              "required": [
                "content_type",
                "url",
                "insecure_ssl"
              ],
              "type": "object"
            },
            "created_at": {
              "type": "string"
            },
            "deliveries_url": {
              "format": "uri",
              "type": "string"
            },
            "events": {
              "$ref": "#/definitions/webhook-events"
            },
            "id": {
              "type": "integer"
            },
            "last_response": {
              "additionalProperties": false,
              "properties": {
                "code": {
                  "type": "null"
                },
                "message": {
                  "type": "null"
                },
                "status": {
                  "type": "string"
                }
              },
              "required": [
                "code",
                "status",
                "message"
              ],
              "type": "object"
            },
            "name": {
              "type": "string"
            },
            "ping_url": {
              "format": "uri",
              "type": "string"
            },
            "test_url": {
              "format": "uri",
              "type": "string"
            },
            "type": {
              "type": "string"
            },
            "updated_at": {
              "type": "string"
            },
            "url": {
              "format": "uri",
              "type": "string"
            }
          },
          "required": [
            "type",
            "id",
            "name",
            "active",
            "events",
            "config",
            "updated_at",
            "created_at",
            "url",
            "ping_url",
            "deliveries_url"
          ],
          "type": "object"
        },
        "hook_id": {
          "description": "The ID of the webhook that triggered the ping.",
          "type": "integer"
        },
        "organization": {
          "$ref": "#/definitions/organization"
        },
        "repository": {
          "$ref": "#/definitions/repository"
        },
        "sender": {
          "$ref": "#/definitions/user"
        },
        "zen": {
          "type": "string"
        }
      },
      "required": [
        "zen",
        "hook_id",
        "hook"
      ],
      "title": "ping event",
      "type": "object"
    },
    "project": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "additionalProperties": false,
      "properties": {
        "body": {
          "description": "Body of the project",
          "type": [
            "string",
            "null"
          ]
        },
        "columns_url": {
          "format": "uri",
          "type": "string"
        },
        "created_at": {
          "format": "date-time",
          "type": "string"
        },
        "creator": {
          "$ref": "#/definitions/user"
        },
        "html_url": {
          "format": "uri",
          "type": "string"
        },
        "id": {
          "type": "integer"
        },
        "name": {
          "description": "Name of the project",
          "type": "string"
        },
        "node_id": {
          "type": "string"
        },
        "number": {
          "type": "integer"
        },
        "owner_url": {
          "format": "uri",
          "type": "string"
        },
        "state": {
          "description": "State of the project; either 'open' or 'closed'",
          "enum": [
            "open",
            "closed"
          ],
          "type": "string"
        },
        "updated_at": {
          "format": "date-time",
          "type": "string"
        },
        "url": {
          "format": "uri",
          "type": "string"
        }
      },
      "required": [
        "owner_url",
        "url",
        "html_url",
        "columns_url",
        "id",
        "node_id",
        "name",
        "body",
        "number",
        "state",
        "creator",
        "created_at",
        "updated_at"
      ],
      "title": "Project",
      "type": "object"
    },
    "project$closed": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "additionalProperties": false,
      "properties": {
        "action": {
          "enum": [
            "closed"
          ],
          "type": "string"
        },
        "installation": {
          "$ref": "#/definitions/installation-lite"
        },
        "organization": {
          "$ref": "#/definitions/organization"
        },
        "project": {
          "$ref": "#/definitions/project"
        },
        "repository": {
          "$ref": "#/definitions/repository"
        },
        "sender": {
          "$ref": "#/definitions/user"
        }
      },
      "required": [
        "action",
        "project",
        "repository",
        "sender"
      ],
      "title": "project closed event",
      "type": "object"
    },
    "project$created": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "additionalProperties": false,
      "properties": {
        "action": {
          "enum": [
            "created"
          ],
          "type": "string"
        },
        "installation": {
          "$ref": "#/definitions/installation-lite"
        },
        "organization": {
          "$ref": "#/definitions/organization"
        },
        "project": {
          "$ref": "#/definitions/project"
        },
        "repository": {
          "$ref": "#/definitions/repository"
        },
        "sender": {
          "$ref": "#/definitions/user"
        }
      },
      "required": [
        "action",
        "project",
        "repository",
        "sender"
      ],
      "title": "project created event",
      "type": "object"
    },
    "project$deleted": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "additionalProperties": false,
      "properties": {
        "action": {
          "enum": [
            "deleted"
          ],
          "type": "string"
        },
        "installation": {
          "$ref": "#/definitions/installation-lite"
        },
        "organization": {
          "$ref": "#/definitions/organization"
        },
        "project": {
          "$ref": "#/definitions/project"
        },
        "repository": {
          "$ref": "#/definitions/repository"
        },
        "sender": {
          "$ref": "#/definitions/user"
        }
      },
      "required": [
        "action",
        "project",
        "repository",
        "sender"
      ],
      "title": "project deleted event",
      "type": "object"
    },
    "project$edited": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "additionalProperties": false,
      "properties": {
        "action": {
          "enum": [
            "edited"
          ],
          "type": "string"
        },
        "changes": {
          "additionalProperties": false,
          "description": "The changes to the project if the action was `edited`.",
          "properties": {
            "body": {
              "additionalProperties": false,
              "properties": {
                "from": {
                  "description": "The previous version of the body if the action was `edited`.",
                  "type": "string"
                }
              },
              "required": [
                "from"
              ],
              "type": "object"
            },
            "name": {
              "additionalProperties": false,
              "properties": {
                "from": {
                  "description": "The changes to the project if the action was `edited`.",
                  "type": "string"
                }
              },
              "required": [
                "from"
              ],
              "type": "object"
            }
          },
          "type": "object"
        },
        "installation": {
          "$ref": "#/definitions/installation-lite"
        },
        "organization": {
          "$ref": "#/definitions/organization"
        },
        "project": {
          "$ref": "#/definitions/project"
        },
        "repository": {
          "$ref": "#/definitions/repository"
        },
        "sender": {
          "$ref": "#/definitions/user"
        }
      },
      "required": [
        "action",
        "project",
        "repository",
        "sender"
      ],
      "title": "project edited event",
      "type": "object"
    },
    "project$reopened": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "additionalProperties": false,
      "properties": {
        "action": {
          "enum": [
            "reopened"
          ],
          "type": "string"
        },
        "installation": {
          "$ref": "#/definitions/installation-lite"
        },
        "organization": {
          "$ref": "#/definitions/organization"
        },
        "project": {
          "$ref": "#/definitions/project"
        },
        "repository": {
          "$ref": "#/definitions/repository"
        },
        "sender": {
          "$ref": "#/definitions/user"
        }
      },
      "required": [
        "action",
        "project",
        "repository",
        "sender"
      ],
      "title": "project reopened event",
      "type": "object"
    },
    "project-card": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "additionalProperties": false,
      "properties": {
        "after_id": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ]
        },
        "archived": {
          "description": "Whether or not the card is archived",
          "type": "boolean"
        },
        "column_id": {
          "type": "integer"
        },
        "column_url": {
          "format": "uri",
          "type": "string"
        },
        "content_url": {
          "format": "uri",
          "type": "string"
        },
        "created_at": {
          "format": "date-time",
          "type": "string"
        },
        "creator": {
          "$ref": "#/definitions/user"
        },
        "id": {
          "description": "The project card's ID",
          "type": "integer"
        },
        "node_id": {
          "type": "string"
        },
        "note": {
          "type": [
            "string",
            "null"
          ]
        },
        "project_url": {
          "format": "uri",
          "type": "string"
        },
        "updated_at": {
          "format": "date-time",
          "type": "string"
        },
        "url": {
          "format": "uri",
          "type": "string"
        }
      },
      "required": [
        "url",
        "project_url",
        "column_url",
        "column_id",
        "id",
        "node_id",
        "note",
        "archived",
        "creator",
        "created_at",
        "updated_at"
      ],
      "title": "Project Card",
      "type": "object"
    },
    "project-column": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "additionalProperties": false,
      "properties": {
        "cards_url": {
          "format": "uri",
          "type": "string"
        },
        "created_at": {
          "format": "date-time",
          "type": "string"
        },
        "id": {
          "description": "The unique identifier of the project column",
          "type": "integer"
        },
        "name": {
          "description": "Name of the project column",
          "type": "string"
        },
        "node_id": {
          "type": "string"
        },
        "project_url": {
          "format": "uri",
          "type": "string"
        },
        "updated_at": {
          "format": "date-time",
          "type": "string"
        },
        "url": {
          "format": "uri",
          "type": "string"
        }
      },
      "required": [
        "url",
        "project_url",
        "cards_url",
        "id",
        "node_id",
        "name",
        "created_at",
        "updated_at"
      ],
      "title": "Project Column",
      "type": "object"
    },
    "project_card$converted": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "additionalProperties": false,
      "properties": {
        "action": {
          "enum": [
            "converted"
          ],
          "type": "string"
        },
        "changes": {
          "additionalProperties": false,
          "properties": {
            "note": {
              "additionalProperties": false,
              "properties": {
                "from": {
                  "type": "string"
                }
              },
              "required": [
                "from"
              ],
              "type": "object"
            }
          },
          "required": [
            "note"
          ],
          "type": "object"
        },
        "installation": {
          "$ref": "#/definitions/installation-lite"
        },
        "organization": {
          "$ref": "#/definitions/organization"
        },
        "project_card": {
          "$ref": "#/definitions/project-card"
        },
        "repository": {
          "$ref": "#/definitions/repository"
        },
        "sender": {
          "$ref": "#/definitions/user"
        }
      },
      "required": [
        "action",
        "changes",
        "project_card",
        "sender"
      ],
      "title": "project_card converted event",
      "type": "object"
    },
    "project_card$created": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "additionalProperties": false,
      "properties": {
        "action": {
          "enum": [
            "created"
          ],
          "type": "string"
        },
        "installation": {
          "$ref": "#/definitions/installation-lite"
        },
        "organization": {
          "$ref": "#/definitions/organization"
        },
        "project_card": {
          "$ref": "#/definitions/project-card"
        },
        "repository": {
          "$ref": "#/definitions/repository"
        },
        "sender": {
          "$ref": "#/definitions/user"
        }
      },
      "required": [
        "action",
        "project_card",
        "sender"
      ],
      "title": "project_card created event",
      "type": "object"
    },
    "project_card$deleted": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "additionalProperties": false,
      "properties": {
        "action": {
          "enum": [
            "deleted"
          ],
          "type": "string"
        },
        "installation": {
          "$ref": "#/definitions/installation-lite"
        },
        "organization": {
          "$ref": "#/definitions/organization"
        },
        "project_card": {
          "$ref": "#/definitions/project-card"
        },
        "repository": {
          "$ref": "#/definitions/repository"
        },
        "sender": {
          "$ref": "#/definitions/user"
        }
      },
      "required": [
        "action",
        "project_card",
        "sender"
      ],
      "title": "project_card deleted event",
      "type": "object"
    },
    "project_card$edited": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "additionalProperties": false,
      "properties": {
        "action": {
          "enum": [
            "edited"
          ],
          "type": "string"
        },
        "changes": {
          "additionalProperties": false,
          "properties": {
            "note": {
              "additionalProperties": false,
              "properties": {
                "from": {
                  "type": "string"
                }
              },
              "required": [
                "from"
              ],
              "type": "object"
            }
          },
          "required": [
            "note"
          ],
          "type": "object"
        },
        "installation": {
          "$ref": "#/definitions/installation-lite"
        },
        "organization": {
          "$ref": "#/definitions/organization"
        },
        "project_card": {
          "$ref": "#/definitions/project-card"
        },
        "repository": {
          "$ref": "#/definitions/repository"
        },
        "sender": {
          "$ref": "#/definitions/user"
        }
      },
      "required": [
        "action",
        "changes",
        "project_card",
        "sender"
      ],
      "title": "project_card edited event",
      "type": "object"
    },
    "project_card$moved": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "additionalProperties": false,
      "properties": {
        "action": {
          "enum": [
            "moved"
          ],
          "type": "string"
        },
        "changes": {
          "additionalProperties": false,
          "properties": {
            "column_id": {
              "additionalProperties": false,
              "properties": {
                "from": {
                  "type": "integer"
                }
              },
              "required": [
                "from"
              ],
              "type": "object"
            }
          },
          "required": [
            "column_id"
          ],
          "type": "object"
        },
        "installation": {
          "$ref": "#/definitions/installation-lite"
        },
        "organization": {
          "$ref": "#/definitions/organization"
        },
        "project_card": {
          "allOf": [
            {
              "$ref": "#/definitions/project-card"
            },
            {
              "properties": {
                "after_id": {
                  "type": [
                    "number",
                    "null"
                  ]
                }
              },
              "required": [
                "after_id"
              ],
              "tsAdditionalProperties": false,
              "type": "object"
            }
          ]
        },
        "repository": {
          "$ref": "#/definitions/repository"
        },
        "sender": {
          "$ref": "#/definitions/user"
        }
      },
      "required": [
        "action",
        "project_card",
        "sender"
      ],
      "title": "project_card moved event",
      "type": "object"
    },
    "project_card_event": {
      "oneOf": [
        {
          "$ref": "#/definitions/project_card$converted"
        },
        {
          "$ref": "#/definitions/project_card$created"
        },
        {
          "$ref": "#/definitions/project_card$deleted"
        },
        {
          "$ref": "#/definitions/project_card$edited"
        },
        {
          "$ref": "#/definitions/project_card$moved"
        }
      ]
    },
    "project_column$created": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "additionalProperties": false,
      "properties": {
        "action": {
          "enum": [
            "created"
          ],
          "type": "string"
        },
        "installation": {
          "$ref": "#/definitions/installation-lite"
        },
        "organization": {
          "$ref": "#/definitions/organization"
        },
        "project_column": {
          "$ref": "#/definitions/project-column"
        },
        "repository": {
          "$ref": "#/definitions/repository"
        },
        "sender": {
          "$ref": "#/definitions/user"
        }
      },
      "required": [
        "action",
        "project_column",
        "sender"
      ],
      "title": "project_column created event",
      "type": "object"
    },
    "project_column$deleted": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "additionalProperties": false,
      "properties": {
        "action": {
          "enum": [
            "deleted"
          ],
          "type": "string"
        },
        "installation": {
          "$ref": "#/definitions/installation-lite"
        },
        "organization": {
          "$ref": "#/definitions/organization"
        },
        "project_column": {
          "$ref": "#/definitions/project-column"
        },
        "repository": {
          "$ref": "#/definitions/repository"
        },
        "sender": {
          "$ref": "#/definitions/user"
        }
      },
      "required": [
        "action",
        "project_column",
        "sender"
      ],
      "title": "project_column deleted event",
      "type": "object"
    },
    "project_column$edited": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "additionalProperties": false,
      "properties": {
        "action": {
          "enum": [
            "edited"
          ],
          "type": "string"
        },
        "changes": {
          "additionalProperties": false,
          "properties": {
            "name": {
              "additionalProperties": false,
              "properties": {
                "from": {
                  "type": "string"
                }
              },
              "required": [
                "from"
              ],
              "type": "object"
            }
          },
          "type": "object"
        },
        "installation": {
          "$ref": "#/definitions/installation-lite"
        },
        "organization": {
          "$ref": "#/definitions/organization"
        },
        "project_column": {
          "$ref": "#/definitions/project-column"
        },
        "repository": {
          "$ref": "#/definitions/repository"
        },
        "sender": {
          "$ref": "#/definitions/user"
        }
      },
      "required": [
        "action",
        "changes",
        "project_column",
        "sender"
      ],
      "title": "project_column edited event",
      "type": "object"
    },
    "project_column$moved": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "additionalProperties": false,
      "properties": {
        "action": {
          "enum": [
            "moved"
          ],
          "type": "string"
        },
        "installation": {
          "$ref": "#/definitions/installation-lite"
        },
        "organization": {
          "$ref": "#/definitions/organization"
        },
        "project_column": {
          "$ref": "#/definitions/project-column"
        },
        "repository": {
          "$ref": "#/definitions/repository"
        },
        "sender": {
          "$ref": "#/definitions/user"
        }
      },
      "required": [
        "action",
        "project_column",
        "sender"
      ],
      "title": "project_column moved event",
      "type": "object"
    },
    "project_column_event": {
      "oneOf": [
        {
          "$ref": "#/definitions/project_column$created"
        },
        {
          "$ref": "#/definitions/project_column$deleted"
        },
        {
          "$ref": "#/definitions/project_column$edited"
        },
        {
          "$ref": "#/definitions/project_column$moved"
        }
      ]
    },
    "project_event": {
      "oneOf": [
        {
          "$ref": "#/definitions/project$closed"
        },
        {
          "$ref": "#/definitions/project$created"
        },
        {
          "$ref": "#/definitions/project$deleted"
        },
        {
          "$ref": "#/definitions/project$edited"
        },
        {
          "$ref": "#/definitions/project$reopened"
        }
      ]
    },
    "projects_v2_item": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "additionalProperties": false,
      "description": "The project item itself. To find more information about the project item, you can use `node_id` (the node ID of the project item) and `project_node_id` (the node ID of the project) to query information in the GraphQL API. For more information, see \"[Using the API to manage projects (beta)](https://docs.github.com/en/issues/trying-out-the-new-projects-experience/using-the-api-to-manage-projects).\"",
      "properties": {
        "archived_at": {
          "format": "date-time",
          "type": [
            "string",
            "null"
          ]
        },
        "content_node_id": {
          "type": "string"
        },
        "content_type": {
          "enum": [
            "DraftIssue",
            "Issue",
            "PullRequest"
          ],
          "type": "string"
        },
        "created_at": {
          "format": "date-time",
          "type": "string"
        },
        "creator": {
          "$ref": "#/definitions/user"
        },
        "id": {
          "type": "number"
        },
        "node_id": {
          "type": "string"
        },
        "project_node_id": {
          "type": "string"
        },
        "updated_at": {
          "format": "date-time",
          "type": "string"
        }
      },
      "required": [
        "id",
        "node_id",
        "project_node_id",
        "content_node_id",
        "content_type",
        "creator",
        "created_at",
        "updated_at",
        "archived_at"
      ],
      "title": "Projects v2 Item",
      "type": "object"
    },
    "projects_v2_item$archived": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "additionalProperties": false,
      "properties": {
        "action": {
          "enum": [
            "archived"
          ],
          "type": "string"
        },
        "changes": {
          "additionalProperties": false,
          "properties": {
            "archived_at": {
              "additionalProperties": false,
              "properties": {
                "from": {
                  "type": "null"
                },
                "to": {
                  "format": "date-time",
                  "type": "string"
                }
              },
              "required": [
                "from",
                "to"
              ],
              "type": "object"
            }
          },
          "required": [
            "archived_at"
          ],
          "type": "object"
        },
        "installation": {
          "$ref": "#/definitions/installation-lite"
        },
        "organization": {
          "$ref": "#/definitions/organization"
        },
        "projects_v2_item": {
          "allOf": [
            {
              "$ref": "#/definitions/projects_v2_item"
            },
            {
              "properties": {
                "archived_at": {
                  "format": "date-time",
                  "type": "string"
                }
              },
              "required": [
                "archived_at"
              ],
              "tsAdditionalProperties": false,
              "type": "object"
            }
          ]
        },
        "sender": {
          "$ref": "#/definitions/user"
        }
      },
      "required": [
        "changes",
        "action",
        "projects_v2_item",
        "sender"
      ],
      "title": "projects_v2_item archived event",
      "type": "object"
    },
    "projects_v2_item$converted": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "additionalProperties": false,
      "properties": {
        "action": {
          "enum": [
            "converted"
          ],
          "type": "string"
        },
        "changes": {
          "additionalProperties": false,
          "properties": {
            "content_type": {
              "additionalProperties": false,
              "properties": {
                "from": {
                  "enum": [
                    "DraftIssue"
                  ],
                  "type": "string"
                },
                "to": {
                  "enum": [
                    "Issue"
                  ],
                  "type": "string"
                }
              },
              "required": [
                "from",
                "to"
              ],
              "type": "object"
            }
          },
          "required": [
            "content_type"
          ],
          "type": "object"
        },
        "installation": {
          "$ref": "#/definitions/installation-lite"
        },
        "organization": {
          "$ref": "#/definitions/organization"
        },
        "projects_v2_item": {
          "allOf": [
            {
              "$ref": "#/definitions/projects_v2_item"
            },
            {
              "properties": {
                "content_type": {
                  "enum": [
                    "Issue"
                  ],
                  "type": "string"
                }
              },
              "required": [
                "content_type"
              ],
              "tsAdditionalProperties": false,
              "type": "object"
            }
          ]
        },
        "sender": {
          "$ref": "#/definitions/user"
        }
      },
      "required": [
        "changes",
        "action",
        "projects_v2_item",
        "sender"
      ],
      "title": "projects_v2_item converted event",
      "type": "object"
    },
    "projects_v2_item$created": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "additionalProperties": false,
      "properties": {
        "action": {
          "enum": [
            "created"
          ],
          "type": "string"
        },
        "installation": {
          "$ref": "#/definitions/installation-lite"
        },
        "organization": {
          "$ref": "#/definitions/organization"
        },
        "projects_v2_item": {
          "allOf": [
            {
              "$ref": "#/definitions/projects_v2_item"
            },
            {
              "properties": {
                "archived_at": {
                  "type": "null"
                }
              },
              "required": [
                "archived_at"
              ],
              "tsAdditionalProperties": false,
              "type": "object"
            }
          ]
        },
        "sender": {
          "$ref": "#/definitions/user"
        }
      },
      "required": [
        "action",
        "projects_v2_item",
        "sender"
      ],
      "title": "projects_v2_item created event",
      "type": "object"
    },
    "projects_v2_item$deleted": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "additionalProperties": false,
      "properties": {
        "action": {
          "enum": [
            "deleted"
          ],
          "type": "string"
        },
        "installation": {
          "$ref": "#/definitions/installation-lite"
        },
        "organization": {
          "$ref": "#/definitions/organization"
        },
        "projects_v2_item": {
          "$ref": "#/definitions/projects_v2_item"
        },
        "sender": {
          "$ref": "#/definitions/user"
        }
      },
      "required": [
        "action",
        "projects_v2_item",
        "sender"
      ],
      "title": "projects_v2_item deleted event",
      "type": "object"
    },
    "projects_v2_item$edited": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "additionalProperties": false,
      "properties": {
        "action": {
          "enum": [
            "edited"
          ],
          "type": "string"
        },
        "changes": {
          "additionalProperties": false,
          "properties": {
            "field_value": {
              "additionalProperties": false,
              "properties": {
                "field_node_id": {
                  "type": "string"
                },
                "field_type": {
                  "enum": [
                    "single_select",
                    "date",
                    "number",
                    "text",
                    "iteration"
                  ],
                  "type": "string"
                }
              },
              "required": [
                "field_type",
                "field_node_id"
              ],
              "type": "object"
            }
          },
          "required": [
            "field_value"
          ],
          "type": "object"
        },
        "installation": {
          "$ref": "#/definitions/installation-lite"
        },
        "organization": {
          "$ref": "#/definitions/organization"
        },
        "projects_v2_item": {
          "$ref": "#/definitions/projects_v2_item"
        },
        "sender": {
          "$ref": "#/definitions/user"
        }
      },
      "required": [
        "changes",
        "action",
        "projects_v2_item",
        "sender"
      ],
      "title": "projects_v2_item edited event",
      "type": "object"
    },
    "projects_v2_item$reordered": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "additionalProperties": false,
      "properties": {
        "action": {
          "enum": [
            "reordered"
          ],
          "type": "string"
        },
        "changes": {
          "additionalProperties": false,
          "properties": {
            "previous_projects_v2_item_node_id": {
              "additionalProperties": false,
              "properties": {
                "from": {
                  "type": "string"
                },
                "to": {
                  "type": [
                    "string",
                    "null"
                  ]
                }
              },
              "required": [
                "from",
                "to"
              ],
              "type": "object"
            }
          },
          "required": [
            "previous_projects_v2_item_node_id"
          ],
          "type": "object"
        },
        "installation": {
          "$ref": "#/definitions/installation-lite"
        },
        "organization": {
          "$ref": "#/definitions/organization"
        },
        "projects_v2_item": {
          "$ref": "#/definitions/projects_v2_item"
        },
        "sender": {
          "$ref": "#/definitions/user"
        }
      },
      "required": [
        "changes",
        "action",
        "projects_v2_item",
        "sender"
      ],
      "title": "projects_v2_item reordered event",
      "type": "object"
    },
    "projects_v2_item$restored": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "additionalProperties": false,
      "properties": {
        "action": {
          "enum": [
            "restored"
          ],
          "type": "string"
        },
        "changes": {
          "additionalProperties": false,
          "properties": {
            "archived_at": {
              "additionalProperties": false,
              "properties": {
                "from": {
                  "format": "date-time",
                  "type": "string"
                },
                "to": {
                  "type": "null"
                }
              },
              "required": [
                "from",
                "to"
              ],
              "type": "object"
            }
          },
          "required": [
            "archived_at"
          ],
          "type": "object"
        },
        "installation": {
          "$ref": "#/definitions/installation-lite"
        },
        "organization": {
          "$ref": "#/definitions/organization"
        },
        "projects_v2_item": {
          "allOf": [
            {
              "$ref": "#/definitions/projects_v2_item"
            },
            {
              "properties": {
                "archived_at": {
                  "type": "null"
                }
              },
              "required": [
                "archived_at"
              ],
              "tsAdditionalProperties": false,
              "type": "object"
            }
          ]
        },
        "sender": {
          "$ref": "#/definitions/user"
        }
      },
      "required": [
        "changes",
        "action",
        "projects_v2_item",
        "sender"
      ],
      "title": "projects_v2_item restored event",
      "type": "object"
    },
    "projects_v2_item_event": {
      "oneOf": [
        {
          "$ref": "#/definitions/projects_v2_item$archived"
        },
        {
          "$ref": "#/definitions/projects_v2_item$converted"
        },
        {
          "$ref": "#/definitions/projects_v2_item$created"
        },
        {
          "$ref": "#/definitions/projects_v2_item$deleted"
        },
        {
          "$ref": "#/definitions/projects_v2_item$edited"
        },
        {
          "$ref": "#/definitions/projects_v2_item$reordered"
        },
        {
          "$ref": "#/definitions/projects_v2_item$restored"
        }
      ]
    },
    "public$event": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "additionalProperties": false,
      "description": "When a private repository is made public.",
      "properties": {
        "installation": {
          "$ref": "#/definitions/installation-lite"
        },
        "organization": {
          "$ref": "#/definitions/organization"
        },
        "repository": {
          "allOf": [
            {
              "$ref": "#/definitions/repository"
            },
            {
              "properties": {
                "private": {
                  "enum": [
                    false
                  ],
                  "type": "boolean"
                }
              },
              "required": [
                "private"
              ],
              "tsAdditionalProperties": false,
              "type": "object"
            }
          ]
        },
        "sender": {
          "$ref": "#/definitions/user"
        }
      },
      "required": [
        "repository",
        "sender"
      ],
      "title": "public event",
      "type": "object"
    },
    "pull-request": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "additionalProperties": false,
      "properties": {
        "_links": {
          "additionalProperties": false,
          "properties": {
            "comments": {
              "$ref": "#/definitions/link"
            },
            "commits": {
              "$ref": "#/definitions/link"
            },
            "html": {
              "$ref": "#/definitions/link"
            },
            "issue": {
              "$ref": "#/definitions/link"
            },
            "review_comment": {
              "$ref": "#/definitions/link"
            },
            "review_comments": {
              "$ref": "#/definitions/link"
            },
            "self": {
              "$ref": "#/definitions/link"
            },
            "statuses": {
              "$ref": "#/definitions/link"
            }
          },
          "required": [
            "self",
            "html",
            "issue",
            "comments",
            "review_comments",
            "review_comment",
            "commits",
            "statuses"
          ],
          "type": "object"
        },
        "active_lock_reason": {
          "enum": [
            "resolved",
            "off-topic",
            "too heated",
            "spam",
            null
          ],
          "type": [
            "string",
            "null"
          ]
        },
        "additions": {
          "type": "integer"
        },
        "assignee": {
          "oneOf": [
            {
              "$ref": "#/definitions/user"
            },
            {
              "type": "null"
            }
          ]
        },
        "assignees": {
          "items": {
            "$ref": "#/definitions/user"
          },
          "type": "array"
        },
        "author_association": {
          "$ref": "#/definitions/author_association"
        },
        "auto_merge": {
          "oneOf": [
            {
              "$ref": "#/definitions/auto-merge"
            },
            {
              "type": "null"
            }
          ]
        },
        "base": {
          "additionalProperties": false,
          "properties": {
            "label": {
              "type": "string"
            },
            "ref": {
              "type": "string"
            },
            "repo": {
              "$ref": "#/definitions/repository"
            },
            "sha": {
              "type": "string"
            },
            "user": {
              "$ref": "#/definitions/user"
            }
          },
          "required": [
            "label",
            "ref",
            "sha",
            "user",
            "repo"
          ],
          "type": "object"
        },
        "body": {
          "type": [
            "string",
            "null"
          ]
        },
        "changed_files": {
          "type": "integer"
        },
        "closed_at": {
          "format": "date-time",
          "type": [
            "string",
            "null"
          ]
        },
        "comments": {
          "type": "integer"
        },
        "comments_url": {
          "format": "uri",
          "type": "string"
        },
        "commits": {
          "type": "integer"
        },
        "commits_url": {
          "format": "uri",
          "type": "string"
        },
        "created_at": {
          "format": "date-time",
          "type": "string"
        },
        "deletions": {
          "type": "integer"
        },
        "diff_url": {
          "format": "uri",
          "type": "string"
        },
        "draft": {
          "description": "Indicates whether or not the pull request is a draft.",
          "type": "boolean"
        },
        "head": {
          "additionalProperties": false,
          "properties": {
            "label": {
              "type": "string"
            },
            "ref": {
              "type": "string"
            },
            "repo": {
              "$ref": "#/definitions/repository"
            },
            "sha": {
              "type": "string"
            },
            "user": {
              "$ref": "#/definitions/user"
            }
          },
          "required": [
            "label",
            "ref",
            "sha",
            "user",
            "repo"
          ],
          "type": "object"
        },
        "html_url": {
          "format": "uri",
          "type": "string"
        },
        "id": {
          "type": "integer"
        },
        "issue_url": {
          "format": "uri",
          "type": "string"
        },
        "labels": {
          "items": {
            "$ref": "#/definitions/label"
          },
          "type": "array"
        },
        "locked": {
          "type": "boolean"
        },
        "maintainer_can_modify": {
          "description": "Indicates whether maintainers can modify the pull request.",
          "type": "boolean"
        },
        "merge_commit_sha": {
          "type": [
            "string",
            "null"
          ]
        },
        "mergeable": {
          "type": [
            "boolean",
            "null"
          ]
        },
        "mergeable_state": {
          "type": "string"
        },
        "merged": {
          "type": [
            "boolean",
            "null"
          ]
        },
        "merged_at": {
          "format": "date-time",
          "type": [
            "string",
            "null"
          ]
        },
        "merged_by": {
          "oneOf": [
            {
              "$ref": "#/definitions/user"
            },
            {
              "type": "null"
            }
          ]
        },
        "milestone": {
          "oneOf": [
            {
              "$ref": "#/definitions/milestone"
            },
            {
              "type": "null"
            }
          ]
        },
        "node_id": {
          "type": "string"
        },
        "number": {
          "description": "Number uniquely identifying the pull request within its repository.",
          "type": "integer"
        },
        "patch_url": {
          "format": "uri",
          "type": "string"
        },
        "rebaseable": {
          "type": [
            "boolean",
            "null"
          ]
        },
        "requested_reviewers": {
          "items": {
            "oneOf": [
              {
                "$ref": "#/definitions/user"
              },
              {
                "$ref": "#/definitions/team"
              }
            ]
          },
          "type": "array"
        },
        "requested_teams": {
          "items": {
            "$ref": "#/definitions/team"
          },
          "type": "array"
        },
        "review_comment_url": {
          "format": "uri-template",
          "type": "string"
        },
        "review_comments": {
          "type": "integer"
        },
        "review_comments_url": {
          "format": "uri",
          "type": "string"
        },
        "state": {
          "description": "State of this Pull Request. Either `open` or `closed`.",
          "enum": [
            "open",
            "closed"
          ],
          "type": "string"
        },
        "statuses_url": {
          "format": "uri",
          "type": "string"
        },
        "title": {
          "description": "The title of the pull request.",
          "type": "string"
        },
        "updated_at": {
          "format": "date-time",
          "type": "string"
        },
        "url": {
          "format": "uri",
          "type": "string"
        },
        "user": {
          "$ref": "#/definitions/user"
        }
      },
      "required": [
        "url",
        "id",
        "node_id",
        "html_url",
        "diff_url",
        "patch_url",
        "issue_url",
        "number",
        "state",
        "locked",
        "title",
        "user",
        "body",
        "created_at",
        "updated_at",
        "closed_at",
        "merged_at",
        "merge_commit_sha",
        "assignee",
        "assignees",
        "requested_reviewers",
        "requested_teams",
        "labels",
        "milestone",
        "commits_url",
        "review_comments_url",
        "review_comment_url",
        "comments_url",
        "statuses_url",
        "head",
        "base",
        "_links",
        "author_association",
        "auto_merge",
        "active_lock_reason",
        "draft",
        "merged",
        "mergeable",
        "rebaseable",
        "mergeable_state",
        "merged_by",
        "comments",
        "review_comments",
        "maintainer_can_modify",
        "commits",
        "additions",
        "deletions",
        "changed_files"
      ],
      "title": "Pull Request",
      "type": "object"
    },
    "pull-request-review-comment": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "additionalProperties": false,
      "description": "The [comment](https://docs.github.com/en/rest/reference/pulls#comments) itself.",
      "properties": {
        "_links": {
          "additionalProperties": false,
          "properties": {
            "html": {
              "$ref": "#/definitions/link"
            },
            "pull_request": {
              "$ref": "#/definitions/link"
            },
            "self": {
              "$ref": "#/definitions/link"
            }
          },
          "required": [
            "self",
            "html",
            "pull_request"
          ],
          "type": "object"
        },
        "author_association": {
          "$ref": "#/definitions/author_association"
        },
        "body": {
          "description": "The text of the comment.",
          "type": "string"
        },
        "commit_id": {
          "description": "The SHA of the commit to which the comment applies.",
          "type": "string"
        },
        "created_at": {
          "format": "date-time",
          "type": "string"
        },
        "diff_hunk": {
          "description": "The diff of the line that the comment refers to.",
          "type": "string"
        },
        "html_url": {
          "description": "HTML URL for the pull request review comment.",
          "format": "uri",
          "type": "string"
        },
        "id": {
          "description": "The ID of the pull request review comment.",
          "type": "integer"
        },
        "in_reply_to_id": {
          "description": "The comment ID to reply to.",
          "type": "integer"
        },
        "line": {
          "description": "The line of the blob to which the comment applies. The last line of the range for a multi-line comment",
          "type": [
            "integer",
            "null"
          ]
        },
        "node_id": {
          "description": "The node ID of the pull request review comment.",
          "type": "string"
        },
        "original_commit_id": {
          "description": "The SHA of the original commit to which the comment applies.",
          "type": "string"
        },
        "original_line": {
          "description": "The line of the blob to which the comment applies. The last line of the range for a multi-line comment",
          "type": "integer"
        },
        "original_position": {
          "description": "The index of the original line in the diff to which the comment applies.",
          "type": "integer"
        },
        "original_start_line": {
          "description": "The first line of the range for a multi-line comment.",
          "type": [
            "integer",
            "null"
          ]
        },
        "path": {
          "description": "The relative path of the file to which the comment applies.",
          "type": "string"
        },
        "position": {
          "description": "The line index in the diff to which the comment applies.",
          "type": [
            "integer",
            "null"
          ]
        },
        "pull_request_review_id": {
          "description": "The ID of the pull request review to which the comment belongs.",
          "type": "integer"
        },
        "pull_request_url": {
          "description": "URL for the pull request that the review comment belongs to.",
          "format": "uri",
          "type": "string"
        },
        "reactions": {
          "$ref": "#/definitions/reactions"
        },
        "side": {
          "description": "The side of the first line of the range for a multi-line comment.",
          "enum": [
            "LEFT",
            "RIGHT"
          ],
          "type": "string"
        },
        "start_line": {
          "description": "The first line of the range for a multi-line comment.",
          "type": [
            "integer",
            "null"
          ]
        },
        "start_side": {
          "default": "RIGHT",
          "description": "The side of the first line of the range for a multi-line comment.",
          "enum": [
            "LEFT",
            "RIGHT",
            null
          ],
          "type": [
            "string",
            "null"
          ]
        },
        "updated_at": {
          "format": "date-time",
          "type": "string"
        },
        "url": {
          "description": "URL for the pull request review comment",
          "format": "uri",
          "type": "string"
        },
        "user": {
          "$ref": "#/definitions/user"
        }
      },
      "required": [
        "url",
        "pull_request_review_id",
        "id",
        "node_id",
        "diff_hunk",
        "path",
        "position",
        "original_position",
        "commit_id",
        "original_commit_id",
        "user",
        "body",
        "created_at",
        "updated_at",
        "html_url",
        "pull_request_url",
        "author_association",
        "_links",
        "start_line",
        "original_start_line",
        "original_line",
        "line",
        "start_side",
        "side",
        "reactions"
      ],
      "title": "Pull Request Review Comment",
      "type": "object"
    },
    "pull_request$assigned": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "additionalProperties": false,
      "properties": {
        "action": {
          "enum": [
            "assigned"
          ],
          "type": "string"
        },
        "assignee": {
          "$ref": "#/definitions/user"
        },
        "installation": {
          "$ref": "#/definitions/installation-lite"
        },
        "number": {
          "description": "The pull request number.",
          "type": "integer"
        },
        "organization": {
          "$ref": "#/definitions/organization"
        },
        "pull_request": {
          "$ref": "#/definitions/pull-request"
        },
        "repository": {
          "$ref": "#/definitions/repository"
        },
        "sender": {
          "$ref": "#/definitions/user"
        }
      },
      "required": [
        "action",
        "number",
        "pull_request",
        "assignee",
        "repository",
        "sender"
      ],
      "title": "pull_request assigned event",
      "type": "object"
    },
    "pull_request$auto_merge_disabled": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "additionalProperties": false,
      "properties": {
        "action": {
          "enum": [
            "auto_merge_disabled"
          ],
          "type": "string"
        },
        "installation": {
          "$ref": "#/definitions/installation-lite"
        },
        "number": {
          "type": "integer"
        },
        "organization": {
          "$ref": "#/definitions/organization"
        },
        "pull_request": {
          "$ref": "#/definitions/pull-request"
        },
        "reason": {
          "type": "string"
        },
        "repository": {
          "$ref": "#/definitions/repository"
        },
        "sender": {
          "$ref": "#/definitions/user"
        }
      },
      "required": [
        "action",
        "number",
        "pull_request",
        "reason",
        "repository",
        "sender"
      ],
      "title": "pull_request auto_merge_disabled event",
      "type": "object"
    },
    "pull_request$auto_merge_enabled": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "additionalProperties": false,
      "properties": {
        "action": {
          "enum": [
            "auto_merge_enabled"
          ],
          "type": "string"
        },
        "installation": {
          "$ref": "#/definitions/installation-lite"
        },
        "number": {
          "type": "integer"
        },
        "organization": {
          "$ref": "#/definitions/organization"
        },
        "pull_request": {
          "$ref": "#/definitions/pull-request"
        },
        "reason": {
          "type": "string"
        },
        "repository": {
          "$ref": "#/definitions/repository"
        },
        "sender": {
          "$ref": "#/definitions/user"
        }
      },
      "required": [
        "action",
        "number",
        "pull_request",
        "reason",
        "repository",
        "sender"
      ],
      "title": "pull_request auto_merge_enabled event",
      "type": "object"
    },
    "pull_request$closed": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "additionalProperties": false,
      "properties": {
        "action": {
          "enum": [
            "closed"
          ],
          "type": "string"
        },
        "installation": {
          "$ref": "#/definitions/installation-lite"
        },
        "number": {
          "description": "The pull request number.",
          "type": "integer"
        },
        "organization": {
          "$ref": "#/definitions/organization"
        },
        "pull_request": {
          "allOf": [
            {
              "$ref": "#/definitions/pull-request"
            },
            {
              "properties": {
                "closed_at": {
                  "format": "date-time",
                  "type": "string"
                },
                "merged": {
                  "type": "boolean"
                },
                "state": {
                  "description": "State of this Pull Request. Either `open` or `closed`.",
                  "enum": [
                    "closed"
                  ],
                  "type": "string"
                }
              },
              "required": [
                "state",
                "closed_at",
                "merged"
              ],
              "tsAdditionalProperties": false,
              "type": "object"
            }
          ]
        },
        "repository": {
          "$ref": "#/definitions/repository"
        },
        "sender": {
          "$ref": "#/definitions/user"
        }
      },
      "required": [
        "action",
        "number",
        "pull_request",
        "repository",
        "sender"
      ],
      "title": "pull_request closed event",
      "type": "object"
    },
    "pull_request$converted_to_draft": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "additionalProperties": false,
      "properties": {
        "action": {
          "enum": [
            "converted_to_draft"
          ],
          "type": "string"
        },
        "installation": {
          "$ref": "#/definitions/installation-lite"
        },
        "number": {
          "description": "The pull request number.",
          "type": "integer"
        },
        "organization": {
          "$ref": "#/definitions/organization"
        },
        "pull_request": {
          "allOf": [
            {
              "$ref": "#/definitions/pull-request"
            },
            {
              "properties": {
                "closed_at": {
                  "type": "null"
                },
                "draft": {
                  "description": "Indicates whether or not the pull request is a draft.",
                  "enum": [
                    true
                  ],
                  "type": "boolean"
                },
                "merged": {
                  "enum": [
                    false
                  ],
                  "type": "boolean"
                },
                "merged_at": {
                  "type": "null"
                },
                "merged_by": {
                  "type": "null"
                }
              },
              "required": [
                "closed_at",
                "merged_at",
                "draft",
                "merged",
                "merged_by"
              ],
              "tsAdditionalProperties": false,
              "type": "object"
            }
          ]
        },
        "repository": {
          "$ref": "#/definitions/repository"
        },
        "sender": {
          "$ref": "#/definitions/user"
        }
      },
      "required": [
        "action",
        "number",
        "pull_request",
        "repository",
        "sender"
      ],
      "title": "pull_request converted_to_draft event",
      "type": "object"
    },
    "pull_request$edited": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "additionalProperties": false,
      "properties": {
        "action": {
          "enum": [
            "edited"
          ],
          "type": "string"
        },
        "changes": {
          "additionalProperties": false,
          "description": "The changes to the comment if the action was `edited`.",
          "properties": {
            "base": {
              "additionalProperties": false,
              "properties": {
                "ref": {
                  "additionalProperties": false,
                  "properties": {
                    "from": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "from"
                  ],
                  "type": "object"
                },
                "sha": {
                  "additionalProperties": false,
                  "properties": {
                    "from": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "from"
                  ],
                  "type": "object"
                }
              },
              "required": [
                "ref",
                "sha"
              ],
              "type": "object"
            },
            "body": {
              "additionalProperties": false,
              "properties": {
                "from": {
                  "description": "The previous version of the body if the action was `edited`.",
                  "type": "string"
                }
              },
              "required": [
                "from"
              ],
              "type": "object"
            },
            "title": {
              "additionalProperties": false,
              "properties": {
                "from": {
                  "description": "The previous version of the title if the action was `edited`.",
                  "type": "string"
                }
              },
              "required": [
                "from"
              ],
              "type": "object"
            }
          },
          "type": "object"
        },
        "installation": {
          "$ref": "#/definitions/installation-lite"
        },
        "number": {
          "description": "The pull request number.",
          "type": "integer"
        },
        "organization": {
          "$ref": "#/definitions/organization"
        },
        "pull_request": {
          "$ref": "#/definitions/pull-request"
        },
        "repository": {
          "$ref": "#/definitions/repository"
        },
        "sender": {
          "$ref": "#/definitions/user"
        }
      },
      "required": [
        "action",
        "changes",
        "number",
        "pull_request",
        "repository",
        "sender"
      ],
      "title": "pull_request edited event",
      "type": "object"
    },
    "pull_request$labeled": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "additionalProperties": false,
      "properties": {
        "action": {
          "enum": [
            "labeled"
          ],
          "type": "string"
        },
        "installation": {
          "$ref": "#/definitions/installation-lite"
        },
        "label": {
          "$ref": "#/definitions/label"
        },
        "number": {
          "description": "The pull request number.",
          "type": "integer"
        },
        "organization": {
          "$ref": "#/definitions/organization"
        },
        "pull_request": {
          "$ref": "#/definitions/pull-request"
        },
        "repository": {
          "$ref": "#/definitions/repository"
        },
        "sender": {
          "$ref": "#/definitions/user"
        }
      },
      "required": [
        "action",
        "number",
        "pull_request",
        "label",
        "repository",
        "sender"
      ],
      "title": "pull_request labeled event",
      "type": "object"
    },
    "pull_request$locked": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "additionalProperties": false,
      "properties": {
        "action": {
          "enum": [
            "locked"
          ],
          "type": "string"
        },
        "installation": {
          "$ref": "#/definitions/installation-lite"
        },
        "number": {
          "description": "The pull request number.",
          "type": "integer"
        },
        "organization": {
          "$ref": "#/definitions/organization"
        },
        "pull_request": {
          "$ref": "#/definitions/pull-request"
        },
        "repository": {
          "$ref": "#/definitions/repository"
        },
        "sender": {
          "$ref": "#/definitions/user"
        }
      },
      "required": [
        "action",
        "number",
        "pull_request",
        "repository",
        "sender"
      ],
      "title": "pull_request locked event",
      "type": "object"
    },
    "pull_request$opened": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "additionalProperties": false,
      "properties": {
        "action": {
          "enum": [
            "opened"
          ],
          "type": "string"
        },
        "installation": {
          "$ref": "#/definitions/installation-lite"
        },
        "number": {
          "description": "The pull request number.",
          "type": "integer"
        },
        "organization": {
          "$ref": "#/definitions/organization"
        },
        "pull_request": {
          "allOf": [
            {
              "$ref": "#/definitions/pull-request"
            },
            {
              "properties": {
                "active_lock_reason": {
                  "type": "null"
                },
                "closed_at": {
                  "type": "null"
                },
                "merge_commit_sha": {
                  "type": "null"
                },
                "merged_at": {
                  "type": "null"
                },
                "merged_by": {
                  "type": "null"
                },
                "state": {
                  "enum": [
                    "open"
                  ],
                  "type": "string"
                }
              },
              "required": [
                "state",
                "closed_at",
                "merged_at",
                "merge_commit_sha",
                "active_lock_reason",
                "merged_by"
              ],
              "tsAdditionalProperties": false,
              "type": "object"
            }
          ]
        },
        "repository": {
          "$ref": "#/definitions/repository"
        },
        "sender": {
          "$ref": "#/definitions/user"
        }
      },
      "required": [
        "action",
        "number",
        "pull_request",
        "repository",
        "sender"
      ],
      "title": "pull_request opened event",
      "type": "object"
    },
    "pull_request$ready_for_review": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "additionalProperties": false,
      "properties": {
        "action": {
          "enum": [
            "ready_for_review"
          ],
          "type": "string"
        },
        "installation": {
          "$ref": "#/definitions/installation-lite"
        },
        "number": {
          "description": "The pull request number.",
          "type": "integer"
        },
        "organization": {
          "$ref": "#/definitions/organization"
        },
        "pull_request": {
          "allOf": [
            {
              "$ref": "#/definitions/pull-request"
            },
            {
              "properties": {
                "closed_at": {
                  "type": "null"
                },
                "draft": {
                  "description": "Indicates whether or not the pull request is a draft.",
                  "enum": [
                    false
                  ],
                  "type": "boolean"
                },
                "merged": {
                  "type": "boolean"
                },
                "merged_at": {
                  "type": "null"
                },
                "merged_by": {
                  "type": "null"
                },
                "state": {
                  "enum": [
                    "open"
                  ],
                  "type": "string"
                }
              },
              "required": [
                "state",
                "closed_at",
                "merged_at",
                "draft",
                "merged",
                "merged_by"
              ],
              "tsAdditionalProperties": false,
              "type": "object"
            }
          ]
        },
        "repository": {
          "$ref": "#/definitions/repository"
        },
        "sender": {
          "$ref": "#/definitions/user"
        }
      },
      "required": [
        "action",
        "number",
        "pull_request",
        "repository",
        "sender"
      ],
      "title": "pull_request ready_for_review event",
      "type": "object"
    },
    "pull_request$reopened": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "additionalProperties": false,
      "properties": {
        "action": {
          "enum": [
            "reopened"
          ],
          "type": "string"
        },
        "installation": {
          "$ref": "#/definitions/installation-lite"
        },
        "number": {
          "description": "The pull request number.",
          "type": "integer"
        },
        "organization": {
          "$ref": "#/definitions/organization"
        },
        "pull_request": {
          "allOf": [
            {
              "$ref": "#/definitions/pull-request"
            },
            {
              "properties": {
                "closed_at": {
                  "type": "null"
                },
                "merged": {
                  "type": "boolean"
                },
                "merged_at": {
                  "type": "null"
                },
                "merged_by": {
                  "type": "null"
                },
                "state": {
                  "enum": [
                    "open"
                  ],
                  "type": "string"
                }
              },
              "required": [
                "state",
                "closed_at",
                "merged_at",
                "merged",
                "merged_by"
              ],
              "tsAdditionalProperties": false,
              "type": "object"
            }
          ]
        },
        "repository": {
          "$ref": "#/definitions/repository"
        },
        "sender": {
          "$ref": "#/definitions/user"
        }
      },
      "required": [
        "action",
        "number",
        "pull_request",
        "repository",
        "sender"
      ],
      "title": "pull_request reopened event",
      "type": "object"
    },
    "pull_request$review_request_removed": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "oneOf": [
        {
          "additionalProperties": false,
          "properties": {
            "action": {
              "enum": [
                "review_request_removed"
              ],
              "type": "string"
            },
            "installation": {
              "$ref": "#/definitions/installation-lite"
            },
            "number": {
              "description": "The pull request number.",
              "type": "integer"
            },
            "organization": {
              "$ref": "#/definitions/organization"
            },
            "pull_request": {
              "$ref": "#/definitions/pull-request"
            },
            "repository": {
              "$ref": "#/definitions/repository"
            },
            "requested_reviewer": {
              "$ref": "#/definitions/user"
            },
            "sender": {
              "$ref": "#/definitions/user"
            }
          },
          "required": [
            "action",
            "number",
            "pull_request",
            "requested_reviewer",
            "repository",
            "sender"
          ],
          "type": "object"
        },
        {
          "additionalProperties": false,
          "properties": {
            "action": {
              "enum": [
                "review_request_removed"
              ],
              "type": "string"
            },
            "installation": {
              "$ref": "#/definitions/installation-lite"
            },
            "number": {
              "description": "The pull request number.",
              "type": "integer"
            },
            "organization": {
              "$ref": "#/definitions/organization"
            },
            "pull_request": {
              "$ref": "#/definitions/pull-request"
            },
            "repository": {
              "$ref": "#/definitions/repository"
            },
            "requested_team": {
              "$ref": "#/definitions/team"
            },
            "sender": {
              "$ref": "#/definitions/user"
            }
          },
          "required": [
            "action",
            "number",
            "pull_request",
            "requested_team",
            "repository",
            "sender"
          ],
          "type": "object"
        }
      ],
      "title": "pull_request review_request_removed event"
    },
    "pull_request$review_requested": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "oneOf": [
        {
          "additionalProperties": false,
          "properties": {
            "action": {
              "enum": [
                "review_requested"
              ],
              "type": "string"
            },
            "installation": {
              "$ref": "#/definitions/installation-lite"
            },
            "number": {
              "description": "The pull request number.",
              "type": "integer"
            },
            "organization": {
              "$ref": "#/definitions/organization"
            },
            "pull_request": {
              "$ref": "#/definitions/pull-request"
            },
            "repository": {
              "$ref": "#/definitions/repository"
            },
            "requested_reviewer": {
              "$ref": "#/definitions/user"
            },
            "sender": {
              "$ref": "#/definitions/user"
            }
          },
          "required": [
            "action",
            "number",
            "pull_request",
            "requested_reviewer",
            "repository",
            "sender"
          ],
          "type": "object"
        },
        {
          "additionalProperties": false,
          "properties": {
            "action": {
              "enum": [
                "review_requested"
              ],
              "type": "string"
            },
            "installation": {
              "$ref": "#/definitions/installation-lite"
            },
            "number": {
              "description": "The pull request number.",
              "type": "integer"
            },
            "organization": {
              "$ref": "#/definitions/organization"
            },
            "pull_request": {
              "$ref": "#/definitions/pull-request"
            },
            "repository": {
              "$ref": "#/definitions/repository"
            },
            "requested_team": {
              "$ref": "#/definitions/team"
            },
            "sender": {
              "$ref": "#/definitions/user"
            }
          },
          "required": [
            "action",
            "number",
            "pull_request",
            "requested_team",
            "repository",
            "sender"
          ],
          "type": "object"
        }
      ],
      "title": "pull_request review_requested event"
    },
    "pull_request$synchronize": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "additionalProperties": false,
      "properties": {
        "action": {
          "enum": [
            "synchronize"
          ],
          "type": "string"
        },
        "after": {
          "type": "string"
        },
        "before": {
          "type": "string"
        },
        "installation": {
          "$ref": "#/definitions/installation-lite"
        },
        "number": {
          "description": "The pull request number.",
          "type": "integer"
        },
        "organization": {
          "$ref": "#/definitions/organization"
        },
        "pull_request": {
          "$ref": "#/definitions/pull-request"
        },
        "repository": {
          "$ref": "#/definitions/repository"
        },
        "sender": {
          "$ref": "#/definitions/user"
        }
      },
      "required": [
        "action",
        "number",
        "before",
        "after",
        "pull_request",
        "repository",
        "sender"
      ],
      "title": "pull_request synchronize event",
      "type": "object"
    },
    "pull_request$unassigned": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "additionalProperties": false,
      "properties": {
        "action": {
          "enum": [
            "unassigned"
          ],
          "type": "string"
        },
        "assignee": {
          "$ref": "#/definitions/user"
        },
        "installation": {
          "$ref": "#/definitions/installation-lite"
        },
        "number": {
          "description": "The pull request number.",
          "type": "integer"
        },
        "organization": {
          "$ref": "#/definitions/organization"
        },
        "pull_request": {
          "$ref": "#/definitions/pull-request"
        },
        "repository": {
          "$ref": "#/definitions/repository"
        },
        "sender": {
          "$ref": "#/definitions/user"
        }
      },
      "required": [
        "action",
        "number",
        "pull_request",
        "assignee",
        "repository",
        "sender"
      ],
      "title": "pull_request unassigned event",
      "type": "object"
    },
    "pull_request$unlabeled": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "additionalProperties": false,
      "properties": {
        "action": {
          "enum": [
            "unlabeled"
          ],
          "type": "string"
        },
        "installation": {
          "$ref": "#/definitions/installation-lite"
        },
        "label": {
          "$ref": "#/definitions/label"
        },
        "number": {
          "description": "The pull request number.",
          "type": "integer"
        },
        "organization": {
          "$ref": "#/definitions/organization"
        },
        "pull_request": {
          "$ref": "#/definitions/pull-request"
        },
        "repository": {
          "$ref": "#/definitions/repository"
        },
        "sender": {
          "$ref": "#/definitions/user"
        }
      },
      "required": [
        "action",
        "number",
        "pull_request",
        "label",
        "repository",
        "sender"
      ],
      "title": "pull_request unlabeled event",
      "type": "object"
    },
    "pull_request$unlocked": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "additionalProperties": false,
      "properties": {
        "action": {
          "enum": [
            "unlocked"
          ],
          "type": "string"
        },
        "installation": {
          "$ref": "#/definitions/installation-lite"
        },
        "number": {
          "description": "The pull request number.",
          "type": "integer"
        },
        "organization": {
          "$ref": "#/definitions/organization"
        },
        "pull_request": {
          "$ref": "#/definitions/pull-request"
        },
        "repository": {
          "$ref": "#/definitions/repository"
        },
        "sender": {
          "$ref": "#/definitions/user"
        }
      },
      "required": [
        "action",
        "number",
        "pull_request",
        "repository",
        "sender"
      ],
      "title": "pull_request unlocked event",
      "type": "object"
    },
    "pull_request_event": {
      "oneOf": [
        {
          "$ref": "#/definitions/pull_request$assigned"
        },
        {
          "$ref": "#/definitions/pull_request$auto_merge_disabled"
        },
        {
          "$ref": "#/definitions/pull_request$auto_merge_enabled"
        },
        {
          "$ref": "#/definitions/pull_request$closed"
        },
        {
          "$ref": "#/definitions/pull_request$converted_to_draft"
        },
        {
          "$ref": "#/definitions/pull_request$edited"
        },
        {
          "$ref": "#/definitions/pull_request$labeled"
        },
        {
          "$ref": "#/definitions/pull_request$locked"
        },
        {
          "$ref": "#/definitions/pull_request$opened"
        },
        {
          "$ref": "#/definitions/pull_request$ready_for_review"
        },
        {
          "$ref": "#/definitions/pull_request$reopened"
        },
        {
          "$ref": "#/definitions/pull_request$review_request_removed"
        },
        {
          "$ref": "#/definitions/pull_request$review_requested"
        },
        {
          "$ref": "#/definitions/pull_request$synchronize"
        },
        {
          "$ref": "#/definitions/pull_request$unassigned"
        },
        {
          "$ref": "#/definitions/pull_request$unlabeled"
        },
        {
          "$ref": "#/definitions/pull_request$unlocked"
        }
      ]
    },
    "pull_request_review$dismissed": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "additionalProperties": false,
      "properties": {
        "action": {
          "enum": [
            "dismissed"
          ],
          "type": "string"
        },
        "installation": {
          "$ref": "#/definitions/installation-lite"
        },
        "organization": {
          "$ref": "#/definitions/organization"
        },
        "pull_request": {
          "$ref": "#/definitions/simple-pull-request"
        },
        "repository": {
          "$ref": "#/definitions/repository"
        },
        "review": {
          "additionalProperties": false,
          "description": "The review that was affected.",
          "properties": {
            "_links": {
              "additionalProperties": false,
              "properties": {
                "html": {
                  "$ref": "#/definitions/link"
                },
                "pull_request": {
                  "$ref": "#/definitions/link"
                }
              },
              "required": [
                "html",
                "pull_request"
              ],
              "type": "object"
            },
            "author_association": {
              "$ref": "#/definitions/author_association"
            },
            "body": {
              "description": "The text of the review.",
              "type": [
                "string",
                "null"
              ]
            },
            "commit_id": {
              "description": "A commit SHA for the review.",
              "type": "string"
            },
            "html_url": {
              "format": "uri",
              "type": "string"
            },
            "id": {
              "description": "Unique identifier of the review",
              "type": "integer"
            },
            "node_id": {
              "type": "string"
            },
            "pull_request_url": {
              "format": "uri",
              "type": "string"
            },
            "state": {
              "enum": [
                "dismissed"
              ],
              "type": "string"
            },
            "submitted_at": {
              "format": "date-time",
              "type": "string"
            },
            "user": {
              "$ref": "#/definitions/user"
            }
          },
          "required": [
            "id",
            "node_id",
            "user",
            "body",
            "commit_id",
            "submitted_at",
            "state",
            "html_url",
            "pull_request_url",
            "author_association",
            "_links"
          ],
          "type": "object"
        },
        "sender": {
          "$ref": "#/definitions/user"
        }
      },
      "required": [
        "action",
        "review",
        "pull_request",
        "repository",
        "sender"
      ],
      "title": "pull_request_review dismissed event",
      "type": "object"
    },
    "pull_request_review$edited": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "additionalProperties": false,
      "properties": {
        "action": {
          "enum": [
            "edited"
          ],
          "type": "string"
        },
        "changes": {
          "additionalProperties": false,
          "properties": {
            "body": {
              "additionalProperties": false,
              "properties": {
                "from": {
                  "description": "The previous version of the body if the action was `edited`.",
                  "type": "string"
                }
              },
              "required": [
                "from"
              ],
              "type": "object"
            }
          },
          "type": "object"
        },
        "installation": {
          "$ref": "#/definitions/installation-lite"
        },
        "organization": {
          "$ref": "#/definitions/organization"
        },
        "pull_request": {
          "$ref": "#/definitions/simple-pull-request"
        },
        "repository": {
          "$ref": "#/definitions/repository"
        },
        "review": {
          "additionalProperties": false,
          "description": "The review that was affected.",
          "properties": {
            "_links": {
              "additionalProperties": false,
              "properties": {
                "html": {
                  "$ref": "#/definitions/link"
                },
                "pull_request": {
                  "$ref": "#/definitions/link"
                }
              },
              "required": [
                "html",
                "pull_request"
              ],
              "type": "object"
            },
            "author_association": {
              "$ref": "#/definitions/author_association"
            },
            "body": {
              "description": "The text of the review.",
              "type": [
                "string",
                "null"
              ]
            },
            "commit_id": {
              "description": "A commit SHA for the review.",
              "type": "string"
            },
            "html_url": {
              "format": "uri",
              "type": "string"
            },
            "id": {
              "description": "Unique identifier of the review",
              "type": "integer"
            },
            "node_id": {
              "type": "string"
            },
            "pull_request_url": {
              "format": "uri",
              "type": "string"
            },
            "state": {
              "type": "string"
            },
            "submitted_at": {
              "format": "date-time",
              "type": "string"
            },
            "user": {
              "$ref": "#/definitions/user"
            }
          },
          "required": [
            "id",
            "node_id",
            "user",
            "body",
            "commit_id",
            "submitted_at",
            "state",
            "html_url",
            "pull_request_url",
            "author_association",
            "_links"
          ],
          "type": "object"
        },
        "sender": {
          "$ref": "#/definitions/user"
        }
      },
      "required": [
        "action",
        "changes",
        "review",
        "pull_request",
        "repository",
        "sender"
      ],
      "title": "pull_request_review edited event",
      "type": "object"
    },
    "pull_request_review$submitted": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "additionalProperties": false,
      "properties": {
        "action": {
          "enum": [
            "submitted"
          ],
          "type": "string"
        },
        "installation": {
          "$ref": "#/definitions/installation-lite"
        },
        "organization": {
          "$ref": "#/definitions/organization"
        },
        "pull_request": {
          "$ref": "#/definitions/simple-pull-request"
        },
        "repository": {
          "$ref": "#/definitions/repository"
        },
        "review": {
          "additionalProperties": false,
          "description": "The review that was affected.",
          "properties": {
            "_links": {
              "additionalProperties": false,
              "properties": {
                "html": {
                  "$ref": "#/definitions/link"
                },
                "pull_request": {
                  "$ref": "#/definitions/link"
                }
              },
              "required": [
                "html",
                "pull_request"
              ],
              "type": "object"
            },
            "author_association": {
              "$ref": "#/definitions/author_association"
            },
            "body": {
              "description": "The text of the review.",
              "type": [
                "string",
                "null"
              ]
            },
            "commit_id": {
              "description": "A commit SHA for the review.",
              "type": "string"
            },
            "html_url": {
              "format": "uri",
              "type": "string"
            },
            "id": {
              "description": "Unique identifier of the review",
              "type": "integer"
            },
            "node_id": {
              "type": "string"
            },
            "pull_request_url": {
              "format": "uri",
              "type": "string"
            },
            "state": {
              "type": "string"
            },
            "submitted_at": {
              "format": "date-time",
              "type": "string"
            },
            "user": {
              "$ref": "#/definitions/user"
            }
          },
          "required": [
            "id",
            "node_id",
            "user",
            "body",
            "commit_id",
            "submitted_at",
            "state",
            "html_url",
            "pull_request_url",
            "author_association",
            "_links"
          ],
          "type": "object"
        },
        "sender": {
          "$ref": "#/definitions/user"
        }
      },
      "required": [
        "action",
        "review",
        "pull_request",
        "repository",
        "sender"
      ],
      "title": "pull_request_review submitted event",
      "type": "object"
    },
    "pull_request_review_comment$created": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "additionalProperties": false,
      "properties": {
        "action": {
          "enum": [
            "created"
          ],
          "type": "string"
        },
        "comment": {
          "$ref": "#/definitions/pull-request-review-comment"
        },
        "installation": {
          "$ref": "#/definitions/installation-lite"
        },
        "organization": {
          "$ref": "#/definitions/organization"
        },
        "pull_request": {
          "additionalProperties": false,
          "properties": {
            "_links": {
              "additionalProperties": false,
              "properties": {
                "comments": {
                  "$ref": "#/definitions/link"
                },
                "commits": {
                  "$ref": "#/definitions/link"
                },
                "html": {
                  "$ref": "#/definitions/link"
                },
                "issue": {
                  "$ref": "#/definitions/link"
                },
                "review_comment": {
                  "$ref": "#/definitions/link"
                },
                "review_comments": {
                  "$ref": "#/definitions/link"
                },
                "self": {
                  "$ref": "#/definitions/link"
                },
                "statuses": {
                  "$ref": "#/definitions/link"
                }
              },
              "required": [
                "self",
                "html",
                "issue",
                "comments",
                "review_comments",
                "review_comment",
                "commits",
                "statuses"
              ],
              "type": "object"
            },
            "active_lock_reason": {
              "enum": [
                "resolved",
                "off-topic",
                "too heated",
                "spam",
                null
              ],
              "type": [
                "string",
                "null"
              ]
            },
            "assignee": {
              "oneOf": [
                {
                  "$ref": "#/definitions/user"
                },
                {
                  "type": "null"
                }
              ]
            },
            "assignees": {
              "items": {
                "$ref": "#/definitions/user"
              },
              "type": "array"
            },
            "author_association": {
              "$ref": "#/definitions/author_association"
            },
            "auto_merge": {
              "oneOf": [
                {
                  "$ref": "#/definitions/auto-merge"
                },
                {
                  "type": "null"
                }
              ]
            },
            "base": {
              "additionalProperties": false,
              "properties": {
                "label": {
                  "type": "string"
                },
                "ref": {
                  "type": "string"
                },
                "repo": {
                  "$ref": "#/definitions/repository"
                },
                "sha": {
                  "type": "string"
                },
                "user": {
                  "$ref": "#/definitions/user"
                }
              },
              "required": [
                "label",
                "ref",
                "sha",
                "user",
                "repo"
              ],
              "type": "object"
            },
            "body": {
              "type": "string"
            },
            "closed_at": {
              "type": [
                "string",
                "null"
              ]
            },
            "comments_url": {
              "format": "uri",
              "type": "string"
            },
            "commits_url": {
              "format": "uri",
              "type": "string"
            },
            "created_at": {
              "type": "string"
            },
            "diff_url": {
              "format": "uri",
              "type": "string"
            },
            "draft": {
              "type": "boolean"
            },
            "head": {
              "additionalProperties": false,
              "properties": {
                "label": {
                  "type": "string"
                },
                "ref": {
                  "type": "string"
                },
                "repo": {
                  "$ref": "#/definitions/repository"
                },
                "sha": {
                  "type": "string"
                },
                "user": {
                  "$ref": "#/definitions/user"
                }
              },
              "required": [
                "label",
                "ref",
                "sha",
                "user",
                "repo"
              ],
              "type": "object"
            },
            "html_url": {
              "format": "uri",
              "type": "string"
            },
            "id": {
              "type": "integer"
            },
            "issue_url": {
              "format": "uri",
              "type": "string"
            },
            "labels": {
              "items": {
                "$ref": "#/definitions/label"
              },
              "type": "array"
            },
            "locked": {
              "type": "boolean"
            },
            "merge_commit_sha": {
              "type": [
                "string",
                "null"
              ]
            },
            "merged_at": {
              "type": [
                "string",
                "null"
              ]
            },
            "milestone": {
              "oneOf": [
                {
                  "$ref": "#/definitions/milestone"
                },
                {
                  "type": "null"
                }
              ]
            },
            "node_id": {
              "type": "string"
            },
            "number": {
              "type": "integer"
            },
            "patch_url": {
              "format": "uri",
              "type": "string"
            },
            "requested_reviewers": {
              "items": {
                "oneOf": [
                  {
                    "$ref": "#/definitions/user"
                  },
                  {
                    "$ref": "#/definitions/team"
                  }
                ]
              },
              "type": "array"
            },
            "requested_teams": {
              "items": {
                "$ref": "#/definitions/team"
              },
              "type": "array"
            },
            "review_comment_url": {
              "format": "uri-template",
              "type": "string"
            },
            "review_comments_url": {
              "format": "uri",
              "type": "string"
            },
            "state": {
              "enum": [
                "open",
                "closed"
              ],
              "type": "string"
            },
            "statuses_url": {
              "format": "uri",
              "type": "string"
            },
            "title": {
              "type": "string"
            },
            "updated_at": {
              "type": "string"
            },
            "url": {
              "format": "uri",
              "type": "string"
            },
            "user": {
              "$ref": "#/definitions/user"
            }
          },
          "required": [
            "url",
            "id",
            "node_id",
            "html_url",
            "diff_url",
            "patch_url",
            "issue_url",
            "number",
            "state",
            "locked",
            "title",
            "user",
            "body",
            "created_at",
            "updated_at",
            "closed_at",
            "merged_at",
            "merge_commit_sha",
            "assignee",
            "assignees",
            "requested_reviewers",
            "requested_teams",
            "labels",
            "milestone",
            "commits_url",
            "review_comments_url",
            "review_comment_url",
            "comments_url",
            "statuses_url",
            "head",
            "base",
            "_links",
            "author_association",
            "active_lock_reason"
          ],
          "type": "object"
        },
        "repository": {
          "$ref": "#/definitions/repository"
        },
        "sender": {
          "$ref": "#/definitions/user"
        }
      },
      "required": [
        "action",
        "comment",
        "pull_request",
        "repository",
        "sender"
      ],
      "title": "pull_request_review_comment created event",
      "type": "object"
    },
    "pull_request_review_comment$deleted": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "additionalProperties": false,
      "properties": {
        "action": {
          "enum": [
            "deleted"
          ],
          "type": "string"
        },
        "comment": {
          "$ref": "#/definitions/pull-request-review-comment"
        },
        "installation": {
          "$ref": "#/definitions/installation-lite"
        },
        "organization": {
          "$ref": "#/definitions/organization"
        },
        "pull_request": {
          "additionalProperties": false,
          "properties": {
            "_links": {
              "additionalProperties": false,
              "properties": {
                "comments": {
                  "$ref": "#/definitions/link"
                },
                "commits": {
                  "$ref": "#/definitions/link"
                },
                "html": {
                  "$ref": "#/definitions/link"
                },
                "issue": {
                  "$ref": "#/definitions/link"
                },
                "review_comment": {
                  "$ref": "#/definitions/link"
                },
                "review_comments": {
                  "$ref": "#/definitions/link"
                },
                "self": {
                  "$ref": "#/definitions/link"
                },
                "statuses": {
                  "$ref": "#/definitions/link"
                }
              },
              "required": [
                "self",
                "html",
                "issue",
                "comments",
                "review_comments",
                "review_comment",
                "commits",
                "statuses"
              ],
              "type": "object"
            },
            "active_lock_reason": {
              "enum": [
                "resolved",
                "off-topic",
                "too heated",
                "spam",
                null
              ],
              "type": [
                "string",
                "null"
              ]
            },
            "assignee": {
              "oneOf": [
                {
                  "$ref": "#/definitions/user"
                },
                {
                  "type": "null"
                }
              ]
            },
            "assignees": {
              "items": {
                "$ref": "#/definitions/user"
              },
              "type": "array"
            },
            "author_association": {
              "$ref": "#/definitions/author_association"
            },
            "auto_merge": {
              "oneOf": [
                {
                  "$ref": "#/definitions/auto-merge"
                },
                {
                  "type": "null"
                }
              ]
            },
            "base": {
              "additionalProperties": false,
              "properties": {
                "label": {
                  "type": "string"
                },
                "ref": {
                  "type": "string"
                },
                "repo": {
                  "$ref": "#/definitions/repository"
                },
                "sha": {
                  "type": "string"
                },
                "user": {
                  "$ref": "#/definitions/user"
                }
              },
              "required": [
                "label",
                "ref",
                "sha",
                "user",
                "repo"
              ],
              "type": "object"
            },
            "body": {
              "type": "string"
            },
            "closed_at": {
              "type": [
                "string",
                "null"
              ]
            },
            "comments_url": {
              "format": "uri",
              "type": "string"
            },
            "commits_url": {
              "format": "uri",
              "type": "string"
            },
            "created_at": {
              "type": "string"
            },
            "diff_url": {
              "format": "uri",
              "type": "string"
            },
            "draft": {
              "type": "boolean"
            },
            "head": {
              "additionalProperties": false,
              "properties": {
                "label": {
                  "type": "string"
                },
                "ref": {
                  "type": "string"
                },
                "repo": {
                  "$ref": "#/definitions/repository"
                },
                "sha": {
                  "type": "string"
                },
                "user": {
                  "$ref": "#/definitions/user"
                }
              },
              "required": [
                "label",
                "ref",
                "sha",
                "user",
                "repo"
              ],
              "type": "object"
            },
            "html_url": {
              "format": "uri",
              "type": "string"
            },
            "id": {
              "type": "integer"
            },
            "issue_url": {
              "format": "uri",
              "type": "string"
            },
            "labels": {
              "items": {
                "$ref": "#/definitions/label"
              },
              "type": "array"
            },
            "locked": {
              "type": "boolean"
            },
            "merge_commit_sha": {
              "type": [
                "string",
                "null"
              ]
            },
            "merged_at": {
              "type": [
                "string",
                "null"
              ]
            },
            "milestone": {
              "oneOf": [
                {
                  "$ref": "#/definitions/milestone"
                },
                {
                  "type": "null"
                }
              ]
            },
            "node_id": {
              "type": "string"
            },
            "number": {
              "type": "integer"
            },
            "patch_url": {
              "format": "uri",
              "type": "string"
            },
            "requested_reviewers": {
              "items": {
                "oneOf": [
                  {
                    "$ref": "#/definitions/user"
                  },
                  {
                    "$ref": "#/definitions/team"
                  }
                ]
              },
              "type": "array"
            },
            "requested_teams": {
              "items": {
                "$ref": "#/definitions/team"
              },
              "type": "array"
            },
            "review_comment_url": {
              "format": "uri-template",
              "type": "string"
            },
            "review_comments_url": {
              "format": "uri",
              "type": "string"
            },
            "state": {
              "enum": [
                "open",
                "closed"
              ],
              "type": "string"
            },
            "statuses_url": {
              "format": "uri",
              "type": "string"
            },
            "title": {
              "type": "string"
            },
            "updated_at": {
              "type": "string"
            },
            "url": {
              "format": "uri",
              "type": "string"
            },
            "user": {
              "$ref": "#/definitions/user"
            }
          },
          "required": [
            "url",
            "id",
            "node_id",
            "html_url",
            "diff_url",
            "patch_url",
            "issue_url",
            "number",
            "state",
            "locked",
            "title",
            "user",
            "body",
            "created_at",
            "updated_at",
            "closed_at",
            "merged_at",
            "merge_commit_sha",
            "assignee",
            "assignees",
            "requested_reviewers",
            "requested_teams",
            "labels",
            "milestone",
            "commits_url",
            "review_comments_url",
            "review_comment_url",
            "comments_url",
            "statuses_url",
            "head",
            "base",
            "_links",
            "author_association",
            "active_lock_reason"
          ],
          "type": "object"
        },
        "repository": {
          "$ref": "#/definitions/repository"
        },
        "sender": {
          "$ref": "#/definitions/user"
        }
      },
      "required": [
        "action",
        "comment",
        "pull_request",
        "repository",
        "sender"
      ],
      "title": "pull_request_review_comment deleted event",
      "type": "object"
    },
    "pull_request_review_comment$edited": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "additionalProperties": false,
      "properties": {
        "action": {
          "enum": [
            "edited"
          ],
          "type": "string"
        },
        "changes": {
          "additionalProperties": false,
          "description": "The changes to the comment.",
          "properties": {
            "body": {
              "additionalProperties": false,
              "properties": {
                "from": {
                  "description": "The previous version of the body.",
                  "type": "string"
                }
              },
              "required": [
                "from"
              ],
              "type": "object"
            }
          },
          "type": "object"
        },
        "comment": {
          "$ref": "#/definitions/pull-request-review-comment"
        },
        "installation": {
          "$ref": "#/definitions/installation-lite"
        },
        "organization": {
          "$ref": "#/definitions/organization"
        },
        "pull_request": {
          "additionalProperties": false,
          "properties": {
            "_links": {
              "additionalProperties": false,
              "properties": {
                "comments": {
                  "$ref": "#/definitions/link"
                },
                "commits": {
                  "$ref": "#/definitions/link"
                },
                "html": {
                  "$ref": "#/definitions/link"
                },
                "issue": {
                  "$ref": "#/definitions/link"
                },
                "review_comment": {
                  "$ref": "#/definitions/link"
                },
                "review_comments": {
                  "$ref": "#/definitions/link"
                },
                "self": {
                  "$ref": "#/definitions/link"
                },
                "statuses": {
                  "$ref": "#/definitions/link"
                }
              },
              "required": [
                "self",
                "html",
                "issue",
                "comments",
                "review_comments",
                "review_comment",
                "commits",
                "statuses"
              ],
              "type": "object"
            },
            "active_lock_reason": {
              "enum": [
                "resolved",
                "off-topic",
                "too heated",
                "spam",
                null
              ],
              "type": [
                "string",
                "null"
              ]
            },
            "assignee": {
              "oneOf": [
                {
                  "$ref": "#/definitions/user"
                },
                {
                  "type": "null"
                }
              ]
            },
            "assignees": {
              "items": {
                "$ref": "#/definitions/user"
              },
              "type": "array"
            },
            "author_association": {
              "$ref": "#/definitions/author_association"
            },
            "auto_merge": {
              "oneOf": [
                {
                  "$ref": "#/definitions/auto-merge"
                },
                {
                  "type": "null"
                }
              ]
            },
            "base": {
              "additionalProperties": false,
              "properties": {
                "label": {
                  "type": "string"
                },
                "ref": {
                  "type": "string"
                },
                "repo": {
                  "$ref": "#/definitions/repository"
                },
                "sha": {
                  "type": "string"
                },
                "user": {
                  "$ref": "#/definitions/user"
                }
              },
              "required": [
                "label",
                "ref",
                "sha",
                "user",
                "repo"
              ],
              "type": "object"
            },
            "body": {
              "type": "string"
            },
            "closed_at": {
              "type": [
                "string",
                "null"
              ]
            },
            "comments_url": {
              "format": "uri",
              "type": "string"
            },
            "commits_url": {
              "format": "uri",
              "type": "string"
            },
            "created_at": {
              "type": "string"
            },
            "diff_url": {
              "format": "uri",
              "type": "string"
            },
            "draft": {
              "type": "boolean"
            },
            "head": {
              "additionalProperties": false,
              "properties": {
                "label": {
                  "type": "string"
                },
                "ref": {
                  "type": "string"
                },
                "repo": {
                  "$ref": "#/definitions/repository"
                },
                "sha": {
                  "type": "string"
                },
                "user": {
                  "$ref": "#/definitions/user"
                }
              },
              "required": [
                "label",
                "ref",
                "sha",
                "user",
                "repo"
              ],
              "type": "object"
            },
            "html_url": {
              "format": "uri",
              "type": "string"
            },
            "id": {
              "type": "integer"
            },
            "issue_url": {
              "format": "uri",
              "type": "string"
            },
            "labels": {
              "items": {
                "$ref": "#/definitions/label"
              },
              "type": "array"
            },
            "locked": {
              "type": "boolean"
            },
            "merge_commit_sha": {
              "type": [
                "string",
                "null"
              ]
            },
            "merged_at": {
              "type": [
                "string",
                "null"
              ]
            },
            "milestone": {
              "oneOf": [
                {
                  "$ref": "#/definitions/milestone"
                },
                {
                  "type": "null"
                }
              ]
            },
            "node_id": {
              "type": "string"
            },
            "number": {
              "type": "integer"
            },
            "patch_url": {
              "format": "uri",
              "type": "string"
            },
            "requested_reviewers": {
              "items": {
                "oneOf": [
                  {
                    "$ref": "#/definitions/user"
                  },
                  {
                    "$ref": "#/definitions/team"
                  }
                ]
              },
              "type": "array"
            },
            "requested_teams": {
              "items": {
                "$ref": "#/definitions/team"
              },
              "type": "array"
            },
            "review_comment_url": {
              "format": "uri-template",
              "type": "string"
            },
            "review_comments_url": {
              "format": "uri",
              "type": "string"
            },
            "state": {
              "enum": [
                "open",
                "closed"
              ],
              "type": "string"
            },
            "statuses_url": {
              "format": "uri",
              "type": "string"
            },
            "title": {
              "type": "string"
            },
            "updated_at": {
              "type": "string"
            },
            "url": {
              "format": "uri",
              "type": "string"
            },
            "user": {
              "$ref": "#/definitions/user"
            }
          },
          "required": [
            "url",
            "id",
            "node_id",
            "html_url",
            "diff_url",
            "patch_url",
            "issue_url",
            "number",
            "state",
            "locked",
            "title",
            "user",
            "body",
            "created_at",
            "updated_at",
            "closed_at",
            "merged_at",
            "merge_commit_sha",
            "assignee",
            "assignees",
            "requested_reviewers",
            "requested_teams",
            "labels",
            "milestone",
            "commits_url",
            "review_comments_url",
            "review_comment_url",
            "comments_url",
            "statuses_url",
            "head",
            "base",
            "_links",
            "author_association",
            "active_lock_reason"
          ],
          "type": "object"
        },
        "repository": {
          "$ref": "#/definitions/repository"
        },
        "sender": {
          "$ref": "#/definitions/user"
        }
      },
      "required": [
        "action",
        "changes",
        "comment",
        "pull_request",
        "repository",
        "sender"
      ],
      "title": "pull_request_review_comment edited event",
      "type": "object"
    },
    "pull_request_review_comment_event": {
      "oneOf": [
        {
          "$ref": "#/definitions/pull_request_review_comment$created"
        },
        {
          "$ref": "#/definitions/pull_request_review_comment$deleted"
        },
        {
          "$ref": "#/definitions/pull_request_review_comment$edited"
        }
      ]
    },
    "pull_request_review_event": {
      "oneOf": [
        {
          "$ref": "#/definitions/pull_request_review$dismissed"
        },
        {
          "$ref": "#/definitions/pull_request_review$edited"
        },
        {
          "$ref": "#/definitions/pull_request_review$submitted"
        }
      ]
    },
    "pull_request_review_thread$resolved": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "additionalProperties": false,
      "properties": {
        "action": {
          "enum": [
            "resolved"
          ],
          "type": "string"
        },
        "installation": {
          "$ref": "#/definitions/installation-lite"
        },
        "organization": {
          "$ref": "#/definitions/organization"
        },
        "pull_request": {
          "$ref": "#/definitions/simple-pull-request"
        },
        "repository": {
          "$ref": "#/definitions/repository"
        },
        "sender": {
          "$ref": "#/definitions/user"
        },
        "thread": {
          "additionalProperties": false,
          "properties": {
            "comments": {
              "items": {
                "$ref": "#/definitions/pull-request-review-comment"
              },
              "type": "array"
            },
            "node_id": {
              "type": "string"
            }
          },
          "required": [
            "node_id",
            "comments"
          ],
          "type": "object"
        }
      },
      "required": [
        "action",
        "thread",
        "pull_request",
        "repository",
        "sender"
      ],
      "title": "pull_request_review_thread resolved event",
      "type": "object"
    },
    "pull_request_review_thread$unresolved": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "additionalProperties": false,
      "properties": {
        "action": {
          "enum": [
            "unresolved"
          ],
          "type": "string"
        },
        "installation": {
          "$ref": "#/definitions/installation-lite"
        },
        "organization": {
          "$ref": "#/definitions/organization"
        },
        "pull_request": {
          "$ref": "#/definitions/simple-pull-request"
        },
        "repository": {
          "$ref": "#/definitions/repository"
        },
        "sender": {
          "$ref": "#/definitions/user"
        },
        "thread": {
          "additionalProperties": false,
          "properties": {
            "comments": {
              "items": {
                "$ref": "#/definitions/pull-request-review-comment"
              },
              "type": "array"
            },
            "node_id": {
              "type": "string"
            }
          },
          "required": [
            "node_id",
            "comments"
          ],
          "type": "object"
        }
      },
      "required": [
        "action",
        "thread",
        "pull_request",
        "repository",
        "sender"
      ],
      "title": "pull_request_review_thread unresolved event",
      "type": "object"
    },
    "pull_request_review_thread_event": {
      "oneOf": [
        {
          "$ref": "#/definitions/pull_request_review_thread$resolved"
        },
        {
          "$ref": "#/definitions/pull_request_review_thread$unresolved"
        }
      ]
    },
    "push$event": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "additionalProperties": false,
      "properties": {
        "after": {
          "description": "The SHA of the most recent commit on `ref` after the push.",
          "type": "string"
        },
        "base_ref": {
          "type": [
            "string",
            "null"
          ]
        },
        "before": {
          "description": "The SHA of the most recent commit on `ref` before the push.",
          "type": "string"
        },
        "commits": {
          "description": "An array of commit objects describing the pushed commits. (Pushed commits are all commits that are included in the `compare` between the `before` commit and the `after` commit.) The array includes a maximum of 20 commits. If necessary, you can use the [Commits API](https://docs.github.com/en/rest/reference/repos#commits) to fetch additional commits. This limit is applied to timeline events only and isn't applied to webhook deliveries.",
          "items": {
            "$ref": "#/definitions/commit"
          },
          "type": "array"
        },
        "compare": {
          "description": "URL that shows the changes in this `ref` update, from the `before` commit to the `after` commit. For a newly created `ref` that is directly based on the default branch, this is the comparison between the head of the default branch and the `after` commit. Otherwise, this shows all commits until the `after` commit.",
          "type": "string"
        },
        "created": {
          "description": "Whether this push created the `ref`.",
          "type": "boolean"
        },
        "deleted": {
          "description": "Whether this push deleted the `ref`.",
          "type": "boolean"
        },
        "forced": {
          "description": "Whether this push was a force push of the `ref`.",
          "type": "boolean"
        },
        "head_commit": {
          "description": "For pushes where `after` is or points to a commit object, an expanded representation of that commit. For pushes where `after` refers to an annotated tag object, an expanded representation of the commit pointed to by the annotated tag.",
          "oneOf": [
            {
              "$ref": "#/definitions/commit"
            },
            {
              "type": "null"
            }
          ]
        },
        "installation": {
          "$ref": "#/definitions/installation-lite"
        },
        "organization": {
          "$ref": "#/definitions/organization"
        },
        "pusher": {
          "$ref": "#/definitions/committer"
        },
        "ref": {
          "description": "The full git ref that was pushed. Example: `refs/heads/main` or `refs/tags/v3.14.1`.",
          "type": "string"
        },
        "repository": {
          "$ref": "#/definitions/repository"
        },
        "sender": {
          "$ref": "#/definitions/user"
        }
      },
      "required": [
        "ref",
        "before",
        "after",
        "created",
        "deleted",
        "forced",
        "base_ref",
        "compare",
        "commits",
        "head_commit",
        "repository",
        "pusher",
        "sender"
      ],
      "title": "push event",
      "type": "object"
    },
    "reactions": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "additionalProperties": false,
      "properties": {
        "+1": {
          "type": "integer"
        },
        "-1": {
          "type": "integer"
        },
        "confused": {
          "type": "integer"
        },
        "eyes": {
          "type": "integer"
        },
        "heart": {
          "type": "integer"
        },
        "hooray": {
          "type": "integer"
        },
        "laugh": {
          "type": "integer"
        },
        "rocket": {
          "type": "integer"
        },
        "total_count": {
          "type": "integer"
        },
        "url": {
          "format": "uri",
          "type": "string"
        }
      },
      "required": [
        "url",
        "total_count",
        "+1",
        "-1",
        "laugh",
        "confused",
        "heart",
        "hooray",
        "eyes",
        "rocket"
      ],
      "title": "Reactions",
      "type": "object"
    },
    "release": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "additionalProperties": false,
      "description": "The [release](https://docs.github.com/en/rest/reference/repos/#get-a-release) object.",
      "properties": {
        "assets": {
          "items": {
            "$ref": "#/definitions/release-asset"
          },
          "type": "array"
        },
        "assets_url": {
          "format": "uri",
          "type": "string"
        },
        "author": {
          "$ref": "#/definitions/user"
        },
        "body": {
          "type": "string"
        },
        "created_at": {
          "format": "date-time",
          "type": [
            "string",
            "null"
          ]
        },
        "discussion_url": {
          "format": "uri",
          "type": "string"
        },
        "draft": {
          "description": "Wether the release is a draft or published",
          "type": "boolean"
        },
        "html_url": {
          "format": "uri",
          "type": "string"
        },
        "id": {
          "type": "integer"
        },
        "mentions_count": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "node_id": {
          "type": "string"
        },
        "prerelease": {
          "description": "Whether the release is identified as a prerelease or a full release.",
          "type": "boolean"
        },
        "published_at": {
          "format": "date-time",
          "type": [
            "string",
            "null"
          ]
        },
        "reactions": {
          "$ref": "#/definitions/reactions"
        },
        "tag_name": {
          "description": "The name of the tag.",
          "type": "string"
        },
        "tarball_url": {
          "format": "uri",
          "type": [
            "string",
            "null"
          ]
        },
        "target_commitish": {
          "description": "Specifies the commitish value that determines where the Git tag is created from.",
          "type": "string"
        },
        "upload_url": {
          "format": "uri-template",
          "type": "string"
        },
        "url": {
          "format": "uri",
          "type": "string"
        },
        "zipball_url": {
          "format": "uri",
          "type": [
            "string",
            "null"
          ]
        }
      },
      "required": [
        "url",
        "assets_url",
        "upload_url",
        "html_url",
        "id",
        "node_id",
        "tag_name",
        "target_commitish",
        "name",
        "draft",
        "author",
        "prerelease",
        "created_at",
        "published_at",
        "assets",
        "tarball_url",
        "zipball_url",
        "body"
      ],
      "title": "Release",
      "type": "object"
    },
    "release$created": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "additionalProperties": false,
      "properties": {
        "action": {
          "enum": [
            "created"
          ],
          "type": "string"
        },
        "installation": {
          "$ref": "#/definitions/installation-lite"
        },
        "organization": {
          "$ref": "#/definitions/organization"
        },
        "release": {
          "$ref": "#/definitions/release"
        },
        "repository": {
          "$ref": "#/definitions/repository"
        },
        "sender": {
          "$ref": "#/definitions/user"
        }
      },
      "required": [
        "action",
        "release",
        "repository",
        "sender"
      ],
      "title": "release created event",
      "type": "object"
    },
    "release$deleted": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "additionalProperties": false,
      "properties": {
        "action": {
          "enum": [
            "deleted"
          ],
          "type": "string"
        },
        "installation": {
          "$ref": "#/definitions/installation-lite"
        },
        "organization": {
          "$ref": "#/definitions/organization"
        },
        "release": {
          "$ref": "#/definitions/release"
        },
        "repository": {
          "$ref": "#/definitions/repository"
        },
        "sender": {
          "$ref": "#/definitions/user"
        }
      },
      "required": [
        "action",
        "release",
        "repository",
        "sender"
      ],
      "title": "release deleted event",
      "type": "object"
    },
    "release$edited": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "additionalProperties": false,
      "properties": {
        "action": {
          "enum": [
            "edited"
          ],
          "type": "string"
        },
        "changes": {
          "additionalProperties": false,
          "properties": {
            "body": {
              "additionalProperties": false,
              "properties": {
                "from": {
                  "description": "The previous version of the body if the action was `edited`.",
                  "type": "string"
                }
              },
              "required": [
                "from"
              ],
              "type": "object"
            },
            "name": {
              "additionalProperties": false,
              "properties": {
                "from": {
                  "description": "The previous version of the name if the action was `edited`.",
                  "type": "string"
                }
              },
              "required": [
                "from"
              ],
              "type": "object"
            }
          },
          "type": "object"
        },
        "installation": {
          "$ref": "#/definitions/installation-lite"
        },
        "organization": {
          "$ref": "#/definitions/organization"
        },
        "release": {
          "$ref": "#/definitions/release"
        },
        "repository": {
          "$ref": "#/definitions/repository"
        },
        "sender": {
          "$ref": "#/definitions/user"
        }
      },
      "required": [
        "action",
        "changes",
        "release",
        "repository",
        "sender"
      ],
      "title": "release edited event",
      "type": "object"
    },
    "release$prereleased": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "additionalProperties": false,
      "properties": {
        "action": {
          "enum": [
            "prereleased"
          ],
          "type": "string"
        },
        "installation": {
          "$ref": "#/definitions/installation-lite"
        },
        "organization": {
          "$ref": "#/definitions/organization"
        },
        "release": {
          "allOf": [
            {
              "$ref": "#/definitions/release"
            },
            {
              "properties": {
                "prerelease": {
                  "description": "Whether the release is identified as a prerelease or a full release.",
                  "enum": [
                    true
                  ],
                  "type": "boolean"
                }
              },
              "required": [
                "prerelease"
              ],
              "tsAdditionalProperties": false,
              "type": "object"
            }
          ]
        },
        "repository": {
          "$ref": "#/definitions/repository"
        },
        "sender": {
          "$ref": "#/definitions/user"
        }
      },
      "required": [
        "action",
        "release",
        "repository",
        "sender"
      ],
      "title": "release prereleased event",
      "type": "object"
    },
    "release$published": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "additionalProperties": false,
      "properties": {
        "action": {
          "enum": [
            "published"
          ],
          "type": "string"
        },
        "installation": {
          "$ref": "#/definitions/installation-lite"
        },
        "organization": {
          "$ref": "#/definitions/organization"
        },
        "release": {
          "allOf": [
            {
              "$ref": "#/definitions/release"
            },
            {
              "properties": {
                "published_at": {
                  "format": "date-time",
                  "type": "string"
                }
              },
              "required": [
                "published_at"
              ],
              "tsAdditionalProperties": false,
              "type": "object"
            }
          ]
        },
        "repository": {
          "$ref": "#/definitions/repository"
        },
        "sender": {
          "$ref": "#/definitions/user"
        }
      },
      "required": [
        "action",
        "release",
        "repository",
        "sender"
      ],
      "title": "release published event",
      "type": "object"
    },
    "release$released": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "additionalProperties": false,
      "properties": {
        "action": {
          "enum": [
            "released"
          ],
          "type": "string"
        },
        "installation": {
          "$ref": "#/definitions/installation-lite"
        },
        "organization": {
          "$ref": "#/definitions/organization"
        },
        "release": {
          "$ref": "#/definitions/release"
        },
        "repository": {
          "$ref": "#/definitions/repository"
        },
        "sender": {
          "$ref": "#/definitions/user"
        }
      },
      "required": [
        "action",
        "release",
        "repository",
        "sender"
      ],
      "title": "release released event",
      "type": "object"
    },
    "release$unpublished": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "additionalProperties": false,
      "properties": {
        "action": {
          "enum": [
            "unpublished"
          ],
          "type": "string"
        },
        "installation": {
          "$ref": "#/definitions/installation-lite"
        },
        "organization": {
          "$ref": "#/definitions/organization"
        },
        "release": {
          "allOf": [
            {
              "$ref": "#/definitions/release"
            },
            {
              "properties": {
                "published_at": {
                  "type": "null"
                }
              },
              "required": [
                "published_at"
              ],
              "tsAdditionalProperties": false,
              "type": "object"
            }
          ]
        },
        "repository": {
          "$ref": "#/definitions/repository"
        },
        "sender": {
          "$ref": "#/definitions/user"
        }
      },
      "required": [
        "action",
        "release",
        "repository",
        "sender"
      ],
      "title": "release unpublished event",
      "type": "object"
    },
    "release-asset": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "additionalProperties": false,
      "description": "Data related to a release.",
      "properties": {
        "browser_download_url": {
          "format": "uri",
          "type": "string"
        },
        "content_type": {
          "type": "string"
        },
        "created_at": {
          "format": "date-time",
          "type": "string"
        },
        "download_count": {
          "type": "integer"
        },
        "id": {
          "type": "integer"
        },
        "label": {
          "type": [
            "string",
            "null"
          ]
        },
        "name": {
          "description": "The file name of the asset.",
          "type": "string"
        },
        "node_id": {
          "type": "string"
        },
        "size": {
          "type": "integer"
        },
        "state": {
          "description": "State of the release asset.",
          "enum": [
            "uploaded"
          ],
          "type": "string"
        },
        "updated_at": {
          "format": "date-time",
          "type": "string"
        },
        "uploader": {
          "$ref": "#/definitions/user"
        },
        "url": {
          "format": "uri",
          "type": "string"
        }
      },
      "required": [
        "url",
        "browser_download_url",
        "id",
        "node_id",
        "name",
        "label",
        "state",
        "content_type",
        "size",
        "download_count",
        "created_at",
        "updated_at"
      ],
      "title": "Release Asset",
      "type": "object"
    },
    "release_event": {
      "oneOf": [
        {
          "$ref": "#/definitions/release$created"
        },
        {
          "$ref": "#/definitions/release$deleted"
        },
        {
          "$ref": "#/definitions/release$edited"
        },
        {
          "$ref": "#/definitions/release$prereleased"
        },
        {
          "$ref": "#/definitions/release$published"
        },
        {
          "$ref": "#/definitions/release$released"
        },
        {
          "$ref": "#/definitions/release$unpublished"
        }
      ]
    },
    "repo-ref": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "additionalProperties": false,
      "properties": {
        "id": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "url": {
          "format": "uri",
          "type": "string"
        }
      },
      "required": [
        "id",
        "url",
        "name"
      ],
      "title": "Repo Ref",
      "type": "object"
    },
    "repository": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "additionalProperties": false,
      "description": "A git repository",
      "properties": {
        "allow_auto_merge": {
          "default": false,
          "description": "Whether to allow auto-merge for pull requests.",
          "type": "boolean"
        },
        "allow_forking": {
          "description": "Whether to allow private forks",
          "type": "boolean"
        },
        "allow_merge_commit": {
          "default": true,
          "description": "Whether to allow merge commits for pull requests.",
          "type": "boolean"
        },
        "allow_rebase_merge": {
          "default": true,
          "description": "Whether to allow rebase merges for pull requests.",
          "type": "boolean"
        },
        "allow_squash_merge": {
          "default": true,
          "description": "Whether to allow squash merges for pull requests.",
          "type": "boolean"
        },
        "allow_update_branch": {
          "type": "boolean"
        },
        "archive_url": {
          "format": "uri-template",
          "type": "string"
        },
        "archived": {
          "default": false,
          "description": "Whether the repository is archived.",
          "type": "boolean"
        },
        "assignees_url": {
          "format": "uri-template",
          "type": "string"
        },
        "blobs_url": {
          "format": "uri-template",
          "type": "string"
        },
        "branches_url": {
          "format": "uri-template",
          "type": "string"
        },
        "clone_url": {
          "format": "uri",
          "type": "string"
        },
        "collaborators_url": {
          "format": "uri-template",
          "type": "string"
        },
        "comments_url": {
          "format": "uri-template",
          "type": "string"
        },
        "commits_url": {
          "format": "uri-template",
          "type": "string"
        },
        "compare_url": {
          "format": "uri-template",
          "type": "string"
        },
        "contents_url": {
          "format": "uri-template",
          "type": "string"
        },
        "contributors_url": {
          "format": "uri",
          "type": "string"
        },
        "created_at": {
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "format": "date-time",
              "type": "string"
            }
          ]
        },
        "default_branch": {
          "description": "The default branch of the repository.",
          "type": "string"
        },
        "delete_branch_on_merge": {
          "default": false,
          "description": "Whether to delete head branches when pull requests are merged",
          "type": "boolean"
        },
        "deployments_url": {
          "format": "uri",
          "type": "string"
        },
        "description": {
          "type": [
            "string",
            "null"
          ]
        },
        "disabled": {
          "description": "Returns whether or not this repository is disabled.",
          "type": "boolean"
        },
        "downloads_url": {
          "format": "uri",
          "type": "string"
        },
        "events_url": {
          "format": "uri",
          "type": "string"
        },
        "fork": {
          "type": "boolean"
        },
        "forks": {
          "type": "integer"
        },
        "forks_count": {
          "type": "integer"
        },
        "forks_url": {
          "format": "uri",
          "type": "string"
        },
        "full_name": {
          "type": "string"
        },
        "git_commits_url": {
          "format": "uri-template",
          "type": "string"
        },
        "git_refs_url": {
          "format": "uri-template",
          "type": "string"
        },
        "git_tags_url": {
          "format": "uri-template",
          "type": "string"
        },
        "git_url": {
          "format": "uri",
          "type": "string"
        },
        "has_downloads": {
          "default": true,
          "description": "Whether downloads are enabled.",
          "type": "boolean"
        },
        "has_issues": {
          "default": true,
          "description": "Whether issues are enabled.",
          "type": "boolean"
        },
        "has_pages": {
          "type": "boolean"
        },
        "has_projects": {
          "default": true,
          "description": "Whether projects are enabled.",
          "type": "boolean"
        },
        "has_wiki": {
          "default": true,
          "description": "Whether the wiki is enabled.",
          "type": "boolean"
        },
        "homepage": {
          "type": [
            "string",
            "null"
          ]
        },
        "hooks_url": {
          "format": "uri",
          "type": "string"
        },
        "html_url": {
          "format": "uri",
          "type": "string"
        },
        "id": {
          "description": "Unique identifier of the repository",
          "type": "integer"
        },
        "is_template": {
          "type": "boolean"
        },
        "issue_comment_url": {
          "format": "uri-template",
          "type": "string"
        },
        "issue_events_url": {
          "format": "uri-template",
          "type": "string"
        },
        "issues_url": {
          "format": "uri-template",
          "type": "string"
        },
        "keys_url": {
          "format": "uri-template",
          "type": "string"
        },
        "labels_url": {
          "format": "uri-template",
          "type": "string"
        },
        "language": {
          "type": [
            "string",
            "null"
          ]
        },
        "languages_url": {
          "format": "uri",
          "type": "string"
        },
        "license": {
          "oneOf": [
            {
              "$ref": "#/definitions/license"
            },
            {
              "type": "null"
            }
          ]
        },
        "master_branch": {
          "type": "string"
        },
        "merges_url": {
          "format": "uri",
          "type": "string"
        },
        "milestones_url": {
          "format": "uri-template",
          "type": "string"
        },
        "mirror_url": {
          "format": "uri",
          "type": [
            "string",
            "null"
          ]
        },
        "name": {
          "description": "The name of the repository.",
          "type": "string"
        },
        "node_id": {
          "type": "string"
        },
        "notifications_url": {
          "format": "uri-template",
          "type": "string"
        },
        "open_issues": {
          "type": "integer"
        },
        "open_issues_count": {
          "type": "integer"
        },
        "organization": {
          "type": "string"
        },
        "owner": {
          "$ref": "#/definitions/user"
        },
        "permissions": {
          "additionalProperties": false,
          "properties": {
            "admin": {
              "type": "boolean"
            },
            "maintain": {
              "type": "boolean"
            },
            "pull": {
              "type": "boolean"
            },
            "push": {
              "type": "boolean"
            },
            "triage": {
              "type": "boolean"
            }
          },
          "required": [
            "pull",
            "push",
            "admin"
          ],
          "type": "object"
        },
        "private": {
          "description": "Whether the repository is private or public.",
          "type": "boolean"
        },
        "public": {
          "type": "boolean"
        },
        "pulls_url": {
          "format": "uri-template",
          "type": "string"
        },
        "pushed_at": {
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "format": "date-time",
              "type": "string"
            },
            {
              "type": "null"
            }
          ]
        },
        "releases_url": {
          "format": "uri-template",
          "type": "string"
        },
        "size": {
          "type": "integer"
        },
        "ssh_url": {
          "type": "string"
        },
        "stargazers": {
          "type": "integer"
        },
        "stargazers_count": {
          "type": "integer"
        },
        "stargazers_url": {
          "format": "uri",
          "type": "string"
        },
        "statuses_url": {
          "format": "uri-template",
          "type": "string"
        },
        "subscribers_url": {
          "format": "uri",
          "type": "string"
        },
        "subscription_url": {
          "format": "uri",
          "type": "string"
        },
        "svn_url": {
          "format": "uri",
          "type": "string"
        },
        "tags_url": {
          "format": "uri",
          "type": "string"
        },
        "teams_url": {
          "format": "uri",
          "type": "string"
        },
        "topics": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "trees_url": {
          "format": "uri-template",
          "type": "string"
        },
        "updated_at": {
          "format": "date-time",
          "type": "string"
        },
        "url": {
          "format": "uri",
          "type": "string"
        },
        "use_squash_pr_title_as_default": {
          "type": "boolean"
        },
        "visibility": {
          "enum": [
            "public",
            "private",
            "internal"
          ],
          "type": "string"
        },
        "watchers": {
          "type": "integer"
        },
        "watchers_count": {
          "type": "integer"
        }
      },
      "required": [
        "id",
        "node_id",
        "name",
        "full_name",
        "private",
        "owner",
        "html_url",
        "description",
        "fork",
        "url",
        "forks_url",
        "keys_url",
        "collaborators_url",
        "teams_url",
        "hooks_url",
        "issue_events_url",
        "events_url",
        "assignees_url",
        "branches_url",
        "tags_url",
        "blobs_url",
        "git_tags_url",
        "git_refs_url",
        "trees_url",
        "statuses_url",
        "languages_url",
        "stargazers_url",
        "contributors_url",
        "subscribers_url",
        "subscription_url",
        "commits_url",
        "git_commits_url",
        "comments_url",
        "issue_comment_url",
        "contents_url",
        "compare_url",
        "merges_url",
        "archive_url",
        "downloads_url",
        "issues_url",
        "pulls_url",
        "milestones_url",
        "notifications_url",
        "labels_url",
        "releases_url",
        "deployments_url",
        "created_at",
        "updated_at",
        "pushed_at",
        "git_url",
        "ssh_url",
        "clone_url",
        "svn_url",
        "homepage",
        "size",
        "stargazers_count",
        "watchers_count",
        "language",
        "has_issues",
        "has_projects",
        "has_downloads",
        "has_wiki",
        "has_pages",
        "forks_count",
        "mirror_url",
        "archived",
        "open_issues_count",
        "license",
        "forks",
        "open_issues",
        "watchers",
        "default_branch",
        "is_template",
        "topics",
        "visibility"
      ],
      "title": "Repository",
      "type": "object"
    },
    "repository$archived": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "additionalProperties": false,
      "properties": {
        "action": {
          "enum": [
            "archived"
          ],
          "type": "string"
        },
        "installation": {
          "$ref": "#/definitions/installation-lite"
        },
        "organization": {
          "$ref": "#/definitions/organization"
        },
        "repository": {
          "allOf": [
            {
              "$ref": "#/definitions/repository"
            },
            {
              "properties": {
                "archived": {
                  "default": false,
                  "description": "Whether the repository is archived.",
                  "enum": [
                    true
                  ],
                  "type": "boolean"
                }
              },
              "required": [
                "archived"
              ],
              "tsAdditionalProperties": false,
              "type": "object"
            }
          ]
        },
        "sender": {
          "$ref": "#/definitions/user"
        }
      },
      "required": [
        "action",
        "repository",
        "sender"
      ],
      "title": "repository archived event",
      "type": "object"
    },
    "repository$created": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "additionalProperties": false,
      "properties": {
        "action": {
          "enum": [
            "created"
          ],
          "type": "string"
        },
        "installation": {
          "$ref": "#/definitions/installation-lite"
        },
        "organization": {
          "$ref": "#/definitions/organization"
        },
        "repository": {
          "$ref": "#/definitions/repository"
        },
        "sender": {
          "$ref": "#/definitions/user"
        }
      },
      "required": [
        "action",
        "repository",
        "sender"
      ],
      "title": "repository created event",
      "type": "object"
    },
    "repository$deleted": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "additionalProperties": false,
      "properties": {
        "action": {
          "enum": [
            "deleted"
          ],
          "type": "string"
        },
        "installation": {
          "$ref": "#/definitions/installation-lite"
        },
        "organization": {
          "$ref": "#/definitions/organization"
        },
        "repository": {
          "$ref": "#/definitions/repository"
        },
        "sender": {
          "$ref": "#/definitions/user"
        }
      },
      "required": [
        "action",
        "repository",
        "sender"
      ],
      "title": "repository deleted event",
      "type": "object"
    },
    "repository$edited": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "additionalProperties": false,
      "properties": {
        "action": {
          "enum": [
            "edited"
          ],
          "type": "string"
        },
        "changes": {
          "additionalProperties": false,
          "properties": {
            "default_branch": {
              "additionalProperties": false,
              "properties": {
                "from": {
                  "type": "string"
                }
              },
              "required": [
                "from"
              ],
              "type": "object"
            },
            "description": {
              "additionalProperties": false,
              "properties": {
                "from": {
                  "type": [
                    "string",
                    "null"
                  ]
                }
              },
              "required": [
                "from"
              ],
              "type": "object"
            },
            "homepage": {
              "additionalProperties": false,
              "properties": {
                "from": {
                  "type": [
                    "string",
                    "null"
                  ]
                }
              },
              "required": [
                "from"
              ],
              "type": "object"
            }
          },
          "type": "object"
        },
        "installation": {
          "$ref": "#/definitions/installation-lite"
        },
        "organization": {
          "$ref": "#/definitions/organization"
        },
        "repository": {
          "$ref": "#/definitions/repository"
        },
        "sender": {
          "$ref": "#/definitions/user"
        }
      },
      "required": [
        "action",
        "changes",
        "repository",
        "sender"
      ],
      "title": "repository edited event",
      "type": "object"
    },
    "repository$privatized": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "additionalProperties": false,
      "properties": {
        "action": {
          "enum": [
            "privatized"
          ],
          "type": "string"
        },
        "installation": {
          "$ref": "#/definitions/installation-lite"
        },
        "organization": {
          "$ref": "#/definitions/organization"
        },
        "repository": {
          "allOf": [
            {
              "$ref": "#/definitions/repository"
            },
            {
              "properties": {
                "private": {
                  "description": "Whether the repository is private or public.",
                  "enum": [
                    true
                  ],
                  "type": "boolean"
                }
              },
              "required": [
                "private"
              ],
              "tsAdditionalProperties": false,
              "type": "object"
            }
          ]
        },
        "sender": {
          "$ref": "#/definitions/user"
        }
      },
      "required": [
        "action",
        "repository",
        "sender"
      ],
      "title": "repository privatized event",
      "type": "object"
    },
    "repository$publicized": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "additionalProperties": false,
      "properties": {
        "action": {
          "enum": [
            "publicized"
          ],
          "type": "string"
        },
        "installation": {
          "$ref": "#/definitions/installation-lite"
        },
        "organization": {
          "$ref": "#/definitions/organization"
        },
        "repository": {
          "allOf": [
            {
              "$ref": "#/definitions/repository"
            },
            {
              "properties": {
                "private": {
                  "description": "Whether the repository is private or public.",
                  "enum": [
                    false
                  ],
                  "type": "boolean"
                }
              },
              "required": [
                "private"
              ],
              "tsAdditionalProperties": false,
              "type": "object"
            }
          ]
        },
        "sender": {
          "$ref": "#/definitions/user"
        }
      },
      "required": [
        "action",
        "repository",
        "sender"
      ],
      "title": "repository publicized event",
      "type": "object"
    },
    "repository$renamed": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "additionalProperties": false,
      "properties": {
        "action": {
          "enum": [
            "renamed"
          ],
          "type": "string"
        },
        "changes": {
          "additionalProperties": false,
          "properties": {
            "repository": {
              "additionalProperties": false,
              "properties": {
                "name": {
                  "additionalProperties": false,
                  "properties": {
                    "from": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "from"
                  ],
                  "type": "object"
                }
              },
              "required": [
                "name"
              ],
              "type": "object"
            }
          },
          "required": [
            "repository"
          ],
          "type": "object"
        },
        "installation": {
          "$ref": "#/definitions/installation-lite"
        },
        "organization": {
          "$ref": "#/definitions/organization"
        },
        "repository": {
          "$ref": "#/definitions/repository"
        },
        "sender": {
          "$ref": "#/definitions/user"
        }
      },
      "required": [
        "action",
        "changes",
        "repository",
        "sender"
      ],
      "title": "repository renamed event",
      "type": "object"
    },
    "repository$transferred": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "additionalProperties": false,
      "properties": {
        "action": {
          "enum": [
            "transferred"
          ],
          "type": "string"
        },
        "changes": {
          "additionalProperties": false,
          "properties": {
            "owner": {
              "additionalProperties": false,
              "properties": {
                "from": {
                  "additionalProperties": false,
                  "properties": {
                    "user": {
                      "$ref": "#/definitions/user"
                    }
                  },
                  "type": "object"
                }
              },
              "required": [
                "from"
              ],
              "type": "object"
            }
          },
          "required": [
            "owner"
          ],
          "type": "object"
        },
        "installation": {
          "$ref": "#/definitions/installation-lite"
        },
        "organization": {
          "$ref": "#/definitions/organization"
        },
        "repository": {
          "$ref": "#/definitions/repository"
        },
        "sender": {
          "$ref": "#/definitions/user"
        }
      },
      "required": [
        "action",
        "changes",
        "repository",
        "sender"
      ],
      "title": "repository transferred event",
      "type": "object"
    },
    "repository$unarchived": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "additionalProperties": false,
      "properties": {
        "action": {
          "enum": [
            "unarchived"
          ],
          "type": "string"
        },
        "installation": {
          "$ref": "#/definitions/installation-lite"
        },
        "organization": {
          "$ref": "#/definitions/organization"
        },
        "repository": {
          "allOf": [
            {
              "$ref": "#/definitions/repository"
            },
            {
              "properties": {
                "archived": {
                  "default": false,
                  "description": "Whether the repository is archived.",
                  "enum": [
                    false
                  ],
                  "type": "boolean"
                }
              },
              "required": [
                "archived"
              ],
              "tsAdditionalProperties": false,
              "type": "object"
            }
          ]
        },
        "sender": {
          "$ref": "#/definitions/user"
        }
      },
      "required": [
        "action",
        "repository",
        "sender"
      ],
      "title": "repository unarchived event",
      "type": "object"
    },
    "repository-lite": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "additionalProperties": false,
      "properties": {
        "archive_url": {
          "format": "uri-template",
          "type": "string"
        },
        "assignees_url": {
          "format": "uri-template",
          "type": "string"
        },
        "blobs_url": {
          "format": "uri-template",
          "type": "string"
        },
        "branches_url": {
          "format": "uri-template",
          "type": "string"
        },
        "collaborators_url": {
          "format": "uri-template",
          "type": "string"
        },
        "comments_url": {
          "format": "uri-template",
          "type": "string"
        },
        "commits_url": {
          "format": "uri-template",
          "type": "string"
        },
        "compare_url": {
          "format": "uri-template",
          "type": "string"
        },
        "contents_url": {
          "format": "uri-template",
          "type": "string"
        },
        "contributors_url": {
          "format": "uri",
          "type": "string"
        },
        "deployments_url": {
          "format": "uri",
          "type": "string"
        },
        "description": {
          "type": [
            "string",
            "null"
          ]
        },
        "downloads_url": {
          "format": "uri",
          "type": "string"
        },
        "events_url": {
          "format": "uri",
          "type": "string"
        },
        "fork": {
          "type": "boolean"
        },
        "forks_url": {
          "format": "uri",
          "type": "string"
        },
        "full_name": {
          "type": "string"
        },
        "git_commits_url": {
          "format": "uri-template",
          "type": "string"
        },
        "git_refs_url": {
          "format": "uri-template",
          "type": "string"
        },
        "git_tags_url": {
          "format": "uri-template",
          "type": "string"
        },
        "hooks_url": {
          "format": "uri",
          "type": "string"
        },
        "html_url": {
          "format": "uri",
          "type": "string"
        },
        "id": {
          "description": "Unique identifier of the repository",
          "type": "integer"
        },
        "issue_comment_url": {
          "format": "uri-template",
          "type": "string"
        },
        "issue_events_url": {
          "format": "uri-template",
          "type": "string"
        },
        "issues_url": {
          "format": "uri-template",
          "type": "string"
        },
        "keys_url": {
          "format": "uri-template",
          "type": "string"
        },
        "labels_url": {
          "format": "uri-template",
          "type": "string"
        },
        "languages_url": {
          "format": "uri",
          "type": "string"
        },
        "merges_url": {
          "format": "uri",
          "type": "string"
        },
        "milestones_url": {
          "format": "uri-template",
          "type": "string"
        },
        "name": {
          "description": "The name of the repository.",
          "type": "string"
        },
        "node_id": {
          "type": "string"
        },
        "notifications_url": {
          "format": "uri-template",
          "type": "string"
        },
        "owner": {
          "$ref": "#/definitions/user"
        },
        "private": {
          "description": "Whether the repository is private or public.",
          "type": "boolean"
        },
        "pulls_url": {
          "format": "uri-template",
          "type": "string"
        },
        "releases_url": {
          "format": "uri-template",
          "type": "string"
        },
        "stargazers_url": {
          "format": "uri",
          "type": "string"
        },
        "statuses_url": {
          "format": "uri-template",
          "type": "string"
        },
        "subscribers_url": {
          "format": "uri",
          "type": "string"
        },
        "subscription_url": {
          "format": "uri",
          "type": "string"
        },
        "tags_url": {
          "format": "uri",
          "type": "string"
        },
        "teams_url": {
          "format": "uri",
          "type": "string"
        },
        "trees_url": {
          "format": "uri-template",
          "type": "string"
        },
        "url": {
          "format": "uri",
          "type": "string"
        }
      },
      "required": [
        "archive_url",
        "assignees_url",
        "blobs_url",
        "branches_url",
        "collaborators_url",
        "comments_url",
        "commits_url",
        "compare_url",
        "contents_url",
        "contributors_url",
        "deployments_url",
        "description",
        "downloads_url",
        "events_url",
        "fork",
        "forks_url",
        "full_name",
        "git_commits_url",
        "git_refs_url",
        "git_tags_url",
        "hooks_url",
        "html_url",
        "id",
        "issue_comment_url",
        "issue_events_url",
        "issues_url",
        "keys_url",
        "labels_url",
        "languages_url",
        "merges_url",
        "milestones_url",
        "name",
        "node_id",
        "notifications_url",
        "owner",
        "private",
        "pulls_url",
        "releases_url",
        "stargazers_url",
        "statuses_url",
        "subscribers_url",
        "subscription_url",
        "tags_url",
        "teams_url",
        "trees_url",
        "url"
      ],
      "title": "Repository Lite",
      "type": "object"
    },
    "repository-vulnerability-alert-alert": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "additionalProperties": false,
      "description": "The security alert of the vulnerable dependency.",
      "properties": {
        "affected_package_name": {
          "type": "string"
        },
        "affected_range": {
          "type": "string"
        },
        "created_at": {
          "type": "string"
        },
        "dismiss_reason": {
          "type": "string"
        },
        "dismissed_at": {
          "type": "string"
        },
        "dismisser": {
          "$ref": "#/definitions/user"
        },
        "external_identifier": {
          "type": "string"
        },
        "external_reference": {
          "format": "uri",
          "type": "string"
        },
        "fix_reason": {
          "type": "string"
        },
        "fixed_at": {
          "format": "date-time",
          "type": "string"
        },
        "fixed_in": {
          "type": "string"
        },
        "ghsa_id": {
          "type": "string"
        },
        "id": {
          "type": "integer"
        },
        "node_id": {
          "type": "string"
        },
        "number": {
          "type": "integer"
        },
        "severity": {
          "type": "string"
        },
        "state": {
          "enum": [
            "open",
            "dismissed",
            "fixed"
          ],
          "type": "string"
        }
      },
      "required": [
        "id",
        "number",
        "node_id",
        "state",
        "affected_range",
        "affected_package_name",
        "ghsa_id",
        "severity",
        "external_reference",
        "external_identifier",
        "fixed_in",
        "created_at"
      ],
      "title": "Repository Vulnerability Alert Alert",
      "type": "object"
    },
    "repository_dispatch$event": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "additionalProperties": false,
      "properties": {
        "action": {
          "type": "string"
        },
        "branch": {
          "type": "string"
        },
        "client_payload": {
          "additionalProperties": true,
          "properties": {},
          "type": "object"
        },
        "installation": {
          "$ref": "#/definitions/installation-lite"
        },
        "organization": {
          "$ref": "#/definitions/organization"
        },
        "repository": {
          "$ref": "#/definitions/repository"
        },
        "sender": {
          "$ref": "#/definitions/user"
        }
      },
      "required": [
        "action",
        "branch",
        "client_payload",
        "repository",
        "sender",
        "installation"
      ],
      "title": "repository_dispatch event",
      "type": "object"
    },
    "repository_event": {
      "oneOf": [
        {
          "$ref": "#/definitions/repository$archived"
        },
        {
          "$ref": "#/definitions/repository$created"
        },
        {
          "$ref": "#/definitions/repository$deleted"
        },
        {
          "$ref": "#/definitions/repository$edited"
        },
        {
          "$ref": "#/definitions/repository$privatized"
        },
        {
          "$ref": "#/definitions/repository$publicized"
        },
        {
          "$ref": "#/definitions/repository$renamed"
        },
        {
          "$ref": "#/definitions/repository$transferred"
        },
        {
          "$ref": "#/definitions/repository$unarchived"
        }
      ]
    },
    "repository_import$event": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "additionalProperties": false,
      "properties": {
        "installation": {
          "$ref": "#/definitions/installation-lite"
        },
        "organization": {
          "$ref": "#/definitions/organization"
        },
        "repository": {
          "$ref": "#/definitions/repository"
        },
        "sender": {
          "$ref": "#/definitions/user"
        },
        "status": {
          "enum": [
            "success",
            "cancelled",
            "failure"
          ],
          "type": "string"
        }
      },
      "required": [
        "status",
        "repository",
        "sender"
      ],
      "title": "repository_import event",
      "type": "object"
    },
    "repository_vulnerability_alert$create": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "additionalProperties": false,
      "properties": {
        "action": {
          "enum": [
            "create"
          ],
          "type": "string"
        },
        "alert": {
          "allOf": [
            {
              "$ref": "#/definitions/repository-vulnerability-alert-alert"
            },
            {
              "properties": {
                "state": {
                  "enum": [
                    "open"
                  ],
                  "type": "string"
                }
              },
              "required": [
                "state"
              ],
              "tsAdditionalProperties": false,
              "type": "object"
            }
          ]
        },
        "organization": {
          "$ref": "#/definitions/organization"
        },
        "repository": {
          "$ref": "#/definitions/repository"
        },
        "sender": {
          "$ref": "#/definitions/github-org"
        }
      },
      "required": [
        "action",
        "alert",
        "repository",
        "sender"
      ],
      "title": "repository_vulnerability_alert create event",
      "type": "object"
    },
    "repository_vulnerability_alert$dismiss": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "additionalProperties": false,
      "properties": {
        "action": {
          "enum": [
            "dismiss"
          ],
          "type": "string"
        },
        "alert": {
          "allOf": [
            {
              "$ref": "#/definitions/repository-vulnerability-alert-alert"
            },
            {
              "properties": {
                "dismiss_reason": {
                  "type": "string"
                },
                "dismissed_at": {
                  "type": "string"
                },
                "dismisser": {
                  "$ref": "#/definitions/user"
                },
                "state": {
                  "enum": [
                    "dismissed"
                  ],
                  "type": "string"
                }
              },
              "required": [
                "dismisser",
                "dismiss_reason",
                "dismissed_at",
                "state"
              ],
              "tsAdditionalProperties": false,
              "type": "object"
            }
          ]
        },
        "organization": {
          "$ref": "#/definitions/organization"
        },
        "repository": {
          "$ref": "#/definitions/repository"
        },
        "sender": {
          "$ref": "#/definitions/github-org"
        }
      },
      "required": [
        "action",
        "alert",
        "repository",
        "sender"
      ],
      "title": "repository_vulnerability_alert dismiss event",
      "type": "object"
    },
    "repository_vulnerability_alert$reopen": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "additionalProperties": false,
      "properties": {
        "action": {
          "enum": [
            "reopen"
          ],
          "type": "string"
        },
        "alert": {
          "allOf": [
            {
              "$ref": "#/definitions/repository-vulnerability-alert-alert"
            },
            {
              "properties": {
                "state": {
                  "enum": [
                    "open"
                  ],
                  "type": "string"
                }
              },
              "required": [
                "state"
              ],
              "tsAdditionalProperties": false,
              "type": "object"
            }
          ]
        },
        "organization": {
          "$ref": "#/definitions/organization"
        },
        "repository": {
          "$ref": "#/definitions/repository"
        },
        "sender": {
          "$ref": "#/definitions/github-org"
        }
      },
      "required": [
        "action",
        "alert",
        "repository",
        "sender"
      ],
      "title": "repository_vulnerability_alert reopen event",
      "type": "object"
    },
    "repository_vulnerability_alert$resolve": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "additionalProperties": false,
      "properties": {
        "action": {
          "enum": [
            "resolve"
          ],
          "type": "string"
        },
        "alert": {
          "allOf": [
            {
              "$ref": "#/definitions/repository-vulnerability-alert-alert"
            },
            {
              "properties": {
                "fix_reason": {
                  "type": "string"
                },
                "fixed_at": {
                  "format": "date-time",
                  "type": "string"
                },
                "state": {
                  "enum": [
                    "fixed"
                  ],
                  "type": "string"
                }
              },
              "required": [
                "state",
                "fixed_at",
                "fix_reason"
              ],
              "tsAdditionalProperties": false,
              "type": "object"
            }
          ]
        },
        "organization": {
          "$ref": "#/definitions/organization"
        },
        "repository": {
          "$ref": "#/definitions/repository"
        },
        "sender": {
          "$ref": "#/definitions/github-org"
        }
      },
      "required": [
        "action",
        "alert",
        "repository",
        "sender"
      ],
      "title": "repository_vulnerability_alert resolve event",
      "type": "object"
    },
    "repository_vulnerability_alert_event": {
      "oneOf": [
        {
          "$ref": "#/definitions/repository_vulnerability_alert$create"
        },
        {
          "$ref": "#/definitions/repository_vulnerability_alert$dismiss"
        },
        {
          "$ref": "#/definitions/repository_vulnerability_alert$reopen"
        },
        {
          "$ref": "#/definitions/repository_vulnerability_alert$resolve"
        }
      ]
    },
    "secret_scanning_alert$created": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "additionalProperties": false,
      "properties": {
        "action": {
          "enum": [
            "created"
          ],
          "type": "string"
        },
        "alert": {
          "additionalProperties": false,
          "description": "The secret scanning alert involved in the event.",
          "properties": {
            "number": {
              "type": "integer"
            },
            "resolution": {
              "type": "null"
            },
            "resolved_at": {
              "type": "null"
            },
            "resolved_by": {
              "type": "null"
            },
            "secret_type": {
              "type": "string"
            }
          },
          "required": [
            "number",
            "secret_type",
            "resolution",
            "resolved_by",
            "resolved_at"
          ],
          "type": "object"
        },
        "installation": {
          "$ref": "#/definitions/installation-lite"
        },
        "organization": {
          "$ref": "#/definitions/organization"
        },
        "repository": {
          "$ref": "#/definitions/repository"
        }
      },
      "required": [
        "action",
        "alert",
        "repository"
      ],
      "title": "secret_scanning_alert created event",
      "type": "object"
    },
    "secret_scanning_alert$reopened": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "additionalProperties": false,
      "properties": {
        "action": {
          "enum": [
            "reopened"
          ],
          "type": "string"
        },
        "alert": {
          "additionalProperties": false,
          "description": "The secret scanning alert involved in the event.",
          "properties": {
            "number": {
              "type": "integer"
            },
            "resolution": {
              "type": "null"
            },
            "resolved_at": {
              "type": "null"
            },
            "resolved_by": {
              "type": "null"
            },
            "secret_type": {
              "type": "string"
            }
          },
          "required": [
            "number",
            "secret_type",
            "resolution",
            "resolved_by",
            "resolved_at"
          ],
          "type": "object"
        },
        "installation": {
          "$ref": "#/definitions/installation-lite"
        },
        "organization": {
          "$ref": "#/definitions/organization"
        },
        "repository": {
          "$ref": "#/definitions/repository"
        },
        "sender": {
          "$ref": "#/definitions/user"
        }
      },
      "required": [
        "action",
        "alert",
        "repository",
        "sender"
      ],
      "title": "secret_scanning_alert reopened event",
      "type": "object"
    },
    "secret_scanning_alert$resolved": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "additionalProperties": false,
      "properties": {
        "action": {
          "enum": [
            "resolved"
          ],
          "type": "string"
        },
        "alert": {
          "additionalProperties": false,
          "description": "The secret scanning alert involved in the event.",
          "properties": {
            "number": {
              "type": "integer"
            },
            "resolution": {
              "enum": [
                "false_positive",
                "wontfix",
                "revoked",
                "used_in_tests"
              ],
              "type": "string"
            },
            "resolved_at": {
              "type": "string"
            },
            "resolved_by": {
              "$ref": "#/definitions/user"
            },
            "secret_type": {
              "type": "string"
            }
          },
          "required": [
            "number",
            "secret_type",
            "resolution",
            "resolved_by",
            "resolved_at"
          ],
          "type": "object"
        },
        "installation": {
          "$ref": "#/definitions/installation-lite"
        },
        "organization": {
          "$ref": "#/definitions/organization"
        },
        "repository": {
          "$ref": "#/definitions/repository"
        },
        "sender": {
          "$ref": "#/definitions/user"
        }
      },
      "required": [
        "action",
        "alert",
        "repository",
        "sender"
      ],
      "title": "secret_scanning_alert resolved event",
      "type": "object"
    },
    "secret_scanning_alert_event": {
      "oneOf": [
        {
          "$ref": "#/definitions/secret_scanning_alert$created"
        },
        {
          "$ref": "#/definitions/secret_scanning_alert$reopened"
        },
        {
          "$ref": "#/definitions/secret_scanning_alert$resolved"
        }
      ]
    },
    "security_advisory$performed": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "additionalProperties": false,
      "properties": {
        "action": {
          "enum": [
            "performed"
          ],
          "type": "string"
        },
        "security_advisory": {
          "additionalProperties": false,
          "description": "The details of the security advisory, including summary, description, and severity.",
          "properties": {
            "cvss": {
              "additionalProperties": false,
              "properties": {
                "score": {
                  "type": "number"
                },
                "vector_string": {
                  "type": [
                    "string",
                    "null"
                  ]
                }
              },
              "required": [
                "vector_string",
                "score"
              ],
              "type": "object"
            },
            "cwes": {
              "items": {
                "additionalProperties": false,
                "properties": {
                  "cwe_id": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  }
                },
                "required": [
                  "cwe_id",
                  "name"
                ],
                "type": "object"
              },
              "type": "array"
            },
            "description": {
              "type": "string"
            },
            "ghsa_id": {
              "type": "string"
            },
            "identifiers": {
              "items": {
                "additionalProperties": false,
                "properties": {
                  "type": {
                    "type": "string"
                  },
                  "value": {
                    "type": "string"
                  }
                },
                "required": [
                  "value",
                  "type"
                ],
                "type": "object"
              },
              "type": "array"
            },
            "published_at": {
              "type": "string"
            },
            "references": {
              "items": {
                "additionalProperties": false,
                "properties": {
                  "url": {
                    "format": "uri",
                    "type": "string"
                  }
                },
                "required": [
                  "url"
                ],
                "type": "object"
              },
              "type": "array"
            },
            "severity": {
              "type": "string"
            },
            "summary": {
              "type": "string"
            },
            "updated_at": {
              "type": "string"
            },
            "vulnerabilities": {
              "items": {
                "additionalProperties": false,
                "properties": {
                  "first_patched_version": {
                    "additionalProperties": false,
                    "properties": {
                      "identifier": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "identifier"
                    ],
                    "type": [
                      "object",
                      "null"
                    ]
                  },
                  "package": {
                    "additionalProperties": false,
                    "properties": {
                      "ecosystem": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "ecosystem",
                      "name"
                    ],
                    "type": "object"
                  },
                  "severity": {
                    "type": "string"
                  },
                  "vulnerable_version_range": {
                    "type": "string"
                  }
                },
                "required": [
                  "package",
                  "severity",
                  "vulnerable_version_range",
                  "first_patched_version"
                ],
                "type": "object"
              },
              "type": "array"
            },
            "withdrawn_at": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "required": [
            "cvss",
            "cwes",
            "ghsa_id",
            "summary",
            "description",
            "severity",
            "identifiers",
            "references",
            "published_at",
            "updated_at",
            "withdrawn_at",
            "vulnerabilities"
          ],
          "type": "object"
        }
      },
      "required": [
        "action",
        "security_advisory"
      ],
      "title": "security_advisory performed event",
      "type": "object"
    },
    "security_advisory$published": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "additionalProperties": false,
      "properties": {
        "action": {
          "enum": [
            "published"
          ],
          "type": "string"
        },
        "security_advisory": {
          "additionalProperties": false,
          "description": "The details of the security advisory, including summary, description, and severity.",
          "properties": {
            "cvss": {
              "additionalProperties": false,
              "properties": {
                "score": {
                  "type": "number"
                },
                "vector_string": {
                  "type": [
                    "string",
                    "null"
                  ]
                }
              },
              "required": [
                "vector_string",
                "score"
              ],
              "type": "object"
            },
            "cwes": {
              "items": {
                "additionalProperties": false,
                "properties": {
                  "cwe_id": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  }
                },
                "required": [
                  "cwe_id",
                  "name"
                ],
                "type": "object"
              },
              "type": "array"
            },
            "description": {
              "type": "string"
            },
            "ghsa_id": {
              "type": "string"
            },
            "identifiers": {
              "items": {
                "additionalProperties": false,
                "properties": {
                  "type": {
                    "type": "string"
                  },
                  "value": {
                    "type": "string"
                  }
                },
                "required": [
                  "value",
                  "type"
                ],
                "type": "object"
              },
              "type": "array"
            },
            "published_at": {
              "type": "string"
            },
            "references": {
              "items": {
                "additionalProperties": false,
                "properties": {
                  "url": {
                    "format": "uri",
                    "type": "string"
                  }
                },
                "required": [
                  "url"
                ],
                "type": "object"
              },
              "type": "array"
            },
            "severity": {
              "type": "string"
            },
            "summary": {
              "type": "string"
            },
            "updated_at": {
              "type": "string"
            },
            "vulnerabilities": {
              "items": {
                "additionalProperties": false,
                "properties": {
                  "first_patched_version": {
                    "additionalProperties": false,
                    "properties": {
                      "identifier": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "identifier"
                    ],
                    "type": [
                      "object",
                      "null"
                    ]
                  },
                  "package": {
                    "additionalProperties": false,
                    "properties": {
                      "ecosystem": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "ecosystem",
                      "name"
                    ],
                    "type": "object"
                  },
                  "severity": {
                    "type": "string"
                  },
                  "vulnerable_version_range": {
                    "type": "string"
                  }
                },
                "required": [
                  "package",
                  "severity",
                  "vulnerable_version_range",
                  "first_patched_version"
                ],
                "type": "object"
              },
              "type": "array"
            },
            "withdrawn_at": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "required": [
            "cvss",
            "cwes",
            "ghsa_id",
            "summary",
            "description",
            "severity",
            "identifiers",
            "references",
            "published_at",
            "updated_at",
            "withdrawn_at",
            "vulnerabilities"
          ],
          "type": "object"
        }
      },
      "required": [
        "action",
        "security_advisory"
      ],
      "title": "security_advisory published event",
      "type": "object"
    },
    "security_advisory$updated": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "additionalProperties": false,
      "properties": {
        "action": {
          "enum": [
            "updated"
          ],
          "type": "string"
        },
        "security_advisory": {
          "additionalProperties": false,
          "description": "The details of the security advisory, including summary, description, and severity.",
          "properties": {
            "cvss": {
              "additionalProperties": false,
              "properties": {
                "score": {
                  "type": "number"
                },
                "vector_string": {
                  "type": [
                    "string",
                    "null"
                  ]
                }
              },
              "required": [
                "vector_string",
                "score"
              ],
              "type": "object"
            },
            "cwes": {
              "items": {
                "additionalProperties": false,
                "properties": {
                  "cwe_id": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  }
                },
                "required": [
                  "cwe_id",
                  "name"
                ],
                "type": "object"
              },
              "type": "array"
            },
            "description": {
              "type": "string"
            },
            "ghsa_id": {
              "type": "string"
            },
            "identifiers": {
              "items": {
                "additionalProperties": false,
                "properties": {
                  "type": {
                    "type": "string"
                  },
                  "value": {
                    "type": "string"
                  }
                },
                "required": [
                  "value",
                  "type"
                ],
                "type": "object"
              },
              "type": "array"
            },
            "published_at": {
              "type": "string"
            },
            "references": {
              "items": {
                "additionalProperties": false,
                "properties": {
                  "url": {
                    "format": "uri",
                    "type": "string"
                  }
                },
                "required": [
                  "url"
                ],
                "type": "object"
              },
              "type": "array"
            },
            "severity": {
              "type": "string"
            },
            "summary": {
              "type": "string"
            },
            "updated_at": {
              "type": "string"
            },
            "vulnerabilities": {
              "items": {
                "additionalProperties": false,
                "properties": {
                  "first_patched_version": {
                    "additionalProperties": false,
                    "properties": {
                      "identifier": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "identifier"
                    ],
                    "type": [
                      "object",
                      "null"
                    ]
                  },
                  "package": {
                    "additionalProperties": false,
                    "properties": {
                      "ecosystem": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "ecosystem",
                      "name"
                    ],
                    "type": "object"
                  },
                  "severity": {
                    "type": "string"
                  },
                  "vulnerable_version_range": {
                    "type": "string"
                  }
                },
                "required": [
                  "package",
                  "severity",
                  "vulnerable_version_range",
                  "first_patched_version"
                ],
                "type": "object"
              },
              "type": "array"
            },
            "withdrawn_at": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "required": [
            "cvss",
            "cwes",
            "ghsa_id",
            "summary",
            "description",
            "severity",
            "identifiers",
            "references",
            "published_at",
            "updated_at",
            "withdrawn_at",
            "vulnerabilities"
          ],
          "type": "object"
        }
      },
      "required": [
        "action",
        "security_advisory"
      ],
      "title": "security_advisory updated event",
      "type": "object"
    },
    "security_advisory$withdrawn": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "additionalProperties": false,
      "properties": {
        "action": {
          "enum": [
            "withdrawn"
          ],
          "type": "string"
        },
        "security_advisory": {
          "additionalProperties": false,
          "description": "The details of the security advisory, including summary, description, and severity.",
          "properties": {
            "cvss": {
              "additionalProperties": false,
              "properties": {
                "score": {
                  "type": "number"
                },
                "vector_string": {
                  "type": [
                    "string",
                    "null"
                  ]
                }
              },
              "required": [
                "vector_string",
                "score"
              ],
              "type": "object"
            },
            "cwes": {
              "items": {
                "additionalProperties": false,
                "properties": {
                  "cwe_id": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  }
                },
                "required": [
                  "cwe_id",
                  "name"
                ],
                "type": "object"
              },
              "type": "array"
            },
            "description": {
              "type": "string"
            },
            "ghsa_id": {
              "type": "string"
            },
            "identifiers": {
              "items": {
                "additionalProperties": false,
                "properties": {
                  "type": {
                    "type": "string"
                  },
                  "value": {
                    "type": "string"
                  }
                },
                "required": [
                  "value",
                  "type"
                ],
                "type": "object"
              },
              "type": "array"
            },
            "published_at": {
              "type": "string"
            },
            "references": {
              "items": {
                "additionalProperties": false,
                "properties": {
                  "url": {
                    "format": "uri",
                    "type": "string"
                  }
                },
                "required": [
                  "url"
                ],
                "type": "object"
              },
              "type": "array"
            },
            "severity": {
              "type": "string"
            },
            "summary": {
              "type": "string"
            },
            "updated_at": {
              "type": "string"
            },
            "vulnerabilities": {
              "items": {
                "additionalProperties": false,
                "properties": {
                  "first_patched_version": {
                    "additionalProperties": false,
                    "properties": {
                      "identifier": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "identifier"
                    ],
                    "type": [
                      "object",
                      "null"
                    ]
                  },
                  "package": {
                    "additionalProperties": false,
                    "properties": {
                      "ecosystem": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "ecosystem",
                      "name"
                    ],
                    "type": "object"
                  },
                  "severity": {
                    "type": "string"
                  },
                  "vulnerable_version_range": {
                    "type": "string"
                  }
                },
                "required": [
                  "package",
                  "severity",
                  "vulnerable_version_range",
                  "first_patched_version"
                ],
                "type": "object"
              },
              "type": "array"
            },
            "withdrawn_at": {
              "type": "string"
            }
          },
          "required": [
            "cvss",
            "cwes",
            "ghsa_id",
            "summary",
            "description",
            "severity",
            "identifiers",
            "references",
            "published_at",
            "updated_at",
            "withdrawn_at",
            "vulnerabilities"
          ],
          "type": "object"
        }
      },
      "required": [
        "action",
        "security_advisory"
      ],
      "title": "security_advisory withdrawn event",
      "type": "object"
    },
    "security_advisory_event": {
      "oneOf": [
        {
          "$ref": "#/definitions/security_advisory$performed"
        },
        {
          "$ref": "#/definitions/security_advisory$published"
        },
        {
          "$ref": "#/definitions/security_advisory$updated"
        },
        {
          "$ref": "#/definitions/security_advisory$withdrawn"
        }
      ]
    },
    "simple-pull-request": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "additionalProperties": false,
      "properties": {
        "_links": {
          "additionalProperties": false,
          "properties": {
            "comments": {
              "$ref": "#/definitions/link"
            },
            "commits": {
              "$ref": "#/definitions/link"
            },
            "html": {
              "$ref": "#/definitions/link"
            },
            "issue": {
              "$ref": "#/definitions/link"
            },
            "review_comment": {
              "$ref": "#/definitions/link"
            },
            "review_comments": {
              "$ref": "#/definitions/link"
            },
            "self": {
              "$ref": "#/definitions/link"
            },
            "statuses": {
              "$ref": "#/definitions/link"
            }
          },
          "required": [
            "self",
            "html",
            "issue",
            "comments",
            "review_comments",
            "review_comment",
            "commits",
            "statuses"
          ],
          "type": "object"
        },
        "active_lock_reason": {
          "enum": [
            "resolved",
            "off-topic",
            "too heated",
            "spam",
            null
          ],
          "type": [
            "string",
            "null"
          ]
        },
        "assignee": {
          "oneOf": [
            {
              "$ref": "#/definitions/user"
            },
            {
              "type": "null"
            }
          ]
        },
        "assignees": {
          "items": {
            "$ref": "#/definitions/user"
          },
          "type": "array"
        },
        "author_association": {
          "$ref": "#/definitions/author_association"
        },
        "auto_merge": {
          "oneOf": [
            {
              "$ref": "#/definitions/auto-merge"
            },
            {
              "type": "null"
            }
          ]
        },
        "base": {
          "additionalProperties": false,
          "properties": {
            "label": {
              "type": "string"
            },
            "ref": {
              "type": "string"
            },
            "repo": {
              "$ref": "#/definitions/repository"
            },
            "sha": {
              "type": "string"
            },
            "user": {
              "$ref": "#/definitions/user"
            }
          },
          "required": [
            "label",
            "ref",
            "sha",
            "user",
            "repo"
          ],
          "type": "object"
        },
        "body": {
          "type": "string"
        },
        "closed_at": {
          "type": [
            "string",
            "null"
          ]
        },
        "comments_url": {
          "format": "uri",
          "type": "string"
        },
        "commits_url": {
          "format": "uri",
          "type": "string"
        },
        "created_at": {
          "type": "string"
        },
        "diff_url": {
          "format": "uri",
          "type": "string"
        },
        "draft": {
          "type": "boolean"
        },
        "head": {
          "additionalProperties": false,
          "properties": {
            "label": {
              "type": "string"
            },
            "ref": {
              "type": "string"
            },
            "repo": {
              "$ref": "#/definitions/repository"
            },
            "sha": {
              "type": "string"
            },
            "user": {
              "$ref": "#/definitions/user"
            }
          },
          "required": [
            "label",
            "ref",
            "sha",
            "user",
            "repo"
          ],
          "type": "object"
        },
        "html_url": {
          "format": "uri",
          "type": "string"
        },
        "id": {
          "type": "integer"
        },
        "issue_url": {
          "format": "uri",
          "type": "string"
        },
        "labels": {
          "items": {
            "$ref": "#/definitions/label"
          },
          "type": "array"
        },
        "locked": {
          "type": "boolean"
        },
        "merge_commit_sha": {
          "type": [
            "string",
            "null"
          ]
        },
        "merged_at": {
          "type": [
            "string",
            "null"
          ]
        },
        "milestone": {
          "oneOf": [
            {
              "$ref": "#/definitions/milestone"
            },
            {
              "type": "null"
            }
          ]
        },
        "node_id": {
          "type": "string"
        },
        "number": {
          "type": "integer"
        },
        "patch_url": {
          "format": "uri",
          "type": "string"
        },
        "requested_reviewers": {
          "items": {
            "oneOf": [
              {
                "$ref": "#/definitions/user"
              },
              {
                "$ref": "#/definitions/team"
              }
            ]
          },
          "type": "array"
        },
        "requested_teams": {
          "items": {
            "$ref": "#/definitions/team"
          },
          "type": "array"
        },
        "review_comment_url": {
          "format": "uri-template",
          "type": "string"
        },
        "review_comments_url": {
          "format": "uri",
          "type": "string"
        },
        "state": {
          "enum": [
            "open",
            "closed"
          ],
          "type": "string"
        },
        "statuses_url": {
          "format": "uri",
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "updated_at": {
          "type": "string"
        },
        "url": {
          "format": "uri",
          "type": "string"
        },
        "user": {
          "$ref": "#/definitions/user"
        }
      },
      "required": [
        "url",
        "id",
        "node_id",
        "html_url",
        "diff_url",
        "patch_url",
        "issue_url",
        "number",
        "state",
        "locked",
        "title",
        "user",
        "body",
        "created_at",
        "updated_at",
        "closed_at",
        "merged_at",
        "merge_commit_sha",
        "assignee",
        "assignees",
        "requested_reviewers",
        "requested_teams",
        "labels",
        "milestone",
        "draft",
        "commits_url",
        "review_comments_url",
        "review_comment_url",
        "comments_url",
        "statuses_url",
        "head",
        "base",
        "_links",
        "author_association",
        "auto_merge",
        "active_lock_reason"
      ],
      "title": "Simple Pull Request",
      "type": "object"
    },
    "sponsorship$cancelled": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "additionalProperties": false,
      "properties": {
        "action": {
          "enum": [
            "cancelled"
          ],
          "type": "string"
        },
        "sender": {
          "$ref": "#/definitions/user"
        },
        "sponsorship": {
          "additionalProperties": false,
          "properties": {
            "created_at": {
              "type": "string"
            },
            "node_id": {
              "type": "string"
            },
            "privacy_level": {
              "type": "string"
            },
            "sponsor": {
              "$ref": "#/definitions/user"
            },
            "sponsorable": {
              "$ref": "#/definitions/user"
            },
            "tier": {
              "$ref": "#/definitions/sponsorship-tier"
            }
          },
          "required": [
            "node_id",
            "created_at",
            "sponsorable",
            "sponsor",
            "privacy_level",
            "tier"
          ],
          "type": "object"
        }
      },
      "required": [
        "action",
        "sponsorship",
        "sender"
      ],
      "title": "sponsorship cancelled event",
      "type": "object"
    },
    "sponsorship$created": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "additionalProperties": false,
      "properties": {
        "action": {
          "enum": [
            "created"
          ],
          "type": "string"
        },
        "sender": {
          "$ref": "#/definitions/user"
        },
        "sponsorship": {
          "additionalProperties": false,
          "properties": {
            "created_at": {
              "type": "string"
            },
            "node_id": {
              "type": "string"
            },
            "privacy_level": {
              "type": "string"
            },
            "sponsor": {
              "$ref": "#/definitions/user"
            },
            "sponsorable": {
              "$ref": "#/definitions/user"
            },
            "tier": {
              "$ref": "#/definitions/sponsorship-tier"
            }
          },
          "required": [
            "node_id",
            "created_at",
            "sponsorable",
            "sponsor",
            "privacy_level",
            "tier"
          ],
          "type": "object"
        }
      },
      "required": [
        "action",
        "sponsorship",
        "sender"
      ],
      "title": "sponsorship created event",
      "type": "object"
    },
    "sponsorship$edited": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "additionalProperties": false,
      "properties": {
        "action": {
          "enum": [
            "edited"
          ],
          "type": "string"
        },
        "changes": {
          "additionalProperties": false,
          "properties": {
            "privacy_level": {
              "additionalProperties": false,
              "properties": {
                "from": {
                  "description": "The `edited` event types include the details about the change when someone edits a sponsorship to change the privacy.",
                  "type": "string"
                }
              },
              "required": [
                "from"
              ],
              "type": "object"
            }
          },
          "type": "object"
        },
        "sender": {
          "$ref": "#/definitions/user"
        },
        "sponsorship": {
          "additionalProperties": false,
          "properties": {
            "created_at": {
              "type": "string"
            },
            "node_id": {
              "type": "string"
            },
            "privacy_level": {
              "type": "string"
            },
            "sponsor": {
              "$ref": "#/definitions/user"
            },
            "sponsorable": {
              "$ref": "#/definitions/user"
            },
            "tier": {
              "$ref": "#/definitions/sponsorship-tier"
            }
          },
          "required": [
            "node_id",
            "created_at",
            "sponsorable",
            "sponsor",
            "privacy_level",
            "tier"
          ],
          "type": "object"
        }
      },
      "required": [
        "action",
        "changes",
        "sponsorship",
        "sender"
      ],
      "title": "sponsorship edited event",
      "type": "object"
    },
    "sponsorship$pending_cancellation": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "additionalProperties": false,
      "properties": {
        "action": {
          "enum": [
            "pending_cancellation"
          ],
          "type": "string"
        },
        "effective_date": {
          "description": "The `pending_cancellation` and `pending_tier_change` event types will include the date the cancellation or tier change will take effect.",
          "type": "string"
        },
        "sender": {
          "$ref": "#/definitions/user"
        },
        "sponsorship": {
          "additionalProperties": false,
          "properties": {
            "created_at": {
              "type": "string"
            },
            "node_id": {
              "type": "string"
            },
            "privacy_level": {
              "type": "string"
            },
            "sponsor": {
              "$ref": "#/definitions/user"
            },
            "sponsorable": {
              "$ref": "#/definitions/user"
            },
            "tier": {
              "$ref": "#/definitions/sponsorship-tier"
            }
          },
          "required": [
            "node_id",
            "created_at",
            "sponsorable",
            "sponsor",
            "privacy_level",
            "tier"
          ],
          "type": "object"
        }
      },
      "required": [
        "action",
        "sponsorship",
        "sender"
      ],
      "title": "sponsorship pending_cancellation event",
      "type": "object"
    },
    "sponsorship$pending_tier_change": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "additionalProperties": false,
      "properties": {
        "action": {
          "enum": [
            "pending_tier_change"
          ],
          "type": "string"
        },
        "changes": {
          "additionalProperties": false,
          "properties": {
            "tier": {
              "additionalProperties": false,
              "properties": {
                "from": {
                  "$ref": "#/definitions/sponsorship-tier"
                }
              },
              "required": [
                "from"
              ],
              "type": "object"
            }
          },
          "required": [
            "tier"
          ],
          "type": "object"
        },
        "effective_date": {
          "description": "The `pending_cancellation` and `pending_tier_change` event types will include the date the cancellation or tier change will take effect.",
          "type": "string"
        },
        "sender": {
          "$ref": "#/definitions/user"
        },
        "sponsorship": {
          "additionalProperties": false,
          "properties": {
            "created_at": {
              "type": "string"
            },
            "node_id": {
              "type": "string"
            },
            "privacy_level": {
              "type": "string"
            },
            "sponsor": {
              "$ref": "#/definitions/user"
            },
            "sponsorable": {
              "$ref": "#/definitions/user"
            },
            "tier": {
              "$ref": "#/definitions/sponsorship-tier"
            }
          },
          "required": [
            "node_id",
            "created_at",
            "sponsorable",
            "sponsor",
            "privacy_level",
            "tier"
          ],
          "type": "object"
        }
      },
      "required": [
        "action",
        "changes",
        "sponsorship",
        "sender"
      ],
      "title": "sponsorship pending_tier_change event",
      "type": "object"
    },
    "sponsorship$tier_changed": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "additionalProperties": false,
      "properties": {
        "action": {
          "enum": [
            "tier_changed"
          ],
          "type": "string"
        },
        "changes": {
          "additionalProperties": false,
          "properties": {
            "tier": {
              "additionalProperties": false,
              "properties": {
                "from": {
                  "$ref": "#/definitions/sponsorship-tier"
                }
              },
              "required": [
                "from"
              ],
              "type": "object"
            }
          },
          "required": [
            "tier"
          ],
          "type": "object"
        },
        "sender": {
          "$ref": "#/definitions/user"
        },
        "sponsorship": {
          "additionalProperties": false,
          "properties": {
            "created_at": {
              "type": "string"
            },
            "node_id": {
              "type": "string"
            },
            "privacy_level": {
              "type": "string"
            },
            "sponsor": {
              "$ref": "#/definitions/user"
            },
            "sponsorable": {
              "$ref": "#/definitions/user"
            },
            "tier": {
              "$ref": "#/definitions/sponsorship-tier"
            }
          },
          "required": [
            "node_id",
            "created_at",
            "sponsorable",
            "sponsor",
            "privacy_level",
            "tier"
          ],
          "type": "object"
        }
      },
      "required": [
        "action",
        "changes",
        "sponsorship",
        "sender"
      ],
      "title": "sponsorship tier_changed event",
      "type": "object"
    },
    "sponsorship-tier": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "additionalProperties": false,
      "description": "The `tier_changed` and `pending_tier_change` will include the original tier before the change or pending change. For more information, see the pending tier change payload.",
      "properties": {
        "created_at": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "is_custom_ammount": {
          "type": "boolean"
        },
        "is_one_time": {
          "type": "boolean"
        },
        "monthly_price_in_cents": {
          "type": "integer"
        },
        "monthly_price_in_dollars": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "node_id": {
          "type": "string"
        }
      },
      "required": [
        "node_id",
        "created_at",
        "description",
        "monthly_price_in_cents",
        "monthly_price_in_dollars",
        "name",
        "is_one_time",
        "is_custom_ammount"
      ],
      "title": "Sponsorship Tier",
      "type": "object"
    },
    "sponsorship_event": {
      "oneOf": [
        {
          "$ref": "#/definitions/sponsorship$cancelled"
        },
        {
          "$ref": "#/definitions/sponsorship$created"
        },
        {
          "$ref": "#/definitions/sponsorship$edited"
        },
        {
          "$ref": "#/definitions/sponsorship$pending_cancellation"
        },
        {
          "$ref": "#/definitions/sponsorship$pending_tier_change"
        },
        {
          "$ref": "#/definitions/sponsorship$tier_changed"
        }
      ]
    },
    "star$created": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "additionalProperties": false,
      "properties": {
        "action": {
          "enum": [
            "created"
          ],
          "type": "string"
        },
        "installation": {
          "$ref": "#/definitions/installation-lite"
        },
        "organization": {
          "$ref": "#/definitions/organization"
        },
        "repository": {
          "$ref": "#/definitions/repository"
        },
        "sender": {
          "$ref": "#/definitions/user"
        },
        "starred_at": {
          "description": "The time the star was created. This is a timestamp in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`. Will be `null` for the `deleted` action.",
          "type": "string"
        }
      },
      "required": [
        "action",
        "starred_at",
        "repository",
        "sender"
      ],
      "title": "star created event",
      "type": "object"
    },
    "star$deleted": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "additionalProperties": false,
      "properties": {
        "action": {
          "enum": [
            "deleted"
          ],
          "type": "string"
        },
        "installation": {
          "$ref": "#/definitions/installation-lite"
        },
        "organization": {
          "$ref": "#/definitions/organization"
        },
        "repository": {
          "$ref": "#/definitions/repository"
        },
        "sender": {
          "$ref": "#/definitions/user"
        },
        "starred_at": {
          "description": "The time the star was created. This is a timestamp in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`. Will be `null` for the `deleted` action.",
          "type": "null"
        }
      },
      "required": [
        "action",
        "starred_at",
        "repository",
        "sender"
      ],
      "title": "star deleted event",
      "type": "object"
    },
    "star_event": {
      "oneOf": [
        {
          "$ref": "#/definitions/star$created"
        },
        {
          "$ref": "#/definitions/star$deleted"
        }
      ]
    },
    "status$event": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "additionalProperties": false,
      "properties": {
        "avatar_url": {
          "format": "uri",
          "type": [
            "string",
            "null"
          ]
        },
        "branches": {
          "description": "An array of branch objects containing the status' SHA. Each branch contains the given SHA, but the SHA may or may not be the head of the branch. The array includes a maximum of 10 branches.",
          "items": {
            "additionalProperties": false,
            "properties": {
              "commit": {
                "additionalProperties": false,
                "properties": {
                  "sha": {
                    "type": "string"
                  },
                  "url": {
                    "format": "uri",
                    "type": "string"
                  }
                },
                "required": [
                  "sha",
                  "url"
                ],
                "type": "object"
              },
              "name": {
                "type": "string"
              },
              "protected": {
                "type": "boolean"
              }
            },
            "required": [
              "name",
              "commit",
              "protected"
            ],
            "type": "object"
          },
          "type": "array"
        },
        "commit": {
          "additionalProperties": false,
          "properties": {
            "author": {
              "oneOf": [
                {
                  "$ref": "#/definitions/user"
                },
                {
                  "type": "null"
                }
              ]
            },
            "comments_url": {
              "format": "uri",
              "type": "string"
            },
            "commit": {
              "additionalProperties": false,
              "properties": {
                "author": {
                  "allOf": [
                    {
                      "$ref": "#/definitions/committer"
                    },
                    {
                      "properties": {
                        "date": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "date"
                      ],
                      "tsAdditionalProperties": false,
                      "type": "object"
                    }
                  ]
                },
                "comment_count": {
                  "type": "integer"
                },
                "committer": {
                  "allOf": [
                    {
                      "$ref": "#/definitions/committer"
                    },
                    {
                      "properties": {
                        "date": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "date"
                      ],
                      "tsAdditionalProperties": false,
                      "type": "object"
                    }
                  ]
                },
                "message": {
                  "type": "string"
                },
                "tree": {
                  "additionalProperties": false,
                  "properties": {
                    "sha": {
                      "type": "string"
                    },
                    "url": {
                      "format": "uri",
                      "type": "string"
                    }
                  },
                  "required": [
                    "sha",
                    "url"
                  ],
                  "type": "object"
                },
                "url": {
                  "format": "uri",
                  "type": "string"
                },
                "verification": {
                  "additionalProperties": false,
                  "properties": {
                    "payload": {
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "reason": {
                      "enum": [
                        "expired_key",
                        "not_signing_key",
                        "gpgverify_error",
                        "gpgverify_unavailable",
                        "unsigned",
                        "unknown_signature_type",
                        "no_user",
                        "unverified_email",
                        "bad_email",
                        "unknown_key",
                        "malformed_signature",
                        "invalid",
                        "valid"
                      ],
                      "type": "string"
                    },
                    "signature": {
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "verified": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "verified",
                    "reason",
                    "signature",
                    "payload"
                  ],
                  "type": "object"
                }
              },
              "required": [
                "author",
                "committer",
                "message",
                "tree",
                "url",
                "comment_count",
                "verification"
              ],
              "type": "object"
            },
            "committer": {
              "oneOf": [
                {
                  "$ref": "#/definitions/user"
                },
                {
                  "type": "null"
                }
              ]
            },
            "html_url": {
              "format": "uri",
              "type": "string"
            },
            "node_id": {
              "type": "string"
            },
            "parents": {
              "items": {
                "additionalProperties": false,
                "properties": {
                  "html_url": {
                    "format": "uri",
                    "type": "string"
                  },
                  "sha": {
                    "type": "string"
                  },
                  "url": {
                    "format": "uri",
                    "type": "string"
                  }
                },
                "required": [
                  "sha",
                  "url",
                  "html_url"
                ],
                "type": "object"
              },
              "type": "array"
            },
            "sha": {
              "type": "string"
            },
            "url": {
              "format": "uri",
              "type": "string"
            }
          },
          "required": [
            "sha",
            "node_id",
            "commit",
            "url",
            "html_url",
            "comments_url",
            "author",
            "committer",
            "parents"
          ],
          "type": "object"
        },
        "context": {
          "type": "string"
        },
        "created_at": {
          "type": "string"
        },
        "description": {
          "description": "The optional human-readable description added to the status.",
          "type": [
            "string",
            "null"
          ]
        },
        "id": {
          "description": "The unique identifier of the status.",
          "type": "integer"
        },
        "installation": {
          "$ref": "#/definitions/installation-lite"
        },
        "name": {
          "type": "string"
        },
        "organization": {
          "$ref": "#/definitions/organization"
        },
        "repository": {
          "$ref": "#/definitions/repository"
        },
        "sender": {
          "$ref": "#/definitions/user"
        },
        "sha": {
          "description": "The Commit SHA.",
          "type": "string"
        },
        "state": {
          "description": "The new state. Can be `pending`, `success`, `failure`, or `error`.",
          "enum": [
            "pending",
            "success",
            "failure",
            "error"
          ],
          "type": "string"
        },
        "target_url": {
          "description": "The optional link added to the status.",
          "type": [
            "string",
            "null"
          ]
        },
        "updated_at": {
          "type": "string"
        }
      },
      "required": [
        "id",
        "sha",
        "name",
        "target_url",
        "context",
        "description",
        "state",
        "commit",
        "branches",
        "created_at",
        "updated_at",
        "repository",
        "sender"
      ],
      "title": "status event",
      "type": "object"
    },
    "team": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "additionalProperties": false,
      "description": "Groups of organization members that gives permissions on specified repositories.",
      "properties": {
        "description": {
          "description": "Description of the team",
          "type": [
            "string",
            "null"
          ]
        },
        "html_url": {
          "format": "uri",
          "type": "string"
        },
        "id": {
          "description": "Unique identifier of the team",
          "type": "integer"
        },
        "members_url": {
          "format": "uri-template",
          "type": "string"
        },
        "name": {
          "description": "Name of the team",
          "type": "string"
        },
        "node_id": {
          "type": "string"
        },
        "parent": {
          "additionalProperties": false,
          "properties": {
            "description": {
              "description": "Description of the team",
              "type": [
                "string",
                "null"
              ]
            },
            "html_url": {
              "format": "uri",
              "type": "string"
            },
            "id": {
              "description": "Unique identifier of the team",
              "type": "integer"
            },
            "members_url": {
              "format": "uri-template",
              "type": "string"
            },
            "name": {
              "description": "Name of the team",
              "type": "string"
            },
            "node_id": {
              "type": "string"
            },
            "permission": {
              "description": "Permission that the team will have for its repositories",
              "type": "string"
            },
            "privacy": {
              "enum": [
                "open",
                "closed",
                "secret"
              ],
              "type": "string"
            },
            "repositories_url": {
              "format": "uri",
              "type": "string"
            },
            "slug": {
              "type": "string"
            },
            "url": {
              "description": "URL for the team",
              "format": "uri",
              "type": "string"
            }
          },
          "required": [
            "name",
            "id",
            "node_id",
            "slug",
            "description",
            "privacy",
            "url",
            "html_url",
            "members_url",
            "repositories_url",
            "permission"
          ],
          "type": [
            "object",
            "null"
          ]
        },
        "permission": {
          "description": "Permission that the team will have for its repositories",
          "type": "string"
        },
        "privacy": {
          "enum": [
            "open",
            "closed",
            "secret"
          ],
          "type": "string"
        },
        "repositories_url": {
          "format": "uri",
          "type": "string"
        },
        "slug": {
          "type": "string"
        },
        "url": {
          "description": "URL for the team",
          "format": "uri",
          "type": "string"
        }
      },
      "required": [
        "name",
        "id",
        "node_id",
        "slug",
        "description",
        "privacy",
        "url",
        "html_url",
        "members_url",
        "repositories_url",
        "permission"
      ],
      "title": "Team",
      "type": "object"
    },
    "team$added_to_repository": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "additionalProperties": false,
      "properties": {
        "action": {
          "enum": [
            "added_to_repository"
          ],
          "type": "string"
        },
        "installation": {
          "$ref": "#/definitions/installation-lite"
        },
        "organization": {
          "$ref": "#/definitions/organization"
        },
        "repository": {
          "$ref": "#/definitions/repository"
        },
        "sender": {
          "$ref": "#/definitions/user"
        },
        "team": {
          "$ref": "#/definitions/team"
        }
      },
      "required": [
        "action",
        "team",
        "organization",
        "sender"
      ],
      "title": "team added_to_repository event",
      "type": "object"
    },
    "team$created": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "additionalProperties": false,
      "properties": {
        "action": {
          "enum": [
            "created"
          ],
          "type": "string"
        },
        "installation": {
          "$ref": "#/definitions/installation-lite"
        },
        "organization": {
          "$ref": "#/definitions/organization"
        },
        "repository": {
          "$ref": "#/definitions/repository"
        },
        "sender": {
          "$ref": "#/definitions/user"
        },
        "team": {
          "$ref": "#/definitions/team"
        }
      },
      "required": [
        "action",
        "team",
        "organization",
        "sender"
      ],
      "title": "team created event",
      "type": "object"
    },
    "team$deleted": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "additionalProperties": false,
      "properties": {
        "action": {
          "enum": [
            "deleted"
          ],
          "type": "string"
        },
        "installation": {
          "$ref": "#/definitions/installation-lite"
        },
        "organization": {
          "$ref": "#/definitions/organization"
        },
        "repository": {
          "$ref": "#/definitions/repository"
        },
        "sender": {
          "$ref": "#/definitions/user"
        },
        "team": {
          "$ref": "#/definitions/team"
        }
      },
      "required": [
        "action",
        "team",
        "organization",
        "sender"
      ],
      "title": "team deleted event",
      "type": "object"
    },
    "team$edited": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "additionalProperties": false,
      "properties": {
        "action": {
          "enum": [
            "edited"
          ],
          "type": "string"
        },
        "changes": {
          "additionalProperties": false,
          "description": "The changes to the team if the action was `edited`.",
          "properties": {
            "description": {
              "additionalProperties": false,
              "properties": {
                "from": {
                  "description": "The previous version of the description if the action was `edited`.",
                  "type": "string"
                }
              },
              "required": [
                "from"
              ],
              "type": "object"
            },
            "name": {
              "additionalProperties": false,
              "properties": {
                "from": {
                  "description": "The previous version of the name if the action was `edited`.",
                  "type": "string"
                }
              },
              "required": [
                "from"
              ],
              "type": "object"
            },
            "privacy": {
              "additionalProperties": false,
              "properties": {
                "from": {
                  "description": "The previous version of the team's privacy if the action was `edited`.",
                  "type": "string"
                }
              },
              "required": [
                "from"
              ],
              "type": "object"
            },
            "repository": {
              "additionalProperties": false,
              "properties": {
                "permissions": {
                  "additionalProperties": false,
                  "properties": {
                    "from": {
                      "additionalProperties": false,
                      "properties": {
                        "admin": {
                          "description": "The previous version of the team member's `admin` permission on a repository, if the action was `edited`.",
                          "type": "boolean"
                        },
                        "pull": {
                          "description": "The previous version of the team member's `pull` permission on a repository, if the action was `edited`.",
                          "type": "boolean"
                        },
                        "push": {
                          "description": "The previous version of the team member's `push` permission on a repository, if the action was `edited`.",
                          "type": "boolean"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "required": [
                    "from"
                  ],
                  "type": "object"
                }
              },
              "required": [
                "permissions"
              ],
              "type": "object"
            }
          },
          "required": [],
          "type": "object"
        },
        "installation": {
          "$ref": "#/definitions/installation-lite"
        },
        "organization": {
          "$ref": "#/definitions/organization"
        },
        "repository": {
          "$ref": "#/definitions/repository"
        },
        "sender": {
          "$ref": "#/definitions/user"
        },
        "team": {
          "$ref": "#/definitions/team"
        }
      },
      "required": [
        "action",
        "changes",
        "team",
        "organization",
        "sender"
      ],
      "title": "team edited event",
      "type": "object"
    },
    "team$removed_from_repository": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "additionalProperties": false,
      "properties": {
        "action": {
          "enum": [
            "removed_from_repository"
          ],
          "type": "string"
        },
        "installation": {
          "$ref": "#/definitions/installation-lite"
        },
        "organization": {
          "$ref": "#/definitions/organization"
        },
        "repository": {
          "$ref": "#/definitions/repository"
        },
        "sender": {
          "$ref": "#/definitions/user"
        },
        "team": {
          "$ref": "#/definitions/team"
        }
      },
      "required": [
        "action",
        "team",
        "organization",
        "sender"
      ],
      "title": "team removed_from_repository event",
      "type": "object"
    },
    "team_add$event": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "additionalProperties": false,
      "properties": {
        "installation": {
          "$ref": "#/definitions/installation-lite"
        },
        "organization": {
          "$ref": "#/definitions/organization"
        },
        "repository": {
          "$ref": "#/definitions/repository"
        },
        "sender": {
          "$ref": "#/definitions/user"
        },
        "team": {
          "$ref": "#/definitions/team"
        }
      },
      "required": [
        "team",
        "repository",
        "organization",
        "sender"
      ],
      "title": "team_add event",
      "type": "object"
    },
    "team_event": {
      "oneOf": [
        {
          "$ref": "#/definitions/team$added_to_repository"
        },
        {
          "$ref": "#/definitions/team$created"
        },
        {
          "$ref": "#/definitions/team$deleted"
        },
        {
          "$ref": "#/definitions/team$edited"
        },
        {
          "$ref": "#/definitions/team$removed_from_repository"
        }
      ]
    },
    "user": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "additionalProperties": false,
      "properties": {
        "avatar_url": {
          "format": "uri",
          "type": "string"
        },
        "email": {
          "type": [
            "string",
            "null"
          ]
        },
        "events_url": {
          "format": "uri-template",
          "type": "string"
        },
        "followers_url": {
          "format": "uri",
          "type": "string"
        },
        "following_url": {
          "format": "uri-template",
          "type": "string"
        },
        "gists_url": {
          "format": "uri-template",
          "type": "string"
        },
        "gravatar_id": {
          "type": "string"
        },
        "html_url": {
          "format": "uri",
          "type": "string"
        },
        "id": {
          "type": "integer"
        },
        "login": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "node_id": {
          "type": "string"
        },
        "organizations_url": {
          "format": "uri",
          "type": "string"
        },
        "received_events_url": {
          "format": "uri",
          "type": "string"
        },
        "repos_url": {
          "format": "uri",
          "type": "string"
        },
        "site_admin": {
          "type": "boolean"
        },
        "starred_url": {
          "format": "uri-template",
          "type": "string"
        },
        "subscriptions_url": {
          "format": "uri",
          "type": "string"
        },
        "type": {
          "enum": [
            "Bot",
            "User",
            "Organization"
          ],
          "type": "string"
        },
        "url": {
          "format": "uri",
          "type": "string"
        }
      },
      "required": [
        "login",
        "id",
        "node_id",
        "avatar_url",
        "gravatar_id",
        "url",
        "html_url",
        "followers_url",
        "following_url",
        "gists_url",
        "starred_url",
        "subscriptions_url",
        "organizations_url",
        "repos_url",
        "events_url",
        "received_events_url",
        "type",
        "site_admin"
      ],
      "title": "User",
      "type": "object"
    },
    "watch$started": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "additionalProperties": false,
      "properties": {
        "action": {
          "enum": [
            "started"
          ],
          "type": "string"
        },
        "installation": {
          "$ref": "#/definitions/installation-lite"
        },
        "organization": {
          "$ref": "#/definitions/organization"
        },
        "repository": {
          "$ref": "#/definitions/repository"
        },
        "sender": {
          "$ref": "#/definitions/user"
        }
      },
      "required": [
        "action",
        "repository",
        "sender"
      ],
      "title": "watch started event",
      "type": "object"
    },
    "watch_event": {
      "oneOf": [
        {
          "$ref": "#/definitions/watch$started"
        }
      ]
    },
    "webhook-events": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "oneOf": [
        {
          "items": {
            "enum": [
              "branch_protection_rule",
              "check_run",
              "check_suite",
              "code_scanning_alert",
              "commit_comment",
              "create",
              "delete",
              "deployment",
              "deployment_status",
              "deploy_key",
              "discussion",
              "discussion_comment",
              "fork",
              "gollum",
              "issues",
              "issue_comment",
              "label",
              "member",
              "membership",
              "meta",
              "milestone",
              "organization",
              "org_block",
              "package",
              "page_build",
              "project",
              "project_card",
              "project_column",
              "public",
              "pull_request",
              "pull_request_review",
              "pull_request_review_comment",
              "pull_request_review_thread",
              "push",
              "registry_package",
              "release",
              "repository",
              "repository_import",
              "repository_vulnerability_alert",
              "secret_scanning_alert",
              "star",
              "status",
              "team",
              "team_add",
              "watch",
              "workflow_job",
              "workflow_run"
            ],
            "type": "string"
          },
          "type": "array"
        },
        {
          "items": {
            "const": "*",
            "type": "string"
          },
          "maxItems": 1,
          "minItems": 1,
          "type": "array"
        }
      ],
      "title": "Webhook Events"
    },
    "workflow": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "additionalProperties": false,
      "properties": {
        "badge_url": {
          "format": "uri",
          "type": "string"
        },
        "created_at": {
          "format": "date-time",
          "type": "string"
        },
        "html_url": {
          "format": "uri",
          "type": "string"
        },
        "id": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "node_id": {
          "type": "string"
        },
        "path": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "updated_at": {
          "format": "date-time",
          "type": "string"
        },
        "url": {
          "format": "uri",
          "type": "string"
        }
      },
      "required": [
        "badge_url",
        "created_at",
        "html_url",
        "id",
        "name",
        "node_id",
        "path",
        "state",
        "updated_at",
        "url"
      ],
      "title": "Workflow",
      "type": "object"
    },
    "workflow-job": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "additionalProperties": false,
      "description": "The workflow job. Many `workflow_job` keys, such as `head_sha`, `conclusion`, and `started_at` are the same as those in a [`check_run`](#check_run) object.",
      "properties": {
        "check_run_url": {
          "format": "uri",
          "type": "string"
        },
        "completed_at": {
          "type": [
            "string",
            "null"
          ]
        },
        "conclusion": {
          "enum": [
            "success",
            "failure",
            "cancelled",
            "skipped",
            null
          ],
          "type": [
            "string",
            "null"
          ]
        },
        "head_sha": {
          "type": "string"
        },
        "html_url": {
          "format": "uri",
          "type": "string"
        },
        "id": {
          "type": "integer"
        },
        "labels": {
          "description": "Custom labels for the job. Specified by the [`\"runs-on\"` attribute](https://docs.github.com/en/actions/reference/workflow-syntax-for-github-actions#jobsjob_idruns-on) in the workflow YAML.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "name": {
          "type": "string"
        },
        "node_id": {
          "type": "string"
        },
        "run_attempt": {
          "type": "integer"
        },
        "run_id": {
          "type": "number"
        },
        "run_url": {
          "format": "uri",
          "type": "string"
        },
        "runner_group_id": {
          "description": "The ID of the runner group that is running this job. This will be `null` as long as `workflow_job[status]` is `queued`.",
          "type": [
            "integer",
            "null"
          ]
        },
        "runner_group_name": {
          "description": "The name of the runner group that is running this job. This will be `null` as long as `workflow_job[status]` is `queued`.",
          "type": [
            "string",
            "null"
          ]
        },
        "runner_id": {
          "description": "The ID of the runner that is running this job. This will be `null` as long as `workflow_job[status]` is `queued`.",
          "type": [
            "integer",
            "null"
          ]
        },
        "runner_name": {
          "description": "The name of the runner that is running this job. This will be `null` as long as `workflow_job[status]` is `queued`.",
          "type": [
            "string",
            "null"
          ]
        },
        "started_at": {
          "type": "string"
        },
        "status": {
          "description": "The current status of the job. Can be `queued`, `in_progress`, or `completed`.",
          "enum": [
            "queued",
            "in_progress",
            "completed"
          ],
          "type": "string"
        },
        "steps": {
          "items": {
            "$ref": "#/definitions/workflow-step"
          },
          "minItems": 1,
          "type": "array"
        },
        "url": {
          "format": "uri",
          "type": "string"
        }
      },
      "required": [
        "id",
        "run_id",
        "run_url",
        "run_attempt",
        "node_id",
        "head_sha",
        "url",
        "html_url",
        "status",
        "conclusion",
        "started_at",
        "completed_at",
        "name",
        "steps",
        "check_run_url",
        "labels",
        "runner_id",
        "runner_name",
        "runner_group_id",
        "runner_group_name"
      ],
      "title": "Workflow Job",
      "type": "object"
    },
    "workflow-run": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "additionalProperties": false,
      "properties": {
        "actor": {
          "$ref": "#/definitions/user"
        },
        "artifacts_url": {
          "format": "uri",
          "type": "string"
        },
        "cancel_url": {
          "format": "uri",
          "type": "string"
        },
        "check_suite_id": {
          "type": "integer"
        },
        "check_suite_node_id": {
          "type": "string"
        },
        "check_suite_url": {
          "format": "uri",
          "type": "string"
        },
        "conclusion": {
          "enum": [
            "success",
            "failure",
            "neutral",
            "cancelled",
            "timed_out",
            "action_required",
            "stale",
            "skipped",
            null
          ],
          "type": [
            "string",
            "null"
          ]
        },
        "created_at": {
          "format": "date-time",
          "type": "string"
        },
        "event": {
          "type": "string"
        },
        "head_branch": {
          "type": "string"
        },
        "head_commit": {
          "$ref": "#/definitions/commit-simple"
        },
        "head_repository": {
          "$ref": "#/definitions/repository-lite"
        },
        "head_sha": {
          "type": "string"
        },
        "html_url": {
          "format": "uri",
          "type": "string"
        },
        "id": {
          "type": "integer"
        },
        "jobs_url": {
          "format": "uri",
          "type": "string"
        },
        "logs_url": {
          "format": "uri",
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "node_id": {
          "type": "string"
        },
        "path": {
          "type": "string"
        },
        "previous_attempt_url": {
          "oneOf": [
            {
              "format": "uri",
              "type": "string"
            },
            {
              "type": "null"
            }
          ]
        },
        "pull_requests": {
          "items": {
            "additionalProperties": false,
            "properties": {
              "base": {
                "additionalProperties": false,
                "properties": {
                  "ref": {
                    "type": "string"
                  },
                  "repo": {
                    "$ref": "#/definitions/repo-ref"
                  },
                  "sha": {
                    "type": "string"
                  }
                },
                "required": [
                  "ref",
                  "sha",
                  "repo"
                ],
                "type": "object"
              },
              "head": {
                "additionalProperties": false,
                "properties": {
                  "ref": {
                    "type": "string"
                  },
                  "repo": {
                    "$ref": "#/definitions/repo-ref"
                  },
                  "sha": {
                    "type": "string"
                  }
                },
                "required": [
                  "ref",
                  "sha",
                  "repo"
                ],
                "type": "object"
              },
              "id": {
                "type": "number"
              },
              "number": {
                "type": "number"
              },
              "url": {
                "format": "uri",
                "type": "string"
              }
            },
            "required": [
              "url",
              "id",
              "number",
              "head",
              "base"
            ],
            "type": "object"
          },
          "type": "array"
        },
        "repository": {
          "$ref": "#/definitions/repository-lite"
        },
        "rerun_url": {
          "format": "uri",
          "type": "string"
        },
        "run_attempt": {
          "type": "integer"
        },
        "run_number": {
          "type": "integer"
        },
        "run_started_at": {
          "format": "date-time",
          "type": "string"
        },
        "status": {
          "enum": [
            "requested",
            "in_progress",
            "completed",
            "queued",
            "waiting"
          ],
          "type": "string"
        },
        "triggering_actor": {
          "$ref": "#/definitions/user"
        },
        "updated_at": {
          "format": "date-time",
          "type": "string"
        },
        "url": {
          "format": "uri",
          "type": "string"
        },
        "workflow_id": {
          "type": "integer"
        },
        "workflow_url": {
          "format": "uri",
          "type": "string"
        }
      },
      "required": [
        "artifacts_url",
        "cancel_url",
        "check_suite_url",
        "check_suite_id",
        "check_suite_node_id",
        "conclusion",
        "created_at",
        "event",
        "head_branch",
        "head_commit",
        "head_repository",
        "head_sha",
        "html_url",
        "id",
        "jobs_url",
        "logs_url",
        "node_id",
        "name",
        "pull_requests",
        "repository",
        "rerun_url",
        "run_number",
        "status",
        "updated_at",
        "url",
        "workflow_id",
        "workflow_url",
        "run_attempt",
        "run_started_at",
        "previous_attempt_url",
        "actor",
        "triggering_actor"
      ],
      "title": "Workflow Run",
      "type": "object"
    },
    "workflow-step": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "oneOf": [
        {
          "$ref": "#/definitions/workflow-step-in_progress"
        },
        {
          "$ref": "#/definitions/workflow-step-completed"
        }
      ],
      "title": "Workflow Step",
      "type": "object"
    },
    "workflow-step-completed": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "additionalProperties": false,
      "properties": {
        "completed_at": {
          "type": "string"
        },
        "conclusion": {
          "enum": [
            "failure",
            "skipped",
            "success"
          ],
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "number": {
          "type": "integer"
        },
        "started_at": {
          "type": "string"
        },
        "status": {
          "enum": [
            "completed"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "status",
        "conclusion",
        "number",
        "started_at",
        "completed_at"
      ],
      "title": "Workflow Step (Completed)",
      "type": "object"
    },
    "workflow-step-in_progress": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "additionalProperties": false,
      "properties": {
        "completed_at": {
          "type": "null"
        },
        "conclusion": {
          "type": "null"
        },
        "name": {
          "type": "string"
        },
        "number": {
          "type": "integer"
        },
        "started_at": {
          "type": "string"
        },
        "status": {
          "enum": [
            "in_progress"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "status",
        "conclusion",
        "number",
        "started_at",
        "completed_at"
      ],
      "title": "Workflow Step (In Progress)",
      "type": "object"
    },
    "workflow_dispatch$event": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "additionalProperties": false,
      "properties": {
        "inputs": {
          "description": "Inputs to the workflow. Each key represents the name of the input while it's value represents the value of that input.",
          "oneOf": [
            {
              "additionalProperties": true,
              "properties": {},
              "type": "object"
            },
            {
              "type": "null"
            }
          ]
        },
        "installation": {
          "$ref": "#/definitions/installation-lite"
        },
        "organization": {
          "$ref": "#/definitions/organization"
        },
        "ref": {
          "description": "The branch ref from which the workflow was run.",
          "type": "string"
        },
        "repository": {
          "$ref": "#/definitions/repository"
        },
        "sender": {
          "$ref": "#/definitions/user"
        },
        "workflow": {
          "description": "Relative path to the workflow file which contains the workflow.",
          "type": "string"
        }
      },
      "required": [
        "inputs",
        "ref",
        "repository",
        "sender",
        "workflow"
      ],
      "title": "workflow_dispatch event",
      "type": "object"
    },
    "workflow_job$completed": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "additionalProperties": false,
      "properties": {
        "action": {
          "enum": [
            "completed"
          ],
          "type": "string"
        },
        "installation": {
          "$ref": "#/definitions/installation-lite"
        },
        "organization": {
          "$ref": "#/definitions/organization"
        },
        "repository": {
          "$ref": "#/definitions/repository"
        },
        "sender": {
          "$ref": "#/definitions/user"
        },
        "workflow_job": {
          "allOf": [
            {
              "$ref": "#/definitions/workflow-job"
            },
            {
              "properties": {
                "conclusion": {
                  "enum": [
                    "success",
                    "failure",
                    "cancelled",
                    "skipped"
                  ],
                  "type": "string"
                }
              },
              "required": [
                "conclusion"
              ],
              "tsAdditionalProperties": false,
              "type": "object"
            }
          ]
        }
      },
      "required": [
        "action",
        "repository",
        "sender",
        "workflow_job"
      ],
      "title": "workflow_job completed event",
      "type": "object"
    },
    "workflow_job$in_progress": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "additionalProperties": false,
      "properties": {
        "action": {
          "enum": [
            "in_progress"
          ],
          "type": "string"
        },
        "installation": {
          "$ref": "#/definitions/installation-lite"
        },
        "organization": {
          "$ref": "#/definitions/organization"
        },
        "repository": {
          "$ref": "#/definitions/repository"
        },
        "sender": {
          "$ref": "#/definitions/user"
        },
        "workflow_job": {
          "allOf": [
            {
              "$ref": "#/definitions/workflow-job"
            },
            {
              "properties": {
                "status": {
                  "enum": [
                    "in_progress"
                  ],
                  "type": "string"
                }
              },
              "required": [
                "status"
              ],
              "tsAdditionalProperties": false,
              "type": "object"
            }
          ]
        }
      },
      "required": [
        "action",
        "repository",
        "sender",
        "workflow_job"
      ],
      "title": "workflow_job in_progress event",
      "type": "object"
    },
    "workflow_job$queued": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "additionalProperties": false,
      "properties": {
        "action": {
          "enum": [
            "queued"
          ],
          "type": "string"
        },
        "installation": {
          "$ref": "#/definitions/installation-lite"
        },
        "organization": {
          "$ref": "#/definitions/organization"
        },
        "repository": {
          "$ref": "#/definitions/repository"
        },
        "sender": {
          "$ref": "#/definitions/user"
        },
        "workflow_job": {
          "additionalProperties": false,
          "properties": {
            "check_run_url": {
              "format": "uri",
              "type": "string"
            },
            "completed_at": {
              "type": "null"
            },
            "conclusion": {
              "type": "null"
            },
            "head_sha": {
              "type": "string"
            },
            "html_url": {
              "format": "uri",
              "type": "string"
            },
            "id": {
              "type": "integer"
            },
            "labels": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "name": {
              "type": "string"
            },
            "node_id": {
              "type": "string"
            },
            "run_attempt": {
              "type": "integer"
            },
            "run_id": {
              "type": "number"
            },
            "run_url": {
              "format": "uri",
              "type": "string"
            },
            "runner_group_id": {
              "type": [
                "integer",
                "null"
              ]
            },
            "runner_group_name": {
              "type": [
                "string",
                "null"
              ]
            },
            "runner_id": {
              "type": [
                "integer",
                "null"
              ]
            },
            "runner_name": {
              "type": [
                "string",
                "null"
              ]
            },
            "started_at": {
              "format": "date-time",
              "type": "string"
            },
            "status": {
              "enum": [
                "queued"
              ],
              "type": "string"
            },
            "steps": {
              "items": {
                "$ref": "#/definitions/workflow-step"
              },
              "type": "array"
            },
            "url": {
              "format": "uri",
              "type": "string"
            }
          },
          "required": [
            "id",
            "run_id",
            "run_url",
            "run_attempt",
            "node_id",
            "head_sha",
            "url",
            "html_url",
            "status",
            "conclusion",
            "started_at",
            "completed_at",
            "name",
            "steps",
            "check_run_url",
            "labels",
            "runner_id",
            "runner_name",
            "runner_group_id",
            "runner_group_name"
          ],
          "type": "object"
        }
      },
      "required": [
        "action",
        "repository",
        "sender",
        "workflow_job"
      ],
      "title": "workflow_job queued event",
      "type": "object"
    },
    "workflow_job_event": {
      "oneOf": [
        {
          "$ref": "#/definitions/workflow_job$completed"
        },
        {
          "$ref": "#/definitions/workflow_job$in_progress"
        },
        {
          "$ref": "#/definitions/workflow_job$queued"
        }
      ]
    },
    "workflow_run$completed": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "additionalProperties": false,
      "properties": {
        "action": {
          "enum": [
            "completed"
          ],
          "type": "string"
        },
        "installation": {
          "$ref": "#/definitions/installation-lite"
        },
        "organization": {
          "$ref": "#/definitions/organization"
        },
        "repository": {
          "$ref": "#/definitions/repository"
        },
        "sender": {
          "$ref": "#/definitions/user"
        },
        "workflow": {
          "$ref": "#/definitions/workflow"
        },
        "workflow_run": {
          "allOf": [
            {
              "$ref": "#/definitions/workflow-run"
            },
            {
              "properties": {
                "conclusion": {
                  "enum": [
                    "success",
                    "failure",
                    "neutral",
                    "cancelled",
                    "timed_out",
                    "action_required",
                    "stale",
                    "skipped"
                  ],
                  "type": "string"
                }
              },
              "required": [
                "conclusion"
              ],
              "tsAdditionalProperties": false,
              "type": "object"
            }
          ]
        }
      },
      "required": [
        "action",
        "repository",
        "sender",
        "workflow",
        "workflow_run"
      ],
      "title": "workflow_run completed event",
      "type": "object"
    },
    "workflow_run$requested": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "additionalProperties": false,
      "properties": {
        "action": {
          "enum": [
            "requested"
          ],
          "type": "string"
        },
        "installation": {
          "$ref": "#/definitions/installation-lite"
        },
        "organization": {
          "$ref": "#/definitions/organization"
        },
        "repository": {
          "$ref": "#/definitions/repository"
        },
        "sender": {
          "$ref": "#/definitions/user"
        },
        "workflow": {
          "$ref": "#/definitions/workflow"
        },
        "workflow_run": {
          "$ref": "#/definitions/workflow-run"
        }
      },
      "required": [
        "action",
        "repository",
        "sender",
        "workflow",
        "workflow_run"
      ],
      "title": "workflow_run requested event",
      "type": "object"
    },
    "workflow_run_event": {
      "oneOf": [
        {
          "$ref": "#/definitions/workflow_run$completed"
        },
        {
          "$ref": "#/definitions/workflow_run$requested"
        }
      ]
    }
  },
  "oneOf": [
    {
      "$ref": "#/definitions/branch_protection_rule_event"
    },
    {
      "$ref": "#/definitions/check_run_event"
    },
    {
      "$ref": "#/definitions/check_suite_event"
    },
    {
      "$ref": "#/definitions/code_scanning_alert_event"
    },
    {
      "$ref": "#/definitions/commit_comment_event"
    },
    {
      "$ref": "#/definitions/create$event"
    },
    {
      "$ref": "#/definitions/delete$event"
    },
    {
      "$ref": "#/definitions/deploy_key_event"
    },
    {
      "$ref": "#/definitions/deployment_event"
    },
    {
      "$ref": "#/definitions/deployment_status_event"
    },
    {
      "$ref": "#/definitions/discussion_event"
    },
    {
      "$ref": "#/definitions/discussion_comment_event"
    },
    {
      "$ref": "#/definitions/fork$event"
    },
    {
      "$ref": "#/definitions/github_app_authorization_event"
    },
    {
      "$ref": "#/definitions/gollum$event"
    },
    {
      "$ref": "#/definitions/installation_event"
    },
    {
      "$ref": "#/definitions/installation_repositories_event"
    },
    {
      "$ref": "#/definitions/issue_comment_event"
    },
    {
      "$ref": "#/definitions/issues_event"
    },
    {
      "$ref": "#/definitions/label_event"
    },
    {
      "$ref": "#/definitions/marketplace_purchase_event"
    },
    {
      "$ref": "#/definitions/member_event"
    },
    {
      "$ref": "#/definitions/membership_event"
    },
    {
      "$ref": "#/definitions/meta_event"
    },
    {
      "$ref": "#/definitions/milestone_event"
    },
    {
      "$ref": "#/definitions/org_block_event"
    },
    {
      "$ref": "#/definitions/organization_event"
    },
    {
      "$ref": "#/definitions/package_event"
    },
    {
      "$ref": "#/definitions/page_build$event"
    },
    {
      "$ref": "#/definitions/ping$event"
    },
    {
      "$ref": "#/definitions/project_event"
    },
    {
      "$ref": "#/definitions/project_card_event"
    },
    {
      "$ref": "#/definitions/project_column_event"
    },
    {
      "$ref": "#/definitions/projects_v2_item_event"
    },
    {
      "$ref": "#/definitions/public$event"
    },
    {
      "$ref": "#/definitions/pull_request_event"
    },
    {
      "$ref": "#/definitions/pull_request_review_event"
    },
    {
      "$ref": "#/definitions/pull_request_review_comment_event"
    },
    {
      "$ref": "#/definitions/pull_request_review_thread_event"
    },
    {
      "$ref": "#/definitions/push$event"
    },
    {
      "$ref": "#/definitions/release_event"
    },
    {
      "$ref": "#/definitions/repository_event"
    },
    {
      "$ref": "#/definitions/repository_dispatch$event"
    },
    {
      "$ref": "#/definitions/repository_import$event"
    },
    {
      "$ref": "#/definitions/repository_vulnerability_alert_event"
    },
    {
      "$ref": "#/definitions/secret_scanning_alert_event"
    },
    {
      "$ref": "#/definitions/security_advisory_event"
    },
    {
      "$ref": "#/definitions/sponsorship_event"
    },
    {
      "$ref": "#/definitions/star_event"
    },
    {
      "$ref": "#/definitions/status$event"
    },
    {
      "$ref": "#/definitions/team_event"
    },
    {
      "$ref": "#/definitions/team_add$event"
    },
    {
      "$ref": "#/definitions/watch_event"
    },
    {
      "$ref": "#/definitions/workflow_dispatch$event"
    },
    {
      "$ref": "#/definitions/workflow_job_event"
    },
    {
      "$ref": "#/definitions/workflow_run_event"
    }
  ]
}
